(()=>{var e={208:(e,t,n)=>{"use strict";n.d(t,{A:()=>a});var r=n(601),o=n.n(r),s=n(314),i=n.n(s)()(o());i.push([e.id,".hello-world-message {\n    color: blue;\n}",""]);const a=i},314:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,s){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(i[l]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);r&&i[u[0]]||(void 0!==s&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=s),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),t.push(u))}},t}},601:e=>{"use strict";e.exports=function(e){return e[1]}},65:function(e,t,n){var r,o;!function(s,i){"use strict";r=function(){var e=function(){},t="undefined",n=typeof window!==t&&typeof window.navigator!==t&&/Trident\/|MSIE /.test(window.navigator.userAgent),r=["trace","debug","info","warn","error"],o={},s=null;function i(e,t){var n=e[t];if("function"==typeof n.bind)return n.bind(e);try{return Function.prototype.bind.call(n,e)}catch(t){return function(){return Function.prototype.apply.apply(n,[e,arguments])}}}function a(){console.log&&(console.log.apply?console.log.apply(console,arguments):Function.prototype.apply.apply(console.log,[console,arguments])),console.trace&&console.trace()}function l(r){return"debug"===r&&(r="log"),typeof console!==t&&("trace"===r&&n?a:void 0!==console[r]?i(console,r):void 0!==console.log?i(console,"log"):e)}function c(){for(var n=this.getLevel(),o=0;o<r.length;o++){var s=r[o];this[s]=o<n?e:this.methodFactory(s,n,this.name)}if(this.log=this.debug,typeof console===t&&n<this.levels.SILENT)return"No console available for logging"}function u(e){return function(){typeof console!==t&&(c.call(this),this[e].apply(this,arguments))}}function m(e,t,n){return l(e)||u.apply(this,arguments)}function d(e,n){var i,a,l,u=this,d="loglevel";function p(e){var n=(r[e]||"silent").toUpperCase();if(typeof window!==t&&d){try{return void(window.localStorage[d]=n)}catch(e){}try{window.document.cookie=encodeURIComponent(d)+"="+n+";"}catch(e){}}}function g(){var e;if(typeof window!==t&&d){try{e=window.localStorage[d]}catch(e){}if(typeof e===t)try{var n=window.document.cookie,r=encodeURIComponent(d),o=n.indexOf(r+"=");-1!==o&&(e=/^([^;]+)/.exec(n.slice(o+r.length+1))[1])}catch(e){}return void 0===u.levels[e]&&(e=void 0),e}}function f(){if(typeof window!==t&&d){try{window.localStorage.removeItem(d)}catch(e){}try{window.document.cookie=encodeURIComponent(d)+"=; expires=Thu, 01 Jan 1970 00:00:00 UTC"}catch(e){}}}function h(e){var t=e;if("string"==typeof t&&void 0!==u.levels[t.toUpperCase()]&&(t=u.levels[t.toUpperCase()]),"number"==typeof t&&t>=0&&t<=u.levels.SILENT)return t;throw new TypeError("log.setLevel() called with invalid level: "+e)}"string"==typeof e?d+=":"+e:"symbol"==typeof e&&(d=void 0),u.name=e,u.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},u.methodFactory=n||m,u.getLevel=function(){return null!=l?l:null!=a?a:i},u.setLevel=function(e,t){return l=h(e),!1!==t&&p(l),c.call(u)},u.setDefaultLevel=function(e){a=h(e),g()||u.setLevel(e,!1)},u.resetLevel=function(){l=null,f(),c.call(u)},u.enableAll=function(e){u.setLevel(u.levels.TRACE,e)},u.disableAll=function(e){u.setLevel(u.levels.SILENT,e)},u.rebuild=function(){if(s!==u&&(i=h(s.getLevel())),c.call(u),s===u)for(var e in o)o[e].rebuild()},i=h(s?s.getLevel():"WARN");var E=g();null!=E&&(l=h(E)),c.call(u)}(s=new d).getLogger=function(e){if("symbol"!=typeof e&&"string"!=typeof e||""===e)throw new TypeError("You must supply a name when creating a logger.");var t=o[e];return t||(t=o[e]=new d(e,s.methodFactory)),t};var p=typeof window!==t?window.log:void 0;return s.noConflict=function(){return typeof window!==t&&window.log===s&&(window.log=p),s},s.getLoggers=function(){return o},s.default=s,s},void 0===(o="function"==typeof r?r.call(t,n,t,e):r)||(e.exports=o)}()},72:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var s={},i=[],a=0;a<e.length;a++){var l=e[a],c=r.base?l[0]+r.base:l[0],u=s[c]||0,m="".concat(c," ").concat(u);s[c]=u+1;var d=n(m),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var g=o(p,r);r.byIndex=a,t.splice(a,0,{identifier:m,updater:g,references:1})}i.push(m)}return i}function o(e,t){var n=t.domAPI(t);n.update(e);return function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var s=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<s.length;i++){var a=n(s[i]);t[a].references--}for(var l=r(e,o),c=0;c<s.length;c++){var u=n(s[c]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}s=l}}},659:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},540:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},75:(e,t,n)=>{"use strict";n.d(t,{R:()=>o,g:()=>s});var r=n(974);function o(e){return(0,r.RJ)().test(e)}function s(e){const t=[],n=(0,r.RJ)();let o;for(;null!==(o=n.exec(e));){const e=(0,r.Ov)(o[1]).trim();0!==e.length&&t.push({fullMatch:o[0],prompt:e,startIndex:o.index,endIndex:o.index+o[0].length})}return t}},722:(e,t,n)=>{"use strict";n.d(t,{F:()=>i,M:()=>a,insertDeferredImages:()=>l});var r=n(75);const o=(0,n(741).h)("Generator");function s(e,t,n,r){const s=`<img_prompt="${t}">`,i=e.indexOf(s);if(-1===i)return o.warn("Could not find prompt tag in text:",s),{text:e,success:!1};const a=i+s.length;if(e.substring(a,a+200).includes(`src="${n}"`))return o.info("Image already inserted, skipping:",n),{text:e,success:!1};const l=function(e,t){const n=`AI generated image #${t+1}`;return`<img src="${e}" title="${n}" alt="${n}">`}(n,r);return{text:e.substring(0,a)+"\n"+l+e.substring(a),success:!0}}async function i(e,t){o.info("Generating image for prompt:",e);const n=performance.now();try{const r=t.SlashCommandParser?.commands?.sd;if(!r||!r.callback)return o.error("SD command not available"),o.info("Available commands:",Object.keys(t.SlashCommandParser?.commands||{})),null;o.info("Calling SD command...");const s=await r.callback({quiet:"true"},e),i=performance.now()-n;return o.info(`Generated image URL: ${s} (took ${i.toFixed(0)}ms)`),s}catch(e){const t=performance.now()-n;return o.error(`Error generating image (after ${t.toFixed(0)}ms):`,e),null}}async function a(e,t){const n=(0,r.g)(e);if(o.info("Found",n.length,"image prompts to process"),0===n.length)return e;o.info("Extracted prompts:",n.map((e=>e.prompt)));const a=n.length;toastr.info(`Generating ${a} image${a>1?"s":""}...`,"Auto Illustrator");const l=performance.now(),c=[];for(const e of n){const n=await i(e.prompt,t);c.push(n)}const u=performance.now()-l,m=c.filter((e=>e)).length;o.info(`Generated ${m} images successfully (total time: ${u.toFixed(0)}ms, avg: ${(u/a).toFixed(0)}ms per image)`),m===a?toastr.success(`Successfully generated ${m} image${m>1?"s":""}`,"Auto Illustrator"):m>0?toastr.warning(`Generated ${m} of ${a} images`,"Auto Illustrator"):toastr.error("Failed to generate images","Auto Illustrator");let d=e;for(let e=n.length-1;e>=0;e--){const t=n[e],r=c[e];if(r){const n=s(d,t.prompt,r,e);n.success&&(d=n.text,o.info("Added image after prompt at index",e))}else o.info("Image generation failed for prompt at index",e,"- keeping tag")}return d}async function l(e,t,n){if(0===e.length)return 0;o.info(`Batch inserting ${e.length} deferred images into message ${t}`);const r=n.chat?.[t];if(!r)return o.warn("Message not found for batch insertion:",t),0;let i=r.mes||"";const a=i.length,l=[...e].sort(((e,t)=>e.prompt.startIndex-t.prompt.startIndex));let c=0;for(let e=l.length-1;e>=0;e--){const{prompt:t,imageUrl:n}=l[e],r=s(i,t.prompt,n,e);r.success&&(i=r.text,c++)}r.mes=i,o.info(`Batch insertion complete: ${c}/${e.length} images inserted (${a} -> ${i.length} chars)`);const u=n.eventTypes?.MESSAGE_UPDATED||"MESSAGE_UPDATED";n.eventSource.emit(u,t);const m=n.eventTypes?.MESSAGE_EDITED||"MESSAGE_EDITED";return n.eventSource.emit(m,t),await n.saveChat(),o.debug("Chat saved after inserting deferred images"),c}},741:(e,t,n)=>{"use strict";n.d(t,{He:()=>a,h:()=>c});var r=n(65),o=n.n(r);const s="[Auto Illustrator]",i=o().getLogger("auto-illustrator");function a(e){i.setLevel(e)}function l(e,t){return e?`${s} [${e}] ${t}`:`${s} ${t}`}function c(e){return{debug:(t,...n)=>i.debug(l(e,t),...n),info:(t,...n)=>i.info(l(e,t),...n),warn:(t,...n)=>i.warn(l(e,t),...n),error:(t,...n)=>i.error(l(e,t),...n)}}i.setLevel(o().levels.INFO)},974:(e,t,n)=>{"use strict";n.d(t,{BX:()=>o,Ov:()=>l,RJ:()=>i,Y4:()=>a});const r=/<img_prompt="([^"\\]*(?:\\.[^"\\]*)*)"\s*>/g,o=/<img_prompt="[^"]*">/,s=/<img_prompt="[^"]*">\s*<img\s+[^>]*>/g;function i(){return new RegExp(r.source,r.flags)}function a(){return new RegExp(s.source,s.flags)}function l(e){return e.replace(/\\"/g,'"')}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var s=t[r]={id:r,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{"use strict";var e=n(72),t=n.n(e),r=n(825),o=n.n(r),s=n(659),i=n.n(s),a=n(56),l=n.n(a),c=n(540),u=n.n(c),m=n(113),d=n.n(m),p=n(208),g={};g.styleTagTransform=d(),g.setAttributes=l(),g.insert=i().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=u();t()(p.A,g);p.A&&p.A.locals&&p.A.locals;var f=n(741);const h=(0,f.h)("PromptInjector"),E="auto_illustrator";function v(e,t){if(h.info("Updating extension prompt",{enabled:t.enabled,metaPromptLength:t.metaPrompt.length,hasSetExtensionPrompt:"function"==typeof e.setExtensionPrompt}),"function"!=typeof e.setExtensionPrompt)return void h.error("setExtensionPrompt function not available in context");const n=!1;t.enabled?(h.info("Setting extension prompt (enabled)"),e.setExtensionPrompt(E,t.metaPrompt,1,1,n,0)):(h.info("Clearing extension prompt (disabled)"),e.setExtensionPrompt(E,"",1,1,n,0));const r=e.extensionPrompts?.[E];h.info("Extension prompt configured",{key:E,enabled:t.enabled,registered:!!r,hasValue:!!r?.value,promptDetails:r})}var I=n(75),y=n(722);const T=(0,f.h)("MessageHandler");function A(e,t,n,r){return async o=>{if(T.info("MESSAGE_RECEIVED event, messageId:",o),n.streamingEnabled&&r)return T.info("MESSAGE_RECEIVED fired for streaming message, marking flag"),void r();if(n.streamingEnabled)return void T.info("Skipping MESSAGE_RECEIVED - streaming mode handles image generation");if(t(o))return void T.info("Skipping MESSAGE_RECEIVED - message is being processed by streaming");const s=e.chat?.[o];if(!s)return void T.info("No message found at index:",o);if(T.info("Message details:",{is_user:s.is_user,is_system:s.is_system,name:s.name,mes_length:s.mes?.length}),s.is_user)return void T.info("Skipping user message");if(T.info("Message text preview:",s.mes.substring(0,200)),!(0,I.R)(s.mes))return void T.info("No image prompts found in message");T.info("Image prompts detected, processing..."),await async function(e,t,n){if((0,I.R)(e)){T.info("Processing message for images:",t);try{const r=await(0,y.M)(e,n);n.chat&&n.chat[t]&&(n.chat[t].mes=r)}catch(e){T.error("Error processing message:",e)}}}(s.mes,o,e),T.info("Emitting MESSAGE_EDITED event");const i=e.eventTypes?.MESSAGE_EDITED||"MESSAGE_EDITED";e.eventSource.emit(i,o),await e.saveChat(),T.debug("Chat saved after processing message images")}}var _=n(974);const x=(0,f.h)("Pruner");const R=(0,f.h)("Queue");function S(e,t){const n=`${e}:${t}`;let r=0;for(let e=0;e<n.length;e++){r=(r<<5)-r+n.charCodeAt(e),r|=0}return`prompt_${Math.abs(r).toString(36)}`}class w{constructor(){this.prompts=new Map}addPrompt(e,t,n){const r=S(e,t);if(this.prompts.has(r))return R.info("Prompt already queued:",r),null;const o={id:r,prompt:e,startIndex:t,endIndex:n,state:"QUEUED",attempts:0,detectedAt:Date.now()};return this.prompts.set(r,o),R.info("Added prompt:",r,e),o}hasPrompt(e,t){const n=S(e,t);return this.prompts.has(n)}hasPromptByText(e){for(const t of this.prompts.values())if(t.prompt===e)return!0;return!1}getNextPending(){for(const e of this.prompts.values())if("QUEUED"===e.state)return e;return null}updateState(e,t,n){const r=this.prompts.get(e);r?(r.state=t,"GENERATING"===t&&(r.generationStartedAt=Date.now(),r.attempts++),"COMPLETED"!==t&&"FAILED"!==t||(r.completedAt=Date.now()),n?.imageUrl&&(r.imageUrl=n.imageUrl),n?.error&&(r.error=n.error),R.info("Updated state:",e,t)):R.warn("Prompt not found:",e)}getPrompt(e){return this.prompts.get(e)}getAllPrompts(){return Array.from(this.prompts.values())}getPromptsByState(e){return this.getAllPrompts().filter((t=>t.state===e))}getStats(){const e={DETECTED:0,QUEUED:0,GENERATING:0,COMPLETED:0,FAILED:0};for(const t of this.prompts.values())e[t.state]++;return e}clear(){R.info("Clearing queue"),this.prompts.clear()}size(){return this.prompts.size}adjustPositionsAfterInsertion(e,t,n=Date.now()){for(const r of this.prompts.values())r.detectedAt<n&&r.startIndex>e&&("QUEUED"===r.state||"GENERATING"===r.state)&&(r.startIndex+=t,r.endIndex+=t)}}const N=(0,f.h)("Monitor");class L{constructor(e,t,n=300,r){this.messageId=-1,this.lastSeenText="",this.pollInterval=null,this.isRunning=!1,this.queue=e,this.context=t,this.intervalMs=n,this.onNewPromptsCallback=r}start(e){this.isRunning&&(N.warn("Already running, stopping previous monitor"),this.stop()),this.messageId=e,this.lastSeenText="",this.isRunning=!0,N.info(`Starting monitor for message ${e} (interval: ${this.intervalMs}ms)`),this.pollInterval=setInterval((()=>{this.checkForNewPrompts()}),this.intervalMs),this.checkForNewPrompts()}stop(){this.isRunning&&(N.info("Stopping monitor"),this.isRunning=!1,this.pollInterval&&(clearInterval(this.pollInterval),this.pollInterval=null),this.messageId=-1,this.lastSeenText="")}checkForNewPrompts(){if(!this.isRunning||this.messageId<0)return;const e=this.context.chat?.[this.messageId];if(!e)return void N.warn("Message not found:",this.messageId);const t=e.mes||"";if(t===this.lastSeenText)return;N.debug(`Text changed (${this.lastSeenText.length} -> ${t.length} chars)`);const n=this.extractNewPrompts(t);if(n.length>0){N.info(`Found ${n.length} new prompts`);for(const e of n)this.queue.addPrompt(e.prompt,e.startIndex,e.endIndex);this.onNewPromptsCallback&&this.onNewPromptsCallback()}this.lastSeenText=t}extractNewPrompts(e){const t=(0,I.g)(e),n=[];for(const e of t)this.queue.hasPromptByText(e.prompt)||n.push(e);return n}getStatus(){return{isRunning:this.isRunning,messageId:this.messageId,lastTextLength:this.lastSeenText.length,intervalMs:this.intervalMs}}isActive(){return this.isRunning}}const b=(0,f.h)("Processor");class P{constructor(e,t,n=1){this.messageId=-1,this.isRunning=!1,this.isProcessing=!1,this.activeGenerations=0,this.processPromise=null,this.deferredImages=[],this.queue=e,this.context=t,this.maxConcurrent=n}start(e){this.isRunning&&(b.warn("Already running, stopping previous processor"),this.stop()),this.messageId=e,this.isRunning=!0,this.activeGenerations=0,this.deferredImages=[],b.info(`Starting processor for message ${e} (max concurrent: ${this.maxConcurrent})`),this.processNext()}stop(){this.isRunning&&(b.info("Stopping processor"),this.isRunning=!1,this.messageId=-1)}async processNext(){if(!(!this.isRunning||this.activeGenerations>=this.maxConcurrent||this.isProcessing)){this.isProcessing=!0;try{const e=this.queue.getNextPending();if(!e)return this.isProcessing=!1,void b.info("No pending prompts, waiting...");b.info(`Processing prompt: ${e.id}`),this.queue.updateState(e.id,"GENERATING"),this.activeGenerations++,this.generateImageForPrompt(e).then((()=>{this.activeGenerations--,this.processNext()})).catch((e=>{b.error("Unexpected error:",e),this.activeGenerations--,this.processNext()})),this.activeGenerations<this.maxConcurrent?(this.isProcessing=!1,setImmediate((()=>this.processNext()))):this.isProcessing=!1}catch(e){b.error("Error in processNext:",e),this.isProcessing=!1}}}async generateImageForPrompt(e){try{b.info(`Generating image for: ${e.prompt}`);const t=await(0,y.F)(e.prompt,this.context);t?(this.queue.updateState(e.id,"COMPLETED",{imageUrl:t}),b.info(`Generated image: ${t}`),this.deferredImages.push({prompt:e,imageUrl:t}),b.info(`Deferred image insertion (${this.deferredImages.length} total)`)):(this.queue.updateState(e.id,"FAILED",{error:"Image generation returned null"}),b.warn(`Failed to generate image for: ${e.prompt}`))}catch(t){this.queue.updateState(e.id,"FAILED",{error:t instanceof Error?t.message:String(t)}),b.error("Error generating image:",t)}}async processRemaining(){for(b.info("Processing remaining prompts...");this.activeGenerations>0;)b.info(`Waiting for ${this.activeGenerations} active generations to complete...`),await new Promise((e=>setTimeout(e,100)));const e=this.queue.getPromptsByState("QUEUED");if(b.info(`${e.length} prompts remaining`),0!==e.length){for(const t of e)await this.generateImageForPrompt(t);b.info("Finished processing remaining prompts")}}trigger(){this.isRunning&&!this.isProcessing&&this.processNext()}getDeferredImages(){return this.deferredImages}clearDeferredImages(){this.deferredImages=[]}getStatus(){return{isRunning:this.isRunning,messageId:this.messageId,activeGenerations:this.activeGenerations,maxConcurrent:this.maxConcurrent,queueStats:this.queue.getStats()}}}const M="auto_illustrator",D={DEFAULT:250,MIN:50,MAX:1e3,STEP:50},C={DEFAULT:300,MIN:100,MAX:1e3,STEP:50},G={DEFAULT:1,MIN:1,MAX:5,STEP:1},$={enabled:!0,streamingEnabled:!0,wordInterval:D.DEFAULT,streamingPollInterval:C.DEFAULT,maxConcurrentGenerations:G.DEFAULT,logLevel:"info"},O={ENABLED:"auto_illustrator_enabled",WORD_INTERVAL:"auto_illustrator_word_interval",META_PROMPT:"auto_illustrator_meta_prompt",STREAMING_ENABLED:"auto_illustrator_streaming_enabled",STREAMING_POLL_INTERVAL:"auto_illustrator_streaming_poll_interval",MAX_CONCURRENT:"auto_illustrator_max_concurrent",LOG_LEVEL:"auto_illustrator_log_level",RESET_BUTTON:"auto_illustrator_reset"};function U(){return{...$,metaPrompt:(e=D.DEFAULT,`\nIMPORTANT INSTRUCTION: As you generate your response, you MUST include image generation prompts inline with your narrative.\n\nEvery ${e} words (approximately), insert an image generation prompt using this EXACT format:\n<img_prompt="detailed description of the scene, character, or setting to visualize">\n\nRules for image prompts:\n1. Use the exact format: <img_prompt="your description here">\n2. The description should be detailed and visual, describing what should be in the image\n3. Focus on visual elements: character appearance, setting, atmosphere, actions, etc.\n4. Keep descriptions concise but descriptive (1-2 sentences)\n5. Generate prompts naturally within the flow of your narrative\n6. Must add the danbooru character name if the character is from a game / anime / novel, etc.\n7. Use "rating:nsfw" tag for nsfw scenarios\n\nExample:\nThe sun was setting over the ancient castle <img_prompt="medieval stone castle silhouette against orange and purple sunset sky, dramatic lighting, fantasy atmosphere"> as the knight approached the gates. The heavy wooden doors creaked open...\n`.trim())};var e}function B(e,t){t.extensionSettings[M]=e,t.saveSettingsDebounced()}const F=(0,f.h)("Main");let k,V,q=null,H=!1,X=null,W=null,j=null,Q=null;function Y(){const e=document.getElementById(O.ENABLED),t=document.getElementById(O.WORD_INTERVAL),n=document.getElementById(O.META_PROMPT),r=document.getElementById(O.STREAMING_ENABLED),o=document.getElementById(O.STREAMING_POLL_INTERVAL),s=document.getElementById(O.MAX_CONCURRENT),i=document.getElementById(O.LOG_LEVEL);e&&(e.checked=V.enabled),t&&(t.value=V.wordInterval.toString()),n&&(n.value=V.metaPrompt),r&&(r.checked=V.streamingEnabled),o&&(o.value=V.streamingPollInterval.toString()),s&&(s.value=V.maxConcurrentGenerations.toString()),i&&(i.value=V.logLevel)}function z(){const e=document.getElementById(O.ENABLED),t=document.getElementById(O.WORD_INTERVAL),n=document.getElementById(O.META_PROMPT),r=document.getElementById(O.STREAMING_ENABLED),o=document.getElementById(O.STREAMING_POLL_INTERVAL),s=document.getElementById(O.MAX_CONCURRENT),i=document.getElementById(O.LOG_LEVEL);V.enabled=e?.checked??V.enabled,V.wordInterval=t?parseInt(t.value):V.wordInterval,V.metaPrompt=n?.value??V.metaPrompt,V.streamingEnabled=r?.checked??V.streamingEnabled,V.streamingPollInterval=o?parseInt(o.value):V.streamingPollInterval,V.maxConcurrentGenerations=s?parseInt(s.value):V.maxConcurrentGenerations,V.logLevel=i?.value??V.logLevel,(0,f.He)(V.logLevel),B(V,k),v(k,V),F.info("Settings updated:",V)}function J(){V=U(),B(V,k),Y(),v(k,V),F.info("Settings reset to defaults")}function K(e){if(W?.isActive())return;if(!V.streamingEnabled||!V.enabled)return;if(!k.chat||0===k.chat.length)return;const t=k.chat.length-1,n=k.chat[t];n.is_user||n.is_system||(F.info(`First stream token received, starting streaming for message ${t}`),W&&W.stop(),j&&j.stop(),X=new w,j=new P(X,k,V.maxConcurrentGenerations),W=new L(X,k,V.streamingPollInterval,(()=>j?.trigger())),Q=t,H=!1,q=null,W.start(t),j.start(t),F.info("Streaming monitor and processor started"))}async function Z(){if(q&&H){const{images:e,messageId:t}=q;F.info(`Both conditions met, inserting ${e.length} deferred images`),q=null,H=!1;const{insertDeferredImages:r}=await Promise.resolve().then(n.bind(n,722));await r(e,t,k)}}async function ee(){if(!W||!j||!X)return;F.info("GENERATION_ENDED, cleaning up streaming"),W.stop(),await j.processRemaining();const e=j.getDeferredImages(),t=Q,n=X.getStats();F.info("Final streaming stats:",n),j.stop(),e.length>0&&null!==t&&(q={images:e,messageId:t},F.info(`${e.length} images ready, checking if MESSAGE_RECEIVED fired`)),X=null,W=null,j=null,Q=null;const r=n.FAILED;r>0&&toastr.warning(`${r} image${r>1?"s":""} failed to generate during streaming`,"Auto Illustrator"),await Z()}!function(){F.info("Initializing extension...");try{k=SillyTavern.getContext(),F.info("Got SillyTavern context")}catch(e){return void F.error("Failed to get SillyTavern context:",e)}V=function(e){const t=U(),n=e.extensionSettings[M];return n?{...t,...n}:t}(k),F.info("Loaded settings:",V),(0,f.He)(V.logLevel);const e=A(k,(e=>Q===e),V,(()=>(F.info("MESSAGE_RECEIVED callback invoked, setting flag"),H=!0,Z(),null))),t=k.eventTypes?.MESSAGE_RECEIVED||"MESSAGE_RECEIVED";k.eventSource.on(t,e);const n=k.eventTypes?.CHAT_COMPLETION_PROMPT_READY||"CHAT_COMPLETION_PROMPT_READY";k.eventSource.on(n,(e=>{e?.dryRun?F.info("Skipping pruning for dry run"):e?.chat&&function(e){x.info("Pruning generated images from chat history");for(const t of e){if("user"===t.role||"system"===t.role)continue;const e=(0,_.Y4)(),n=t.content;t.content=t.content.replace(e,(e=>{const t=e.match(_.BX);return t?t[0]:e})),n!==t.content&&x.info("Pruned generated images from assistant message")}}(e.chat)}));const r=k.eventTypes?.STREAM_TOKEN_RECEIVED||"STREAM_TOKEN_RECEIVED",o=k.eventTypes?.GENERATION_ENDED||"GENERATION_ENDED";k.eventSource.on(r,K),k.eventSource.on(o,ee),F.info("Event handlers registered:",{MESSAGE_RECEIVED:t,CHAT_COMPLETION_PROMPT_READY:n,STREAM_TOKEN_RECEIVED:r,GENERATION_ENDED:o});const s=document.getElementById("extensions_settings2");if(s){const e=`\n    <div class="auto-illustrator-settings">\n      <div class="inline-drawer">\n        <div class="inline-drawer-toggle inline-drawer-header">\n          <b>Auto Illustrator</b>\n          <div class="inline-drawer-icon fa-solid fa-circle-chevron-down down"></div>\n        </div>\n        <div class="inline-drawer-content">\n          <div style="display: flex; align-items: center; justify-content: space-between;">\n            <label class="checkbox_label" for="${O.ENABLED}">\n              <input id="${O.ENABLED}" type="checkbox" />\n              <span>Enable Auto Illustrator</span>\n            </label>\n            <div id="${O.RESET_BUTTON}" class="menu_button menu_button_icon">\n              <i class="fa-solid fa-undo"></i>\n              <span>Reset to Defaults</span>\n            </div>\n          </div>\n\n          <label for="${O.WORD_INTERVAL}">\n            <span>Word Interval (approx. words between images)</span>\n            <input id="${O.WORD_INTERVAL}" class="text_pole" type="number" min="${D.MIN}" max="${D.MAX}" step="${D.STEP}" />\n          </label>\n\n          <label for="${O.META_PROMPT}">\n            <span>Meta Prompt Template</span>\n            <small>Instructions sent to the LLM for generating image prompts</small>\n            <textarea id="${O.META_PROMPT}" class="text_pole textarea_compact" rows="10"></textarea>\n          </label>\n\n          <hr>\n\n          <label class="checkbox_label" for="${O.STREAMING_ENABLED}">\n            <input id="${O.STREAMING_ENABLED}" type="checkbox" />\n            <span>Enable Streaming Image Generation</span>\n            <small>Generate images as streaming text arrives (faster perceived latency)</small>\n          </label>\n\n          <label for="${O.STREAMING_POLL_INTERVAL}">\n            <span>Streaming Poll Interval (ms)</span>\n            <small>How often to check for new prompts during streaming (lower = faster detection, more CPU)</small>\n            <input id="${O.STREAMING_POLL_INTERVAL}" class="text_pole" type="number" min="${C.MIN}" max="${C.MAX}" step="${C.STEP}" />\n          </label>\n\n          <label for="${O.MAX_CONCURRENT}">\n            <span>Max Concurrent Generations</span>\n            <small>Maximum number of images to generate simultaneously (1 recommended for rate limiting)</small>\n            <input id="${O.MAX_CONCURRENT}" class="text_pole" type="number" min="${G.MIN}" max="${G.MAX}" step="${G.STEP}" />\n          </label>\n\n          <label for="${O.LOG_LEVEL}">\n            <span>Log Level</span>\n            <small>Controls logging verbosity (DEBUG shows detailed monitoring, INFO shows key events, WARN/ERROR minimal)</small>\n            <select id="${O.LOG_LEVEL}" class="text_pole">\n              <option value="trace">TRACE (Most Verbose)</option>\n              <option value="debug">DEBUG</option>\n              <option value="info">INFO (Default)</option>\n              <option value="warn">WARN</option>\n              <option value="error">ERROR</option>\n              <option value="silent">SILENT (No Logs)</option>\n            </select>\n          </label>\n        </div>\n      </div>\n    </div>\n  `.trim();s.insertAdjacentHTML("beforeend",e);const t=document.getElementById(O.ENABLED),n=document.getElementById(O.WORD_INTERVAL),r=document.getElementById(O.META_PROMPT),o=document.getElementById(O.STREAMING_ENABLED),i=document.getElementById(O.STREAMING_POLL_INTERVAL),a=document.getElementById(O.MAX_CONCURRENT),l=document.getElementById(O.LOG_LEVEL),c=document.getElementById(O.RESET_BUTTON);t?.addEventListener("change",z),n?.addEventListener("change",z),r?.addEventListener("input",z),o?.addEventListener("change",z),i?.addEventListener("change",z),a?.addEventListener("change",z),l?.addEventListener("change",z),c?.addEventListener("click",J),Y()}F.info("Extension initialized successfully");const i=k.eventTypes?.CHAT_CHANGED;k.eventSource.on(i,(()=>{F.info("CHAT_CHANGED - reapplying extension prompt"),v(k,V)})),v(k,V)}()})()})();