(()=>{"use strict";var e={208:(e,t,n)=>{n.d(t,{A:()=>l});var o=n(601),r=n.n(o),a=n(314),s=n.n(a)()(r());s.push([e.id,".hello-world-message {\n    color: blue;\n}",""]);const l=s},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(o)for(var l=0;l<this.length;l++){var i=this[l][0];null!=i&&(s[i]=!0)}for(var u=0;u<e.length;u++){var c=[].concat(e[u]);o&&s[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),t.push(c))}},t}},601:e=>{e.exports=function(e){return e[1]}},72:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},s=[],l=0;l<e.length;l++){var i=e[l],u=o.base?i[0]+o.base:i[0],c=a[u]||0,d="".concat(u," ").concat(c);a[u]=c+1;var p=n(d),m={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var g=r(m,o);o.byIndex=l,t.splice(l,0,{identifier:d,updater:g,references:1})}s.push(d)}return s}function r(e,t){var n=t.domAPI(t);n.update(e);return function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var s=0;s<a.length;s++){var l=n(a[s]);t[l].references--}for(var i=o(e,r),u=0;u<a.length;u++){var c=n(a[u]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}a=i}}},659:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0;var o=n(72),r=n.n(o),a=n(825),s=n.n(a),l=n(659),i=n.n(l),u=n(56),c=n.n(u),d=n(540),p=n.n(d),m=n(113),g=n.n(m),f=n(208),v={};v.styleTagTransform=g(),v.setAttributes=c(),v.insert=i().bind(null,"head"),v.domAPI=s(),v.insertStyleElement=p();r()(f.A,v);f.A&&f.A.locals&&f.A.locals;const h="auto_illustrator";function I(e,t){console.log("[Auto Illustrator] Updating extension prompt",{enabled:t.enabled,metaPromptLength:t.metaPrompt.length}),e.setExtensionPrompt(h,t.metaPrompt,1,0,e.extensionPromptRoles?.SYSTEM??0,!1,(()=>t.enabled)),console.log("[Auto Illustrator] Extension prompt configured",{key:h,willInject:t.enabled})}const y=/<img_prompt="([^"\\]*(?:\\.[^"\\]*)*)"\s*>/g;function _(e){return new RegExp(y.source,y.flags).test(e)}async function b(e,t){const n=function(e){const t=[],n=new RegExp(y.source,y.flags);let o;for(;null!==(o=n.exec(e));)t.push({fullMatch:o[0],prompt:o[1].replace(/\\"/g,'"'),startIndex:o.index,endIndex:o.index+o[0].length});return t}(e);if(console.log("[Auto Illustrator] Found",n.length,"image prompts to process"),0===n.length)return e;console.log("[Auto Illustrator] Extracted prompts:",n.map((e=>e.prompt)));const o=n.map((e=>async function(e,t){console.log("[Auto Illustrator] Generating image for prompt:",e);try{const n=t.SlashCommandParser?.commands?.sd;if(!n)return console.error("[Auto Illustrator] SD command not available"),console.log("[Auto Illustrator] Available commands:",Object.keys(t.SlashCommandParser?.commands||{})),null;console.log("[Auto Illustrator] Calling SD command...");const o=await n.callback({quiet:"true"},e);return console.log("[Auto Illustrator] Generated image URL:",o),o}catch(e){return console.error("[Auto Illustrator] Error generating image:",e),null}}(e.prompt,t))),r=await Promise.all(o);console.log("[Auto Illustrator] Generated",r.filter((e=>e)).length,"images successfully");let a=e;for(let e=n.length-1;e>=0;e--){const t=n[e],o=r[e];if(o){const n=`<img src="${o}" title="${t.prompt}" alt="${t.prompt}">`;a=a.substring(0,t.startIndex)+n+a.substring(t.endIndex),console.log("[Auto Illustrator] Replaced prompt at index",e,"with image")}else a=a.substring(0,t.startIndex)+a.substring(t.endIndex),console.log("[Auto Illustrator] Removed failed prompt at index",e)}return a}function E(e){return async t=>{console.log("[Auto Illustrator] MESSAGE_RECEIVED event, messageId:",t);const n=e.chat?.[t];n?(console.log("[Auto Illustrator] Message details:",{is_user:n.is_user,is_system:n.is_system,name:n.name,mes_length:n.mes?.length}),n.is_user?console.log("[Auto Illustrator] Skipping user message"):(console.log("[Auto Illustrator] Message text preview:",n.mes.substring(0,200)),_(n.mes)?(console.log("[Auto Illustrator] Image prompts detected, processing..."),await async function(e,t,n){if(_(e)){console.log("[Auto Illustrator] Processing message for images:",t);try{const o=await b(e,n);n.chat&&n.chat[t]&&(n.chat[t].mes=o)}catch(e){console.error("[Auto Illustrator] Error processing message:",e)}}}(n.mes,t,e),console.log("[Auto Illustrator] Emitting MESSAGE_EDITED event"),e.eventSource.emit(e.eventTypes.MESSAGE_EDITED,t)):console.log("[Auto Illustrator] No image prompts found in message"))):console.log("[Auto Illustrator] No message found at index:",t)}}const x="auto_illustrator";function A(){return{enabled:!0,wordInterval:250,metaPrompt:(e=250,`\nIMPORTANT INSTRUCTION: As you generate your response, you MUST include image generation prompts inline with your narrative.\n\nEvery ${e} words (approximately), insert an image generation prompt using this EXACT format:\n<img_prompt="detailed description of the scene, character, or setting to visualize">\n\nRules for image prompts:\n1. Use the exact format: <img_prompt="your description here">\n2. The description should be detailed and visual, describing what should be in the image\n3. Focus on visual elements: character appearance, setting, atmosphere, actions, etc.\n4. Keep descriptions concise but descriptive (1-2 sentences)\n5. Generate prompts naturally within the flow of your narrative\n\nExample:\nThe sun was setting over the ancient castle <img_prompt="medieval stone castle silhouette against orange and purple sunset sky, dramatic lighting, fantasy atmosphere"> as the knight approached the gates. The heavy wooden doors creaked open...\n`.trim())};var e}function w(e,t){t.extensionSettings[x]=e,t.saveSettingsDebounced()}let S,T;function M(){const e=document.getElementById("auto_illustrator_enabled"),t=document.getElementById("auto_illustrator_word_interval"),n=document.getElementById("auto_illustrator_meta_prompt");e&&(e.checked=T.enabled),t&&(t.value=T.wordInterval.toString()),n&&(n.value=T.metaPrompt)}function P(){const e=document.getElementById("auto_illustrator_enabled"),t=document.getElementById("auto_illustrator_word_interval"),n=document.getElementById("auto_illustrator_meta_prompt");T.enabled=e?.checked??T.enabled,T.wordInterval=t?parseInt(t.value):T.wordInterval,T.metaPrompt=n?.value??T.metaPrompt,w(T,S),I(S,T),console.log("[Auto Illustrator] Settings updated:",T)}function C(){T=A(),w(T,S),M(),I(S,T),console.log("[Auto Illustrator] Settings reset to defaults")}!function(){console.log("[Auto Illustrator] Initializing extension...");try{S=globalThis.SillyTavern.getContext(),console.log("[Auto Illustrator] Got SillyTavern context")}catch(e){return void console.error("[Auto Illustrator] Failed to get SillyTavern context:",e)}T=function(e){const t=A(),n=e.extensionSettings[x];return n?{...t,...n}:t}(S),console.log("[Auto Illustrator] Loaded settings:",T),I(S,T);const e=E(S),t=S.eventTypes?.MESSAGE_RECEIVED||"MESSAGE_RECEIVED";S.eventSource.on(t,e),console.log("[Auto Illustrator] Event handlers registered:",{MESSAGE_RECEIVED:t});const n=document.getElementById("extensions_settings2");if(n){const e='\n    <div class="auto-illustrator-settings">\n      <div class="inline-drawer">\n        <div class="inline-drawer-toggle inline-drawer-header">\n          <b>Auto Illustrator</b>\n          <div class="inline-drawer-icon fa-solid fa-circle-chevron-down down"></div>\n        </div>\n        <div class="inline-drawer-content">\n          <div style="display: flex; align-items: center; justify-content: space-between;">\n            <label class="checkbox_label" for="auto_illustrator_enabled">\n              <input id="auto_illustrator_enabled" type="checkbox" />\n              <span>Enable Auto Illustrator</span>\n            </label>\n            <div id="auto_illustrator_reset" class="menu_button menu_button_icon">\n              <i class="fa-solid fa-undo"></i>\n              <span>Reset to Defaults</span>\n            </div>\n          </div>\n\n          <label for="auto_illustrator_word_interval">\n            <span>Word Interval (approx. words between images)</span>\n            <input id="auto_illustrator_word_interval" class="text_pole" type="number" min="50" max="1000" step="50" />\n          </label>\n\n          <label for="auto_illustrator_meta_prompt">\n            <span>Meta Prompt Template</span>\n            <small>Instructions sent to the LLM for generating image prompts</small>\n            <textarea id="auto_illustrator_meta_prompt" class="text_pole textarea_compact" rows="10"></textarea>\n          </label>\n        </div>\n      </div>\n    </div>\n  '.trim();n.insertAdjacentHTML("beforeend",e);const t=document.getElementById("auto_illustrator_enabled"),o=document.getElementById("auto_illustrator_word_interval"),r=document.getElementById("auto_illustrator_meta_prompt"),a=document.getElementById("auto_illustrator_reset");t?.addEventListener("change",P),o?.addEventListener("change",P),r?.addEventListener("input",P),a?.addEventListener("click",C),M()}console.log("[Auto Illustrator] Extension initialized successfully")}()})();