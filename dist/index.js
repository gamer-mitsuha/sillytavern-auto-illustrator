(()=>{var e={208:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var o=n(601),r=n.n(o),s=n(314),a=n.n(s)()(r());a.push([e.id,"/* Preset Management Styles */\n.preset-management {\n  margin: 1rem 0;\n}\n\n.preset-toolbar {\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n  margin-bottom: 0.5rem;\n}\n\n.preset-toolbar .flex_fill {\n  flex: 1;\n}\n\n.preset-toolbar button {\n  flex-shrink: 0;\n}\n\n.preset-toolbar button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.preset-content-preview {\n  margin-top: 0.5rem;\n  padding: 0.75rem;\n  background-color: rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 4px;\n}\n\n.preset-content-preview label {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: bold;\n  font-size: 0.9rem;\n}\n\n.preset-preview-text {\n  font-family: 'Courier New', Courier, monospace;\n  font-size: 0.85rem;\n  white-space: pre-wrap;\n  word-break: break-word;\n  max-height: 200px;\n  overflow-y: auto;\n  margin: 0;\n  padding: 0.5rem;\n  background-color: rgba(0, 0, 0, 0.2);\n  border-radius: 3px;\n}\n\n.preset-edit-actions {\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 0.5rem;\n}\n\n.preset-edit-actions button {\n  flex: 1;\n}\n\n.preset-edit-actions button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* Manual Generation Button */\n.auto_illustrator_manual_gen {\n  color: #9b59b6 !important;\n  cursor: pointer;\n}\n\n.auto_illustrator_manual_gen:hover {\n  color: #bb79d6 !important;\n}\n\n.auto_illustrator_manual_gen:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* Manual Generation Dialog Backdrop */\n.auto-illustrator-dialog-backdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.7);\n  z-index: 9999;\n}\n\n/* Manual Generation Dialog */\n#auto_illustrator_manual_gen_dialog {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: var(--SmartThemeBlurTintColor, #2a2a2a);\n  border: 2px solid var(--SmartThemeBorderColor, #666);\n  border-radius: 8px;\n  padding: 1.5rem;\n  max-width: 500px;\n  width: 90%;\n  z-index: 10000;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.8);\n  color: #ffffff;\n}\n\n#auto_illustrator_manual_gen_dialog p {\n  margin: 0 0 1rem 0;\n  line-height: 1.6;\n  white-space: pre-line;\n  color: #ffffff;\n  font-size: 1rem;\n}\n\n.auto-illustrator-mode-group {\n  margin: 1rem 0;\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.auto-illustrator-mode-option {\n  display: flex;\n  align-items: flex-start;\n  gap: 0.75rem;\n  padding: 0.75rem;\n  border: 1px solid var(--SmartThemeBorderColor, #666);\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  color: #ffffff;\n  background: rgba(0, 0, 0, 0.2);\n}\n\n.auto-illustrator-mode-option span {\n  color: #ffffff;\n  line-height: 1.5;\n}\n\n.auto-illustrator-mode-option:hover {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n\n.auto-illustrator-mode-option input[type=\"radio\"] {\n  margin-top: 0.2rem;\n  cursor: pointer;\n  flex-shrink: 0;\n}\n\n.auto-illustrator-mode-option span {\n  flex: 1;\n  line-height: 1.4;\n}\n\n.auto-illustrator-mode-option strong {\n  display: block;\n  margin-bottom: 0.25rem;\n}\n\n.auto-illustrator-dialog-buttons {\n  display: flex;\n  gap: 0.5rem;\n  justify-content: flex-end;\n  margin-top: 1.5rem;\n}\n\n.auto-illustrator-dialog-buttons button {\n  min-width: 100px;\n}",""]);const i=a},314:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,s){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var i=0;i<this.length;i++){var l=this[i][0];null!=l&&(a[l]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);o&&a[u[0]]||(void 0!==s&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=s),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),t.push(u))}},t}},601:e=>{"use strict";e.exports=function(e){return e[1]}},65:function(e,t,n){var o,r;!function(s,a){"use strict";o=function(){var e=function(){},t="undefined",n=typeof window!==t&&typeof window.navigator!==t&&/Trident\/|MSIE /.test(window.navigator.userAgent),o=["trace","debug","info","warn","error"],r={},s=null;function a(e,t){var n=e[t];if("function"==typeof n.bind)return n.bind(e);try{return Function.prototype.bind.call(n,e)}catch(t){return function(){return Function.prototype.apply.apply(n,[e,arguments])}}}function i(){console.log&&(console.log.apply?console.log.apply(console,arguments):Function.prototype.apply.apply(console.log,[console,arguments])),console.trace&&console.trace()}function l(o){return"debug"===o&&(o="log"),typeof console!==t&&("trace"===o&&n?i:void 0!==console[o]?a(console,o):void 0!==console.log?a(console,"log"):e)}function c(){for(var n=this.getLevel(),r=0;r<o.length;r++){var s=o[r];this[s]=r<n?e:this.methodFactory(s,n,this.name)}if(this.log=this.debug,typeof console===t&&n<this.levels.SILENT)return"No console available for logging"}function u(e){return function(){typeof console!==t&&(c.call(this),this[e].apply(this,arguments))}}function d(e,t,n){return l(e)||u.apply(this,arguments)}function m(e,n){var a,i,l,u=this,m="loglevel";function p(e){var n=(o[e]||"silent").toUpperCase();if(typeof window!==t&&m){try{return void(window.localStorage[m]=n)}catch(e){}try{window.document.cookie=encodeURIComponent(m)+"="+n+";"}catch(e){}}}function g(){var e;if(typeof window!==t&&m){try{e=window.localStorage[m]}catch(e){}if(typeof e===t)try{var n=window.document.cookie,o=encodeURIComponent(m),r=n.indexOf(o+"=");-1!==r&&(e=/^([^;]+)/.exec(n.slice(r+o.length+1))[1])}catch(e){}return void 0===u.levels[e]&&(e=void 0),e}}function f(){if(typeof window!==t&&m){try{window.localStorage.removeItem(m)}catch(e){}try{window.document.cookie=encodeURIComponent(m)+"=; expires=Thu, 01 Jan 1970 00:00:00 UTC"}catch(e){}}}function E(e){var t=e;if("string"==typeof t&&void 0!==u.levels[t.toUpperCase()]&&(t=u.levels[t.toUpperCase()]),"number"==typeof t&&t>=0&&t<=u.levels.SILENT)return t;throw new TypeError("log.setLevel() called with invalid level: "+e)}"string"==typeof e?m+=":"+e:"symbol"==typeof e&&(m=void 0),u.name=e,u.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},u.methodFactory=n||d,u.getLevel=function(){return null!=l?l:null!=i?i:a},u.setLevel=function(e,t){return l=E(e),!1!==t&&p(l),c.call(u)},u.setDefaultLevel=function(e){i=E(e),g()||u.setLevel(e,!1)},u.resetLevel=function(){l=null,f(),c.call(u)},u.enableAll=function(e){u.setLevel(u.levels.TRACE,e)},u.disableAll=function(e){u.setLevel(u.levels.SILENT,e)},u.rebuild=function(){if(s!==u&&(a=E(s.getLevel())),c.call(u),s===u)for(var e in r)r[e].rebuild()},a=E(s?s.getLevel():"WARN");var h=g();null!=h&&(l=E(h)),c.call(u)}(s=new m).getLogger=function(e){if("symbol"!=typeof e&&"string"!=typeof e||""===e)throw new TypeError("You must supply a name when creating a logger.");var t=r[e];return t||(t=r[e]=new m(e,s.methodFactory)),t};var p=typeof window!==t?window.log:void 0;return s.noConflict=function(){return typeof window!==t&&window.log===s&&(window.log=p),s},s.getLoggers=function(){return r},s.default=s,s},void 0===(r="function"==typeof o?o.call(t,n,t,e):o)||(e.exports=r)}()},72:e=>{"use strict";var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var s={},a=[],i=0;i<e.length;i++){var l=e[i],c=o.base?l[0]+o.base:l[0],u=s[c]||0,d="".concat(c," ").concat(u);s[c]=u+1;var m=n(d),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==m)t[m].references++,t[m].updater(p);else{var g=r(p,o);o.byIndex=i,t.splice(i,0,{identifier:d,updater:g,references:1})}a.push(d)}return a}function r(e,t){var n=t.domAPI(t);n.update(e);return function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var s=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<s.length;a++){var i=n(s[a]);t[i].references--}for(var l=o(e,r),c=0;c<s.length;c++){var u=n(s[c]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}s=l}}},659:e=>{"use strict";var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},540:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},75:(e,t,n)=>{"use strict";n.d(t,{R:()=>r,g:()=>s});var o=n(974);function r(e){return(0,o.RJ)().test(e)}function s(e){const t=[],n=(0,o.RJ)();let r;for(;null!==(r=n.exec(e));){const e=(0,o.Ov)(r[1]).trim();0!==e.length&&t.push({fullMatch:r[0],prompt:e,startIndex:r.index,endIndex:r.index+r[0].length})}return t}},722:(e,t,n)=>{"use strict";n.d(t,{F:()=>a,M:()=>i,insertDeferredImages:()=>l});var o=n(75);const r=(0,n(741).h)("Generator");function s(e,t,n,o){const s=`<img_prompt="${t}">`,a=e.indexOf(s);if(-1===a)return r.warn("Could not find prompt tag in text:",s),{text:e,success:!1};const i=a+s.length;if(e.substring(i,i+200).includes(`src="${n}"`))return r.info("Image already inserted, skipping:",n),{text:e,success:!1};const l=function(e,t){const n=`AI generated image #${t+1}`;return`<img src="${e}" title="${n}" alt="${n}">`}(n,o);return{text:e.substring(0,i)+"\n"+l+e.substring(i),success:!0}}async function a(e,t){r.info("Generating image for prompt:",e);const n=performance.now();try{const o=t.SlashCommandParser?.commands?.sd;if(!o||!o.callback)return r.error("SD command not available"),r.info("Available commands:",Object.keys(t.SlashCommandParser?.commands||{})),null;r.info("Calling SD command...");const s=await o.callback({quiet:"true"},e),a=performance.now()-n;return r.info(`Generated image URL: ${s} (took ${a.toFixed(0)}ms)`),s}catch(e){const t=performance.now()-n;return r.error(`Error generating image (after ${t.toFixed(0)}ms):`,e),null}}async function i(e,t){const n=(0,o.g)(e);if(r.info("Found",n.length,"image prompts to process"),0===n.length)return e;r.info("Extracted prompts:",n.map((e=>e.prompt)));const i=n.length;toastr.info(`Generating ${i} image${i>1?"s":""}...`,"Auto Illustrator");const l=performance.now(),c=[];for(const e of n){const n=await a(e.prompt,t);c.push(n)}const u=performance.now()-l,d=c.filter((e=>e)).length;r.info(`Generated ${d} images successfully (total time: ${u.toFixed(0)}ms, avg: ${(u/i).toFixed(0)}ms per image)`),d===i?toastr.success(`Successfully generated ${d} image${d>1?"s":""}`,"Auto Illustrator"):d>0?toastr.warning(`Generated ${d} of ${i} images`,"Auto Illustrator"):toastr.error("Failed to generate images","Auto Illustrator");let m=e;for(let e=n.length-1;e>=0;e--){const t=n[e],o=c[e];if(o){const n=s(m,t.prompt,o,e);n.success&&(m=n.text,r.info("Added image after prompt at index",e))}else r.info("Image generation failed for prompt at index",e,"- keeping tag")}return m}async function l(e,t,n){if(0===e.length)return 0;r.info(`Batch inserting ${e.length} deferred images into message ${t}`);const o=n.chat?.[t];if(!o)return r.warn("Message not found for batch insertion:",t),0;let a=o.mes||"";const i=a.length,l=[...e].sort(((e,t)=>e.prompt.startIndex-t.prompt.startIndex));let c=0;for(let e=l.length-1;e>=0;e--){const{prompt:t,imageUrl:n}=l[e],o=s(a,t.prompt,n,e);o.success&&(a=o.text,c++)}o.mes=a,r.info(`Batch insertion complete: ${c}/${e.length} images inserted (${i} -> ${a.length} chars)`);const u=n.eventTypes.MESSAGE_EDITED;await n.eventSource.emit(u,t),n.updateMessageBlock(t,o);const d=n.eventTypes.MESSAGE_UPDATED;return await n.eventSource.emit(d,t),await n.saveChat(),r.debug("Chat saved after inserting deferred images"),c}},741:(e,t,n)=>{"use strict";n.d(t,{He:()=>i,h:()=>c});var o=n(65),r=n.n(o);const s="[Auto Illustrator]",a=r().getLogger("auto-illustrator");function i(e){a.setLevel(e)}function l(e,t){return e?`${s} [${e}] ${t}`:`${s} ${t}`}function c(e){return{debug:(t,...n)=>a.debug(l(e,t),...n),info:(t,...n)=>a.info(l(e,t),...n),warn:(t,...n)=>a.warn(l(e,t),...n),error:(t,...n)=>a.error(l(e,t),...n)}}a.setLevel(r().levels.INFO)},974:(e,t,n)=>{"use strict";n.d(t,{BX:()=>r,Ov:()=>l,RJ:()=>a,Y4:()=>i});const o=/<img_prompt="([^"\\]*(?:\\.[^"\\]*)*)"\s*>/g,r=/<img_prompt="[^"]*">/,s=/<img_prompt="[^"]*">\s*<img\s+[^>]*>/g;function a(){return new RegExp(o.source,o.flags)}function i(){return new RegExp(s.source,s.flags)}function l(e){return e.replace(/\\"/g,'"')}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var s=t[o]={id:o,exports:{}};return e[o].call(s.exports,s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{"use strict";var e=n(72),t=n.n(e),o=n(825),r=n.n(o),s=n(659),a=n.n(s),i=n(56),l=n.n(i),c=n(540),u=n.n(c),d=n(113),m=n.n(d),p=n(208),g={};g.styleTagTransform=m(),g.setAttributes=l(),g.insert=a().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=u();t()(p.A,g);p.A&&p.A.locals&&p.A.locals;var f=n(75),E=n(722),h=n(741);const v=(0,h.h)("MessageHandler");function _(e,t,n,o){return async r=>{if(v.info("MESSAGE_RECEIVED event, messageId:",r),n.streamingEnabled&&o)return v.info("MESSAGE_RECEIVED fired for streaming message, marking flag"),void o();if(n.streamingEnabled)return void v.info("Skipping MESSAGE_RECEIVED - streaming mode handles image generation");if(t(r))return void v.info("Skipping MESSAGE_RECEIVED - message is being processed by streaming");const s=e.chat?.[r];if(!s)return void v.info("No message found at index:",r);if(v.info("Message details:",{is_user:s.is_user,is_system:s.is_system,name:s.name,mes_length:s.mes?.length}),s.is_user)return void v.info("Skipping user message");if(v.info("Message text preview:",s.mes.substring(0,200)),!(0,f.R)(s.mes))return void v.info("No image prompts found in message");v.info("Image prompts detected, processing..."),await async function(e,t,n){if((0,f.R)(e)){v.info("Processing message for images:",t);try{const o=await(0,E.M)(e,n);n.chat&&n.chat[t]&&(n.chat[t].mes=o)}catch(e){v.error("Error processing message:",e)}}}(s.mes,r,e),v.info("Emitting MESSAGE_EDITED event");const a=e.eventTypes.MESSAGE_EDITED;e.eventSource.emit(a,r),await e.saveChat(),v.debug("Chat saved after processing message images")}}var y=n(974);const T=(0,h.h)("Pruner");const I=(0,h.h)("Queue");function P(e,t){const n=`${e}:${t}`;let o=0;for(let e=0;e<n.length;e++){o=(o<<5)-o+n.charCodeAt(e),o|=0}return`prompt_${Math.abs(o).toString(36)}`}class b{constructor(){this.prompts=new Map}addPrompt(e,t,n){const o=P(e,t);if(this.prompts.has(o))return I.info("Prompt already queued:",o),null;const r={id:o,prompt:e,startIndex:t,endIndex:n,state:"QUEUED",attempts:0,detectedAt:Date.now()};return this.prompts.set(o,r),I.info("Added prompt:",o,e),r}hasPrompt(e,t){const n=P(e,t);return this.prompts.has(n)}hasPromptByText(e){for(const t of this.prompts.values())if(t.prompt===e)return!0;return!1}getNextPending(){for(const e of this.prompts.values())if("QUEUED"===e.state)return e;return null}updateState(e,t,n){const o=this.prompts.get(e);o?(o.state=t,"GENERATING"===t&&(o.generationStartedAt=Date.now(),o.attempts++),"COMPLETED"!==t&&"FAILED"!==t||(o.completedAt=Date.now()),n?.imageUrl&&(o.imageUrl=n.imageUrl),n?.error&&(o.error=n.error),I.info("Updated state:",e,t)):I.warn("Prompt not found:",e)}getPrompt(e){return this.prompts.get(e)}getAllPrompts(){return Array.from(this.prompts.values())}getPromptsByState(e){return this.getAllPrompts().filter((t=>t.state===e))}getStats(){const e={DETECTED:0,QUEUED:0,GENERATING:0,COMPLETED:0,FAILED:0};for(const t of this.prompts.values())e[t.state]++;return e}clear(){I.info("Clearing queue"),this.prompts.clear()}size(){return this.prompts.size}adjustPositionsAfterInsertion(e,t,n=Date.now()){for(const o of this.prompts.values())o.detectedAt<n&&o.startIndex>e&&("QUEUED"===o.state||"GENERATING"===o.state)&&(o.startIndex+=t,o.endIndex+=t)}}const A=(0,h.h)("Monitor");class R{constructor(e,t,n=300,o){this.messageId=-1,this.lastSeenText="",this.pollInterval=null,this.isRunning=!1,this.queue=e,this.context=t,this.intervalMs=n,this.onNewPromptsCallback=o}start(e){this.isRunning&&(A.warn("Already running, stopping previous monitor"),this.stop()),this.messageId=e,this.lastSeenText="",this.isRunning=!0,A.info(`Starting monitor for message ${e} (interval: ${this.intervalMs}ms)`),this.pollInterval=setInterval((()=>{this.checkForNewPrompts()}),this.intervalMs),this.checkForNewPrompts()}stop(){this.isRunning&&(A.info("Stopping monitor"),this.isRunning=!1,this.pollInterval&&(clearInterval(this.pollInterval),this.pollInterval=null),this.messageId=-1,this.lastSeenText="")}finalScan(){A.info("Performing final scan for remaining prompts"),this.checkForNewPrompts()}checkForNewPrompts(){if(!this.isRunning||this.messageId<0)return;const e=this.context.chat?.[this.messageId];if(!e)return void A.warn("Message not found:",this.messageId);const t=e.mes||"";if(t===this.lastSeenText)return;A.debug(`Text changed (${this.lastSeenText.length} -> ${t.length} chars)`);const n=this.extractNewPrompts(t);if(n.length>0){A.info(`Found ${n.length} new prompts`);for(const e of n)this.queue.addPrompt(e.prompt,e.startIndex,e.endIndex);this.onNewPromptsCallback&&this.onNewPromptsCallback()}this.lastSeenText=t}extractNewPrompts(e){const t=(0,f.g)(e),n=[];for(const e of t)this.queue.hasPromptByText(e.prompt)||n.push(e);return n}getStatus(){return{isRunning:this.isRunning,messageId:this.messageId,lastTextLength:this.lastSeenText.length,intervalMs:this.intervalMs}}isActive(){return this.isRunning}}const S=(0,h.h)("Processor");class w{constructor(e,t,n=1){this.messageId=-1,this.isRunning=!1,this.isProcessing=!1,this.activeGenerations=0,this.processPromise=null,this.deferredImages=[],this.queue=e,this.context=t,this.maxConcurrent=n}start(e){this.isRunning&&(S.warn("Already running, stopping previous processor"),this.stop()),this.messageId=e,this.isRunning=!0,this.activeGenerations=0,this.deferredImages=[],S.info(`Starting processor for message ${e} (max concurrent: ${this.maxConcurrent})`),this.processNext()}stop(){this.isRunning&&(S.info("Stopping processor"),this.isRunning=!1,this.messageId=-1)}async processNext(){if(!(!this.isRunning||this.activeGenerations>=this.maxConcurrent||this.isProcessing)){this.isProcessing=!0;try{const e=this.queue.getNextPending();if(!e)return this.isProcessing=!1,void S.info("No pending prompts, waiting...");S.info(`Processing prompt: ${e.id}`),this.queue.updateState(e.id,"GENERATING"),this.activeGenerations++,this.generateImageForPrompt(e).then((()=>{this.activeGenerations--,this.processNext()})).catch((e=>{S.error("Unexpected error:",e),this.activeGenerations--,this.processNext()})),this.activeGenerations<this.maxConcurrent?(this.isProcessing=!1,setImmediate((()=>this.processNext()))):this.isProcessing=!1}catch(e){S.error("Error in processNext:",e),this.isProcessing=!1}}}async generateImageForPrompt(e){try{S.info(`Generating image for: ${e.prompt}`);const t=await(0,E.F)(e.prompt,this.context);t?(this.queue.updateState(e.id,"COMPLETED",{imageUrl:t}),S.info(`Generated image: ${t}`),this.deferredImages.push({prompt:e,imageUrl:t}),S.info(`Deferred image insertion (${this.deferredImages.length} total)`)):(this.queue.updateState(e.id,"FAILED",{error:"Image generation returned null"}),S.warn(`Failed to generate image for: ${e.prompt}`))}catch(t){this.queue.updateState(e.id,"FAILED",{error:t instanceof Error?t.message:String(t)}),S.error("Error generating image:",t)}}async processRemaining(){for(S.info("Processing remaining prompts...");this.activeGenerations>0;)S.info(`Waiting for ${this.activeGenerations} active generations to complete...`),await new Promise((e=>setTimeout(e,100)));const e=this.queue.getPromptsByState("QUEUED");if(S.info(`${e.length} prompts remaining`),0!==e.length){for(const t of e)await this.generateImageForPrompt(t);S.info("Finished processing remaining prompts")}}trigger(){this.isRunning&&!this.isProcessing&&this.processNext()}getDeferredImages(){return this.deferredImages}clearDeferredImages(){this.deferredImages=[]}getStatus(){return{isRunning:this.isRunning,messageId:this.messageId,activeGenerations:this.activeGenerations,maxConcurrent:this.maxConcurrent,queueStats:this.queue.getStats()}}}const x="nai-4.5-full";function M(e){return`\nIMPORTANT INSTRUCTION: As you generate your response, you MUST include image generation prompts inline with your narrative.\n\nEvery ${e} words (approximately), insert an image generation prompt using this EXACT format:\n<img_prompt="detailed description of the scene, character, or setting to visualize">\n\nRules for image prompts:\n1. Use the exact format: <img_prompt="your description here">\n2. The description should be detailed and visual, describing what should be in the image\n3. Focus on visual elements: character appearance, setting, atmosphere, actions, etc.\n4. Keep descriptions concise but descriptive (1-2 sentences)\n5. Generate prompts naturally within the flow of your narrative\n6. Must add the danbooru character name if the character is from a game / anime / novel, etc.\n7. Use "rating:nsfw" tag for nsfw scenarios\n\nExample:\nThe sun was setting over the ancient castle <img_prompt="medieval stone castle silhouette against orange and purple sunset sky, dramatic lighting, fantasy atmosphere"> as the knight approached the gates. The heavy wooden doors creaked open...\n`.trim()}const N=[{id:"default",name:"Default",template:M(250),predefined:!0},{id:x,name:"NAI 4.5 Full",template:'\nYou will be adding image generation prompts to story content for a SillyTavern extension that uses NovelAI Diffusion 4.5 Full (NAI 4.5 Full). Your goal is to insert detailed, consistent image prompts that will generate high-quality visual representations of the story scenes.\n\nYour task is to insert image generation prompts throughout the story content at natural narrative points, approximately every 250 words. These prompts will be used with NAI 4.5 Full, so they should be optimized for that model.\n\n**Image Prompt Format Requirements:**\n- Use this EXACT format: <img_prompt="your description here">\n- Insert prompts inline with the narrative at natural break points\n- Aim for approximately one prompt every 250 words, but prioritize natural placement over exact word count\n\n**Content Guidelines for NAI 4.5 Full:**\n1. **Character Consistency**: For the same character, always use identical physical descriptions (hair color, eye color, clothing style, distinctive features), unless their looking changed according to the story. If the character is from an anime/game/novel, include their danbooru tag name.\n2. **Visual Details**: Focus on concrete visual elements - character appearance, facial expressions, body language, clothing, setting details, lighting, atmosphere\n3. **NAI 4.5 Optimization**: Use descriptive tags that work well with NAI 4.5, including art style descriptors when appropriate (e.g., "anime style", "detailed illustration", "high quality")\n4. **Scene Description**: Describe the specific moment or scene being depicted, not general concepts\n5. **NSFW Handling**: Add "rating:nsfw" tag for adult content scenarios\n\n**Prompt Content Rules:**\n- Keep each description concise but detailed (1-2 sentences maximum)\n- Include character names and key visual identifiers\n- Describe poses, expressions, and interactions when relevant\n- Include environmental details that set the scene\n- Maintain consistency in character descriptions throughout\n- Use present tense and active descriptions\n\n**Example prompt**\n```\n<img_prompt="morning sunlight filtering through curtains, nilou (genshin impact) sleeping peacefully in bed, long red hair spread on white pillow, closed eyes with long lashes, man with short black hair beside her, soft warm lighting, detailed anime style">\n```\n\nProvide the complete story content with image prompts properly inserted. Maintain all original text while adding the image generation prompts at appropriate narrative moments.\n'.trim(),predefined:!0}];function L(e,t){const n=t.find((t=>t.id===e));if(n)return n;const o=function(e){return N.find((t=>t.id===e))}(e);return o||N[0]}function C(e){return N.some((t=>t.id===e))}const D="auto_illustrator",O={DEFAULT:250,MIN:50,MAX:1e3,STEP:50},G={DEFAULT:300,MIN:100,MAX:1e3,STEP:50},k={DEFAULT:1,MIN:1,MAX:5,STEP:1},B={enabled:!0,streamingEnabled:!0,wordInterval:O.DEFAULT,streamingPollInterval:G.DEFAULT,maxConcurrentGenerations:k.DEFAULT,logLevel:"info",currentPresetId:"default",customPresets:[],manualGenerationMode:"replace"},F={ENABLED:"auto_illustrator_enabled",WORD_INTERVAL:"auto_illustrator_word_interval",META_PROMPT:"auto_illustrator_meta_prompt",META_PROMPT_PRESET_SELECT:"auto_illustrator_preset_select",META_PROMPT_PRESET_EDIT:"auto_illustrator_preset_edit",META_PROMPT_PRESET_SAVE:"auto_illustrator_preset_save",META_PROMPT_PRESET_SAVE_AS:"auto_illustrator_preset_save_as",META_PROMPT_PRESET_DELETE:"auto_illustrator_preset_delete",META_PROMPT_PRESET_CANCEL:"auto_illustrator_preset_cancel",PRESET_EDITOR:"auto_illustrator_preset_editor",PRESET_VIEWER:"auto_illustrator_preset_viewer",PRESET_PREVIEW:"auto_illustrator_preset_preview",STREAMING_ENABLED:"auto_illustrator_streaming_enabled",STREAMING_POLL_INTERVAL:"auto_illustrator_streaming_poll_interval",MAX_CONCURRENT:"auto_illustrator_max_concurrent",LOG_LEVEL:"auto_illustrator_log_level",MANUAL_GEN_MODE:"auto_illustrator_manual_gen_mode",RESET_BUTTON:"auto_illustrator_reset"};function U(){return{...B,metaPrompt:(e=O.DEFAULT,M(e))};var e}function V(e,t){t.extensionSettings[D]=e,t.saveSettingsDebounced()}const W=(0,h.h)("ManualGen");async function q(e,t,n,o){W.info(`Generating images for message ${e} in ${t} mode`);const r=n.chat?.[e];if(!r)return W.warn("Message not found:",e),toastr.error("Message not found","Auto Illustrator"),0;let s=r.mes;const a=(0,f.g)(s);if(0===a.length)return W.info("No prompts found in message"),toastr.info("No image prompts found in message","Auto Illustrator"),0;if(W.info(`Found ${a.length} prompts`),"replace"===t){const e=s.length;s=function(e){const t=(0,y.Y4)();return e.replace(t,(e=>{const t=e.match(/<img_prompt="[^"]*">/);return t?t[0]:e}))}(s),W.info(`Replace mode: removed existing images (${e} -> ${s.length} chars)`)}else W.info("Append mode: will append new images after existing ones");const i=a;toastr.info(`Generating ${i.length} image${i.length>1?"s":""}...`,"Auto Illustrator");const l=performance.now();let c=0;for(let e=0;e<i.length;e++){const o=i[e];W.info(`Generating image ${e+1}/${i.length}`);const r=await(0,E.F)(o.prompt,n);if(r){const n=`<img_prompt="${o.prompt}">`,a=s.indexOf(n);if(-1!==a){let o=a+n.length;if("append"===t){const e=s.substring(o),t=/^\s*<img\s+[^>]*>/g;let n,r=0;for(;null!==(n=t.exec(e));)r=n.index+n[0].length,t.lastIndex=r;r>0&&(o+=r)}const i=`\n<img src="${r}" title="AI generated image #${e+1}" alt="AI generated image #${e+1}">`;s=s.substring(0,o)+i+s.substring(o),c++}}}const u=performance.now()-l;W.info(`Generated ${c}/${i.length} images (${u.toFixed(0)}ms total)`),r.mes=s;const d=n.eventTypes.MESSAGE_EDITED;await n.eventSource.emit(d,e),n.updateMessageBlock(e,r);const m=n.eventTypes.MESSAGE_UPDATED;return await n.eventSource.emit(m,e),await n.saveChat(),W.debug("Chat saved after manual generation"),c===i.length?toastr.success(`Successfully generated ${c} image${c>1?"s":""}`,"Auto Illustrator"):c>0?toastr.warning(`Generated ${c} of ${i.length} images`,"Auto Illustrator"):toastr.error("Failed to generate images","Auto Illustrator"),c}function H(e,t,n,o){const r=n.chat?.[t];if(!r||r.is_user)return;if(!(0,f.R)(r.mes))return;const s=$(e);if(s.find(".auto_illustrator_manual_gen").length>0)return;const a=$("<div>").addClass("mes_button auto_illustrator_manual_gen fa-solid fa-wand-magic-sparkles").attr("title","Generate images from prompts").attr("data-i18n","[title]Generate images from prompts").on("click",(async()=>{a.prop("disabled",!0),a.css("opacity","0.5");try{await async function(e,t,n){const o=t.chat?.[e];if(!o)return void W.warn("Message not found:",e);const r=(0,f.g)(o.mes);if(0===r.length)return void toastr.info("No image prompts found in message","Auto Illustrator");let s=`Found ${r.length} image prompt${r.length>1?"s":""} in this message.`;s+="\n\nHow would you like to generate images?";const a=await new Promise((e=>{const t=$("<div>").addClass("auto-illustrator-dialog-backdrop"),o=$("<div>").attr("id","auto_illustrator_manual_gen_dialog").addClass("auto-illustrator-dialog");o.append($("<p>").text(s));const r=$("<div>").addClass("auto-illustrator-mode-group"),a=$("<label>").addClass("auto-illustrator-mode-option").append($("<input>").attr("type","radio").attr("name","generation_mode").val("replace").prop("checked","replace"===n.manualGenerationMode)).append($("<span>").html("<strong>Replace:</strong> Remove existing images and regenerate new ones")),i=$("<label>").addClass("auto-illustrator-mode-option").append($("<input>").attr("type","radio").attr("name","generation_mode").val("append").prop("checked","append"===n.manualGenerationMode)).append($("<span>").html("<strong>Append:</strong> Keep existing images and add new ones after them"));r.append(a).append(i),o.append(r);const l=$("<div>").addClass("auto-illustrator-dialog-buttons"),c=$("<button>").text("Generate").addClass("menu_button").on("click",(()=>{const n=o.find('input[name="generation_mode"]:checked').val();t.remove(),o.remove(),e(n)})),u=$("<button>").text("Cancel").addClass("menu_button").on("click",(()=>{t.remove(),o.remove(),e(null)}));l.append(c).append(u),o.append(l),$("body").append(t).append(o),t.on("click",(()=>{t.remove(),o.remove(),e(null)}))}));a?await q(e,a,t):W.info("Generation cancelled by user")}(t,n,o)}finally{a.prop("disabled",!1),a.css("opacity","1")}})),i=s.find(".extraMesButtons");i.length>0&&i.append(a)}const X=(0,h.h)("Main");let z,j,Y=!1,J=null,Q=null,K=!1,Z=null,ee=null,te=null,ne=null;function oe(){const e=document.getElementById(F.ENABLED),t=document.getElementById(F.WORD_INTERVAL),n=document.getElementById(F.META_PROMPT),o=document.getElementById(F.META_PROMPT_PRESET_SELECT),r=document.getElementById(F.META_PROMPT_PRESET_DELETE),s=document.getElementById(F.PRESET_EDITOR),a=document.getElementById(F.PRESET_VIEWER),i=document.getElementById(F.PRESET_PREVIEW),l=document.getElementById(F.STREAMING_ENABLED),c=document.getElementById(F.STREAMING_POLL_INTERVAL),u=document.getElementById(F.MAX_CONCURRENT),d=document.getElementById(F.LOG_LEVEL);if(e&&(e.checked=j.enabled),t&&(t.value=j.wordInterval.toString()),l&&(l.checked=j.streamingEnabled),c&&(c.value=j.streamingPollInterval.toString()),u&&(u.value=j.maxConcurrentGenerations.toString()),d&&(d.value=j.logLevel),o){const e=o.querySelector("#custom_presets_group");e&&(e.innerHTML="",j.customPresets.forEach((t=>{const n=document.createElement("option");n.value=t.id,n.textContent=t.name,e.appendChild(n)}))),o.value=j.currentPresetId}if(r){const e=C(j.currentPresetId);r.disabled=e,r.title=e?"Cannot delete predefined presets":"Delete custom preset"}i&&(i.textContent=j.metaPrompt),n&&(n.value=j.metaPrompt),s&&(s.style.display="none"),a&&(a.style.display="block"),Y=!1}function re(){const e=document.getElementById(F.ENABLED),t=document.getElementById(F.WORD_INTERVAL),n=document.getElementById(F.META_PROMPT),o=document.getElementById(F.STREAMING_ENABLED),r=document.getElementById(F.STREAMING_POLL_INTERVAL),s=document.getElementById(F.MAX_CONCURRENT),a=document.getElementById(F.LOG_LEVEL);j.enabled=e?.checked??j.enabled,j.wordInterval=t?parseInt(t.value):j.wordInterval,j.metaPrompt=n?.value??j.metaPrompt,j.streamingEnabled=o?.checked??j.streamingEnabled,j.streamingPollInterval=r?parseInt(r.value):j.streamingPollInterval,j.maxConcurrentGenerations=s?parseInt(s.value):j.maxConcurrentGenerations,j.logLevel=a?.value??j.logLevel,(0,h.He)(j.logLevel),V(j,z),X.info("Settings updated:",j)}function se(){j=U(),V(j,z),oe(),X.info("Settings reset to defaults")}function ae(){Y&&ue();const e=document.getElementById(F.META_PROMPT_PRESET_SELECT);if(!e)return;const t=e.value,n=L(t,j.customPresets);j.currentPresetId=t,j.metaPrompt=n.template,V(j,z),oe(),X.info("Preset changed:",{id:t,name:n.name})}function ie(){const e=document.getElementById(F.PRESET_EDITOR),t=document.getElementById(F.PRESET_VIEWER),n=document.getElementById(F.META_PROMPT),o=document.getElementById(F.META_PROMPT_PRESET_SAVE);if(e&&t&&n){if(t.style.display="none",e.style.display="block",n.removeAttribute("readonly"),n.value=j.metaPrompt,o){const e=C(j.currentPresetId);o.disabled=e,o.title=e?"Cannot save changes to predefined presets (use Save As)":"Save changes to this preset"}Y=!0,X.info("Entered preset edit mode")}}function le(){if(C(j.currentPresetId))return void toastr.error('Cannot save changes to predefined presets. Use "Save As" to create a custom preset.',"Auto Illustrator");const e=document.getElementById(F.META_PROMPT);if(!e)return;const t=e.value,n=j.customPresets.findIndex((e=>e.id===j.currentPresetId));if(-1===n)return void toastr.error("Preset not found","Auto Illustrator");j.customPresets[n].template=t,j.metaPrompt=t,V(j,z);const o=document.getElementById(F.PRESET_EDITOR),r=document.getElementById(F.PRESET_VIEWER);o&&(o.style.display="none"),r&&(r.style.display="block"),Y=!1,oe(),toastr.success("Preset saved","Auto Illustrator"),X.info("Preset saved:",j.customPresets[n].name)}function ce(){const e=document.getElementById(F.META_PROMPT);if(!e)return;const t=e.value,n=prompt("Enter name for new preset:");if(!n||""===n.trim())return;const o=n.trim();if(function(e){const t=e.toLowerCase();return N.some((e=>e.name.toLowerCase()===t))}(o))return void toastr.error("Cannot use predefined preset names (Default, NAI 4.5 Full)","Auto Illustrator");const r=j.customPresets.find((e=>e.name===o));if(r){if(!confirm(`Overwrite existing preset '${o}'?`))return;r.template=t,j.currentPresetId=r.id,j.metaPrompt=t}else{const e={id:`custom-${Date.now()}`,name:o,template:t,predefined:!1};j.customPresets.push(e),j.currentPresetId=e.id,j.metaPrompt=t}V(j,z);const s=document.getElementById(F.PRESET_EDITOR),a=document.getElementById(F.PRESET_VIEWER);s&&(s.style.display="none"),a&&(a.style.display="block"),Y=!1,oe(),toastr.success(`Preset '${o}' saved`,"Auto Illustrator"),X.info("Preset saved as:",o)}function ue(){const e=document.getElementById(F.PRESET_EDITOR),t=document.getElementById(F.PRESET_VIEWER),n=document.getElementById(F.META_PROMPT);e&&t&&n&&(e.style.display="none",t.style.display="block",n.setAttribute("readonly","readonly"),n.value=j.metaPrompt,Y=!1,X.info("Cancelled preset edit"))}function de(){if(C(j.currentPresetId))return void toastr.error("Cannot delete predefined presets","Auto Illustrator");const e=j.customPresets.find((e=>e.id===j.currentPresetId));if(!e)return void toastr.error("Preset not found","Auto Illustrator");if(!confirm(`Delete preset '${e.name}'?`))return;j.customPresets=j.customPresets.filter((e=>e.id!==j.currentPresetId)),j.currentPresetId="default";const t=L("default",j.customPresets);j.metaPrompt=t.template,V(j,z),oe(),toastr.success(`Preset '${e.name}' deleted`,"Auto Illustrator"),X.info("Preset deleted:",e.name)}function me(e){if(ee?.isActive())return;if(!j.streamingEnabled||!j.enabled)return;if(!z.chat||0===z.chat.length)return;const t=z.chat.length-1,n=z.chat[t];n.is_user||n.is_system||(ee&&ne===t?X.debug(`Already monitoring message ${t}, skipping reinitialization`):(X.info(`First stream token received, starting streaming for message ${t}`),ee&&ee.stop(),te&&te.stop(),Z=new b,te=new w(Z,z,j.maxConcurrentGenerations),ee=new R(Z,z,j.streamingPollInterval,(()=>te?.trigger())),ne=t,K=!1,Q=null,ee.start(t),te.start(t),X.info("Streaming monitor and processor started")))}async function pe(){if(Q&&K){const{images:e,messageId:t}=Q;X.info(`Both conditions met, inserting ${e.length} deferred images`),Q=null,K=!1;const{insertDeferredImages:o}=await Promise.resolve().then(n.bind(n,722));await o(e,t,z)}}async function ge(){if(J=null,X.debug("Generation ended, cleared generation type"),!ee||!te||!Z)return;X.info("GENERATION_ENDED, cleaning up streaming"),ee.finalScan(),ee.stop(),await te.processRemaining();const e=te.getDeferredImages(),t=ne,n=Z.getStats();X.info("Final streaming stats:",n),X.info(`Deferred images count: ${e.length} for message ${t}`),te.stop(),e.length>0&&null!==t&&(Q={images:e,messageId:t},X.info(`${e.length} images ready, checking if MESSAGE_RECEIVED fired`)),Z=null,ee=null,te=null,ne=null;const o=n.FAILED;o>0&&toastr.warning(`${o} image${o>1?"s":""} failed to generate during streaming`,"Auto Illustrator"),await pe()}function fe(){X.debug("Adding manual generation buttons to existing messages"),$(".mes").each(((e,t)=>{const n=$(t),o=n.attr("mesid");if(o){const e=parseInt(o,10);isNaN(e)||H(n,e,z,j)}}))}!function(){X.info("Initializing extension...");try{z=SillyTavern.getContext(),X.info("Got SillyTavern context")}catch(e){return void X.error("Failed to get SillyTavern context:",e)}j=function(e){const t=U(),n=e.extensionSettings[D];if(!n)return t;const o={...t,...n},r=L(o.currentPresetId,o.customPresets||[]);return o.metaPrompt=r.template,o}(z),X.info("Loaded settings:",j),(0,h.He)(j.logLevel);const e=_(z,(e=>ne===e),j,(()=>(X.info("MESSAGE_RECEIVED callback invoked, setting flag"),K=!0,pe(),null))),t=z.eventTypes.MESSAGE_RECEIVED;z.eventSource.on(t,e),z.eventSource.on(t,(e=>{setTimeout((()=>{const t=$(`.mes[mesid="${e}"]`);t.length>0&&H(t,e,z,j)}),100)}));const n=z.eventTypes.GENERATION_STARTED;z.eventSource.on(n,(e=>{J=e,X.debug("Generation started",{type:e})}));const o=z.eventTypes.CHAT_COMPLETION_PROMPT_READY;z.eventSource.on(o,(e=>{e?.dryRun?X.info("Skipping prompt ready processing for dry run"):e?.chat&&(!function(e){T.info("Pruning generated images from chat history");for(const t of e){if("user"===t.role||"system"===t.role)continue;const e=(0,y.Y4)(),n=t.content;t.content=t.content.replace(e,(e=>{const t=e.match(y.BX);return t?t[0]:e})),n!==t.content&&T.info("Pruned generated images from assistant message")}}(e.chat),j.enabled&&j.metaPrompt&&J&&!["quiet","impersonate"].includes(J)?(X.info("Injecting meta-prompt as last system message",{generationType:J,metaPromptLength:j.metaPrompt.length}),e.chat.push({role:"system",content:j.metaPrompt})):X.debug("Skipping meta-prompt injection",{enabled:j.enabled,hasMetaPrompt:!!j.metaPrompt,generationType:J}))}));const r=z.eventTypes.STREAM_TOKEN_RECEIVED,s=z.eventTypes.GENERATION_ENDED;z.eventSource.on(r,me),z.eventSource.on(s,ge),X.info("Event handlers registered:",{MESSAGE_RECEIVED:t,GENERATION_STARTED:n,CHAT_COMPLETION_PROMPT_READY:o,STREAM_TOKEN_RECEIVED:r,GENERATION_ENDED:s});const a=document.getElementById("extensions_settings2");if(a){const e=`\n    <div class="auto-illustrator-settings">\n      <div class="inline-drawer">\n        <div class="inline-drawer-toggle inline-drawer-header">\n          <b>Auto Illustrator</b>\n          <div class="inline-drawer-icon fa-solid fa-circle-chevron-down down"></div>\n        </div>\n        <div class="inline-drawer-content">\n          <div style="display: flex; align-items: center; justify-content: space-between;">\n            <label class="checkbox_label" for="${F.ENABLED}">\n              <input id="${F.ENABLED}" type="checkbox" />\n              <span>Enable Auto Illustrator</span>\n            </label>\n            <div id="${F.RESET_BUTTON}" class="menu_button menu_button_icon">\n              <i class="fa-solid fa-undo"></i>\n              <span>Reset to Defaults</span>\n            </div>\n          </div>\n\n          <label for="${F.WORD_INTERVAL}">\n            <span>Word Interval (approx. words between images)</span>\n            <input id="${F.WORD_INTERVAL}" class="text_pole" type="number" min="${O.MIN}" max="${O.MAX}" step="${O.STEP}" />\n          </label>\n\n          <div class="preset-management">\n            <label>Meta Prompt Preset</label>\n            <div class="preset-toolbar">\n              <select id="${F.META_PROMPT_PRESET_SELECT}" class="text_pole flex_fill">\n                <optgroup label="Predefined Presets">\n                  <option value="default">Default</option>\n                  <option value="nai-4.5-full">NAI 4.5 Full</option>\n                </optgroup>\n                <optgroup label="Custom Presets" id="custom_presets_group">\n                  \x3c!-- populated by JavaScript --\x3e\n                </optgroup>\n              </select>\n              <button id="${F.META_PROMPT_PRESET_EDIT}" class="menu_button menu_button_icon" title="Edit preset">\n                <i class="fa-solid fa-edit"></i>\n              </button>\n              <button id="${F.META_PROMPT_PRESET_DELETE}" class="menu_button menu_button_icon" title="Delete custom preset">\n                <i class="fa-solid fa-trash"></i>\n              </button>\n            </div>\n\n            <div id="${F.PRESET_EDITOR}" style="display:none">\n              <label for="${F.META_PROMPT}">\n                <span>Meta Prompt Template</span>\n                <small>Editing preset - Save or Save As to keep changes</small>\n                <textarea id="${F.META_PROMPT}" class="text_pole textarea_compact" rows="10" readonly></textarea>\n              </label>\n              <div class="preset-edit-actions">\n                <button id="${F.META_PROMPT_PRESET_SAVE}" class="menu_button">\n                  <i class="fa-solid fa-save"></i> Save\n                </button>\n                <button id="${F.META_PROMPT_PRESET_SAVE_AS}" class="menu_button">\n                  <i class="fa-solid fa-copy"></i> Save As...\n                </button>\n                <button id="${F.META_PROMPT_PRESET_CANCEL}" class="menu_button">\n                  <i class="fa-solid fa-times"></i> Cancel\n                </button>\n              </div>\n            </div>\n\n            <div id="${F.PRESET_VIEWER}" class="preset-content-preview">\n              <label>Preset Content Preview:</label>\n              <pre id="${F.PRESET_PREVIEW}" class="preset-preview-text"></pre>\n            </div>\n          </div>\n\n          <hr>\n\n          <label class="checkbox_label" for="${F.STREAMING_ENABLED}">\n            <input id="${F.STREAMING_ENABLED}" type="checkbox" />\n            <span>Enable Streaming Image Generation</span>\n            <small>Generate images as streaming text arrives (faster perceived latency)</small>\n          </label>\n\n          <label for="${F.STREAMING_POLL_INTERVAL}">\n            <span>Streaming Poll Interval (ms)</span>\n            <small>How often to check for new prompts during streaming (lower = faster detection, more CPU)</small>\n            <input id="${F.STREAMING_POLL_INTERVAL}" class="text_pole" type="number" min="${G.MIN}" max="${G.MAX}" step="${G.STEP}" />\n          </label>\n\n          <label for="${F.MAX_CONCURRENT}">\n            <span>Max Concurrent Generations</span>\n            <small>Maximum number of images to generate simultaneously (1 recommended for rate limiting)</small>\n            <input id="${F.MAX_CONCURRENT}" class="text_pole" type="number" min="${k.MIN}" max="${k.MAX}" step="${k.STEP}" />\n          </label>\n\n          <label for="${F.LOG_LEVEL}">\n            <span>Log Level</span>\n            <small>Controls logging verbosity (DEBUG shows detailed monitoring, INFO shows key events, WARN/ERROR minimal)</small>\n            <select id="${F.LOG_LEVEL}" class="text_pole">\n              <option value="trace">TRACE (Most Verbose)</option>\n              <option value="debug">DEBUG</option>\n              <option value="info">INFO (Default)</option>\n              <option value="warn">WARN</option>\n              <option value="error">ERROR</option>\n              <option value="silent">SILENT (No Logs)</option>\n            </select>\n          </label>\n        </div>\n      </div>\n    </div>\n  `.trim();a.insertAdjacentHTML("beforeend",e);const t=document.getElementById(F.ENABLED),n=document.getElementById(F.WORD_INTERVAL),o=document.getElementById(F.META_PROMPT_PRESET_SELECT),r=document.getElementById(F.META_PROMPT_PRESET_EDIT),s=document.getElementById(F.META_PROMPT_PRESET_SAVE),i=document.getElementById(F.META_PROMPT_PRESET_SAVE_AS),l=document.getElementById(F.META_PROMPT_PRESET_DELETE),c=document.getElementById(F.META_PROMPT_PRESET_CANCEL),u=document.getElementById(F.STREAMING_ENABLED),d=document.getElementById(F.STREAMING_POLL_INTERVAL),m=document.getElementById(F.MAX_CONCURRENT),p=document.getElementById(F.LOG_LEVEL),g=document.getElementById(F.RESET_BUTTON);t?.addEventListener("change",re),n?.addEventListener("change",re),o?.addEventListener("change",ae),r?.addEventListener("click",ie),s?.addEventListener("click",le),i?.addEventListener("click",ce),l?.addEventListener("click",de),c?.addEventListener("click",ue),u?.addEventListener("change",re),d?.addEventListener("change",re),m?.addEventListener("change",re),p?.addEventListener("change",re),g?.addEventListener("click",se),oe()}X.info("Extension initialized successfully");const i=z.eventTypes.CHAT_CHANGED;z.eventSource.on(i,(()=>{X.info("CHAT_CHANGED"),setTimeout((()=>fe()),100)})),fe()}()})()})();