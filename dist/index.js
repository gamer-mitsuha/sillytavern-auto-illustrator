(()=>{var e={208:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var o=n(601),r=n.n(o),a=n(314),i=n.n(a)()(r());i.push([e.id,"/* Clickable AI-generated images */\n.mes_text img[title^='AI generated image'] {\n  cursor: pointer;\n  transition:\n    opacity 0.2s,\n    transform 0.2s,\n    box-shadow 0.2s;\n}\n\n.mes_text img[title^='AI generated image']:hover {\n  opacity: 0.85;\n  transform: scale(1.02);\n  box-shadow: 0 0 15px rgba(155, 89, 182, 0.6);\n}\n\n/* Preset Management Styles */\n.preset-management {\n  margin: 1rem 0;\n}\n\n.preset-toolbar {\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n  margin-bottom: 0.5rem;\n}\n\n.preset-toolbar .flex_fill {\n  flex: 1;\n}\n\n.preset-toolbar button {\n  flex-shrink: 0;\n}\n\n.preset-toolbar button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.preset-content-preview {\n  margin-top: 0.5rem;\n  padding: 0.75rem;\n  background-color: rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 4px;\n}\n\n.preset-content-preview label {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: bold;\n  font-size: 0.9rem;\n}\n\n.preset-preview-text {\n  font-family: 'Courier New', Courier, monospace;\n  font-size: 0.85rem;\n  white-space: pre-wrap;\n  word-break: break-word;\n  max-height: 200px;\n  overflow-y: auto;\n  margin: 0;\n  padding: 0.5rem;\n  background-color: rgba(0, 0, 0, 0.2);\n  border-radius: 3px;\n}\n\n.preset-edit-actions {\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 0.5rem;\n}\n\n.preset-edit-actions button {\n  flex: 1;\n}\n\n.preset-edit-actions button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* Pattern Validation Status */\n.pattern-validation-status {\n  margin-top: 0.75rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  font-size: 0.9rem;\n  line-height: 1.5;\n}\n\n.pattern-validation-status.validation-success {\n  background-color: rgba(76, 175, 80, 0.1);\n  border: 1px solid rgba(76, 175, 80, 0.3);\n  color: #81c784;\n}\n\n.pattern-validation-status.validation-warning {\n  background-color: rgba(255, 152, 0, 0.1);\n  border: 1px solid rgba(255, 152, 0, 0.3);\n  color: #ffb74d;\n}\n\n.pattern-validation-status .validation-icon {\n  margin-right: 0.5rem;\n  font-weight: bold;\n}\n\n.pattern-validation-status .validation-message {\n  display: block;\n}\n\n.pattern-validation-status .validation-hint {\n  display: block;\n  margin-top: 0.5rem;\n  font-size: 0.85rem;\n  opacity: 0.8;\n}\n\n/* Manual Generation Button */\n.auto_illustrator_manual_gen {\n  color: #9b59b6 !important;\n  cursor: pointer;\n}\n\n.auto_illustrator_manual_gen:hover {\n  color: #bb79d6 !important;\n}\n\n.auto_illustrator_manual_gen:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* Manual Generation Dialog Backdrop */\n.auto-illustrator-dialog-backdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.7);\n  z-index: 9999;\n}\n\n/* All dialogs (manual generation, regeneration, prompt update, confirmation) */\n.auto-illustrator-dialog {\n  position: fixed;\n  top: 10vh;\n  left: 50%;\n  transform: translateX(-50%);\n  background: var(--SmartThemeBlurTintColor, #2a2a2a);\n  border: 2px solid var(--SmartThemeBorderColor, #666);\n  border-radius: 8px;\n  padding: 1.5rem;\n  max-width: 500px;\n  max-height: 85vh;\n  width: 90%;\n  z-index: 10000;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.8);\n  color: #ffffff;\n  overflow-y: auto;\n  box-sizing: border-box;\n}\n\n/* Regeneration confirmation dialog - position lower for easier tapping */\n#auto_illustrator_regen_confirm_dialog {\n  top: 35vh;\n}\n\n/* Mobile optimizations */\n@media (max-width: 768px) {\n  .auto-illustrator-dialog {\n    width: 95%;\n    padding: 1rem;\n    top: 5vh;\n    max-height: 90vh;\n  }\n\n  #auto_illustrator_regen_confirm_dialog {\n    top: 30vh;\n  }\n\n  .auto-illustrator-dialog h3 {\n    font-size: 1rem;\n  }\n\n  .auto-illustrator-dialog p {\n    font-size: 0.9rem;\n  }\n}\n\n.auto-illustrator-dialog p {\n  margin: 0 0 1rem 0;\n  line-height: 1.6;\n  white-space: pre-line;\n  color: #ffffff;\n  font-size: 1rem;\n}\n\n.auto-illustrator-dialog h3 {\n  margin: 0 0 1rem 0;\n  color: #ffffff;\n  font-size: 1.2rem;\n}\n\n.auto-illustrator-dialog label {\n  display: block;\n  margin: 0.5rem 0 0.25rem 0;\n  color: #ffffff;\n  font-size: 0.9rem;\n}\n\n.auto-illustrator-dialog textarea {\n  width: 100%;\n  min-height: 80px;\n  padding: 0.5rem;\n  background: rgba(0, 0, 0, 0.3);\n  border: 1px solid var(--SmartThemeBorderColor, #666);\n  border-radius: 4px;\n  color: #ffffff;\n  font-family: inherit;\n  font-size: 0.9rem;\n  resize: vertical;\n  box-sizing: border-box;\n}\n\n.auto-illustrator-dialog textarea:focus {\n  outline: none;\n  border-color: #9b59b6;\n  background: rgba(0, 0, 0, 0.4);\n}\n\n.auto-illustrator-dialog textarea::placeholder {\n  color: rgba(255, 255, 255, 0.4);\n}\n\n.auto-illustrator-feedback-textarea {\n  margin-bottom: 0.5rem;\n}\n\n.auto-illustrator-mode-group {\n  margin: 1rem 0;\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.auto-illustrator-mode-option {\n  display: flex;\n  align-items: flex-start;\n  gap: 0.75rem;\n  padding: 0.75rem;\n  border: 1px solid var(--SmartThemeBorderColor, #666);\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  color: #ffffff;\n  background: rgba(0, 0, 0, 0.2);\n}\n\n.auto-illustrator-mode-option span {\n  color: #ffffff;\n  line-height: 1.5;\n}\n\n.auto-illustrator-mode-option:hover {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n\n.auto-illustrator-mode-option input[type=\"radio\"] {\n  margin-top: 0.2rem;\n  cursor: pointer;\n  flex-shrink: 0;\n}\n\n.auto-illustrator-mode-option span {\n  flex: 1;\n  line-height: 1.4;\n}\n\n.auto-illustrator-mode-option strong {\n  display: block;\n  margin-bottom: 0.25rem;\n}\n\n.auto-illustrator-dialog-buttons {\n  display: flex;\n  gap: 0.5rem;\n  justify-content: flex-end;\n  margin-top: 1.5rem;\n  flex-wrap: wrap;\n}\n\n.auto-illustrator-dialog-buttons button {\n  min-width: 100px;\n  flex: 1 1 auto;\n  white-space: nowrap;\n}\n\n/* Mobile button optimizations */\n@media (max-width: 768px) {\n  .auto-illustrator-dialog-buttons {\n    gap: 0.4rem;\n    margin-top: 1rem;\n  }\n\n  .auto-illustrator-dialog-buttons button {\n    min-width: 80px;\n    font-size: 0.9rem;\n    padding: 0.5rem 0.75rem;\n  }\n}",""]);const s=i},314:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(i[l]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);o&&i[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),t.push(u))}},t}},601:e=>{"use strict";e.exports=function(e){return e[1]}},65:function(e,t,n){var o,r;!function(a,i){"use strict";o=function(){var e=function(){},t="undefined",n=typeof window!==t&&typeof window.navigator!==t&&/Trident\/|MSIE /.test(window.navigator.userAgent),o=["trace","debug","info","warn","error"],r={},a=null;function i(e,t){var n=e[t];if("function"==typeof n.bind)return n.bind(e);try{return Function.prototype.bind.call(n,e)}catch(t){return function(){return Function.prototype.apply.apply(n,[e,arguments])}}}function s(){console.log&&(console.log.apply?console.log.apply(console,arguments):Function.prototype.apply.apply(console.log,[console,arguments])),console.trace&&console.trace()}function l(o){return"debug"===o&&(o="log"),typeof console!==t&&("trace"===o&&n?s:void 0!==console[o]?i(console,o):void 0!==console.log?i(console,"log"):e)}function c(){for(var n=this.getLevel(),r=0;r<o.length;r++){var a=o[r];this[a]=r<n?e:this.methodFactory(a,n,this.name)}if(this.log=this.debug,typeof console===t&&n<this.levels.SILENT)return"No console available for logging"}function u(e){return function(){typeof console!==t&&(c.call(this),this[e].apply(this,arguments))}}function d(e,t,n){return l(e)||u.apply(this,arguments)}function m(e,n){var i,s,l,u=this,m="loglevel";function g(e){var n=(o[e]||"silent").toUpperCase();if(typeof window!==t&&m){try{return void(window.localStorage[m]=n)}catch(e){}try{window.document.cookie=encodeURIComponent(m)+"="+n+";"}catch(e){}}}function p(){var e;if(typeof window!==t&&m){try{e=window.localStorage[m]}catch(e){}if(typeof e===t)try{var n=window.document.cookie,o=encodeURIComponent(m),r=n.indexOf(o+"=");-1!==r&&(e=/^([^;]+)/.exec(n.slice(r+o.length+1))[1])}catch(e){}return void 0===u.levels[e]&&(e=void 0),e}}function h(){if(typeof window!==t&&m){try{window.localStorage.removeItem(m)}catch(e){}try{window.document.cookie=encodeURIComponent(m)+"=; expires=Thu, 01 Jan 1970 00:00:00 UTC"}catch(e){}}}function f(e){var t=e;if("string"==typeof t&&void 0!==u.levels[t.toUpperCase()]&&(t=u.levels[t.toUpperCase()]),"number"==typeof t&&t>=0&&t<=u.levels.SILENT)return t;throw new TypeError("log.setLevel() called with invalid level: "+e)}"string"==typeof e?m+=":"+e:"symbol"==typeof e&&(m=void 0),u.name=e,u.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},u.methodFactory=n||d,u.getLevel=function(){return null!=l?l:null!=s?s:i},u.setLevel=function(e,t){return l=f(e),!1!==t&&g(l),c.call(u)},u.setDefaultLevel=function(e){s=f(e),p()||u.setLevel(e,!1)},u.resetLevel=function(){l=null,h(),c.call(u)},u.enableAll=function(e){u.setLevel(u.levels.TRACE,e)},u.disableAll=function(e){u.setLevel(u.levels.SILENT,e)},u.rebuild=function(){if(a!==u&&(i=f(a.getLevel())),c.call(u),a===u)for(var e in r)r[e].rebuild()},i=f(a?a.getLevel():"WARN");var y=p();null!=y&&(l=f(y)),c.call(u)}(a=new m).getLogger=function(e){if("symbol"!=typeof e&&"string"!=typeof e||""===e)throw new TypeError("You must supply a name when creating a logger.");var t=r[e];return t||(t=r[e]=new m(e,a.methodFactory)),t};var g=typeof window!==t?window.log:void 0;return a.noConflict=function(){return typeof window!==t&&window.log===a&&(window.log=g),a},a.getLoggers=function(){return r},a.default=a,a},void 0===(r="function"==typeof o?o.call(t,n,t,e):o)||(e.exports=r)}()},72:e=>{"use strict";var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},i=[],s=0;s<e.length;s++){var l=e[s],c=o.base?l[0]+o.base:l[0],u=a[c]||0,d="".concat(c," ").concat(u);a[c]=u+1;var m=n(d),g={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==m)t[m].references++,t[m].updater(g);else{var p=r(g,o);o.byIndex=s,t.splice(s,0,{identifier:d,updater:p,references:1})}i.push(d)}return i}function r(e,t){var n=t.domAPI(t);n.update(e);return function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var s=n(a[i]);t[s].references--}for(var l=o(e,r),c=0;c<a.length;c++){var u=n(a[c]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}a=l}}},659:e=>{"use strict";var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},540:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},28:(e,t,n)=>{"use strict";n.d(t,{BB:()=>r,DV:()=>s,a$:()=>l,a2:()=>o,he:()=>c,uF:()=>i,zY:()=>a});const o="auto_illustrator",r={DEFAULT:300,MIN:100,MAX:1e3,STEP:50},a={DEFAULT:1,MIN:1,MAX:5,STEP:1},i={DEFAULT:0,MIN:0,MAX:1e4,STEP:100},s=['\x3c!--img-prompt="([^"\\\\]*(?:\\\\.[^"\\\\]*)*)"\\s*--\x3e','<img-prompt="([^"\\\\]*(?:\\\\.[^"\\\\]*)*)"\\s*>','<img_prompt="([^"\\\\]*(?:\\\\.[^"\\\\]*)*)"\\s*>'],l={enabled:!0,streamingEnabled:!0,streamingPollInterval:r.DEFAULT,maxConcurrentGenerations:a.DEFAULT,minGenerationInterval:i.DEFAULT,logLevel:"info",currentPresetId:"default",customPresets:[],manualGenerationMode:"append",promptDetectionPatterns:s,commonStyleTags:"",commonStyleTagsPosition:"prefix"},c={ENABLED:"auto_illustrator_enabled",META_PROMPT:"auto_illustrator_meta_prompt",META_PROMPT_PRESET_SELECT:"auto_illustrator_preset_select",META_PROMPT_PRESET_EDIT:"auto_illustrator_preset_edit",META_PROMPT_PRESET_SAVE:"auto_illustrator_preset_save",META_PROMPT_PRESET_SAVE_AS:"auto_illustrator_preset_save_as",META_PROMPT_PRESET_DELETE:"auto_illustrator_preset_delete",META_PROMPT_PRESET_CANCEL:"auto_illustrator_preset_cancel",PRESET_EDITOR:"auto_illustrator_preset_editor",PRESET_VIEWER:"auto_illustrator_preset_viewer",PRESET_PREVIEW:"auto_illustrator_preset_preview",STREAMING_ENABLED:"auto_illustrator_streaming_enabled",STREAMING_POLL_INTERVAL:"auto_illustrator_streaming_poll_interval",MAX_CONCURRENT:"auto_illustrator_max_concurrent",MIN_GENERATION_INTERVAL:"auto_illustrator_min_generation_interval",LOG_LEVEL:"auto_illustrator_log_level",MANUAL_GEN_MODE:"auto_illustrator_manual_gen_mode",PROMPT_PATTERNS:"auto_illustrator_prompt_patterns",PROMPT_PATTERNS_RESET:"auto_illustrator_prompt_patterns_reset",PATTERN_VALIDATION_STATUS:"auto_illustrator_pattern_validation_status",COMMON_STYLE_TAGS:"auto_illustrator_common_style_tags",COMMON_STYLE_TAGS_POSITION:"auto_illustrator_common_style_tags_position",RESET_BUTTON:"auto_illustrator_reset"}},293:(e,t,n)=>{"use strict";n.d(t,{J:()=>r,m:()=>i,t:()=>a});let o=null;function r(e){o=e.translate}function a(e,t){const n=o?o(e,e):e;if(!t)return n;let r=n;for(const[e,n]of Object.entries(t))r=r.replace(new RegExp(`\\{${e}\\}`,"g"),String(n));return r}function i(e,t,n){return a(t,{...n,count:e})}},75:(e,t,n)=>{"use strict";n.d(t,{R:()=>a,g:()=>i});var o=n(974),r=n(28);function a(e,t=r.DV){if(0===t.length)return!1;if(t.length>1){return(0,o.B7)(t).test(e)}return(0,o.RJ)().test(e)}function i(e,t=r.DV){if(0===t.length)return[];if(t.length>1)return(0,o.lJ)(e,t);const n=[],a=(0,o.RJ)();let i;for(;null!==(i=a.exec(e));){const e=(0,o.Ov)(i[1]).trim();0!==e.length&&n.push({fullMatch:i[0],prompt:e,startIndex:i.index,endIndex:i.index+i[0].length})}return n}},690:(e,t,n)=>{"use strict";n.d(t,{Fz:()=>f,SV:()=>m,insertDeferredImages:()=>b,ML:()=>v,xn:()=>g,Hl:()=>p});var o=n(75),r=n(741),a=n(28);const i=(0,r.h)("Limiter");class s{constructor(e,t=0){this.currentCount=0,this.queue=[],this.lastCompletionTime=null,this.maxConcurrent=Math.max(a.zY.MIN,Math.min(a.zY.MAX,e)),this.minInterval=Math.max(a.uF.MIN,Math.min(a.uF.MAX,t)),this.maxConcurrent!==e&&i.warn(`maxConcurrent clamped from ${e} to ${this.maxConcurrent} (valid range: ${a.zY.MIN}-${a.zY.MAX})`),this.minInterval!==t&&i.warn(`minInterval clamped from ${t}ms to ${this.minInterval}ms (valid range: ${a.uF.MIN}-${a.uF.MAX}ms)`),i.info(`ConcurrencyLimiter created: maxConcurrent=${this.maxConcurrent}, minInterval=${this.minInterval}ms`)}async acquire(){return this.currentCount<this.maxConcurrent?(this.currentCount++,i.debug(`Acquired slot (${this.currentCount}/${this.maxConcurrent})`),Promise.resolve()):(i.debug(`Waiting for slot (${this.currentCount}/${this.maxConcurrent}, ${this.queue.length} queued)`),new Promise((e=>{this.queue.push(e)})))}release(){if(this.currentCount--,i.debug(`Released slot (${this.currentCount}/${this.maxConcurrent}, ${this.queue.length} queued)`),this.queue.length>0){const e=this.queue.shift();this.currentCount++,e&&(i.debug(`Processing queued request (${this.currentCount}/${this.maxConcurrent})`),e())}}async waitForMinInterval(){if(0===this.minInterval||null===this.lastCompletionTime)return void i.debug(`No interval wait needed (minInterval: ${this.minInterval}ms, lastCompletion: ${this.lastCompletionTime})`);const e=Date.now()-this.lastCompletionTime,t=this.minInterval-e;t>0?(i.info(`Waiting ${t}ms before next generation (minInterval: ${this.minInterval}ms, elapsed: ${e}ms)`),await new Promise((e=>setTimeout(e,t))),i.info("Wait completed, proceeding with generation")):i.debug(`No wait needed, sufficient time elapsed (${e}ms >= ${this.minInterval}ms)`)}async run(e){await this.waitForMinInterval(),await this.acquire();try{const t=await e();return this.lastCompletionTime=Date.now(),t}finally{this.release()}}setMaxConcurrent(e){const t=this.maxConcurrent,n=Math.max(a.zY.MIN,Math.min(a.zY.MAX,e));n!==e&&i.warn(`maxConcurrent clamped from ${e} to ${n} (valid range: ${a.zY.MIN}-${a.zY.MAX})`),i.info(`Updating max concurrent: ${t} → ${n}`),this.maxConcurrent=n}setMinInterval(e){const t=this.minInterval,n=Math.max(a.uF.MIN,Math.min(a.uF.MAX,e));n!==e&&i.warn(`minInterval clamped from ${e}ms to ${n}ms (valid range: ${a.uF.MIN}-${a.uF.MAX}ms)`),i.info(`Updating min interval: ${t}ms → ${n}ms`),this.minInterval=n}getStatus(){return{maxConcurrent:this.maxConcurrent,currentCount:this.currentCount,queueLength:this.queue.length}}}var l=n(293),c=n(591);const u=(0,r.h)("Generator");let d=null;function m(e,t=0){u.info(`Initializing concurrency limiter (max: ${e}, minInterval: ${t}ms)`),d=new s(e,t)}function g(e){d?d.setMaxConcurrent(e):(u.warn("Concurrency limiter not initialized, initializing now"),m(e))}function p(e){d?d.setMinInterval(e):(u.warn("Concurrency limiter not initialized, initializing now"),m(1,e))}function h(e,t,n,o){const r=e.indexOf(t);if(-1===r)return u.warn("Could not find prompt tag in text:",t),{text:e,success:!1};const a=r+t.length;if(e.substring(a,a+200).includes(`src="${n}"`))return u.info("Image already inserted, skipping:",n),{text:e,success:!1};const i=function(e,t){const n=`AI generated image #${t+1}`;return`<img src="${e}" title="${n}" alt="${n}">`}(n,o);return{text:e.substring(0,a)+"\n"+i+e.substring(a),success:!0}}async function f(e,t,n,o){return d||(u.warn("Concurrency limiter not initialized, using defaults (1, 0ms)"),d=new s(1,0)),d.run((async()=>{const r=n&&o?function(e,t,n){if(!t||""===t.trim())return e;const o=y(e),r=y(t),a="prefix"===n?[...r,...o]:[...o,...r];return function(e){const t=new Map;for(const n of e){const e=n.toLowerCase();t.has(e)||t.set(e,n)}return Array.from(t.values())}(a).join(", ")}(e,n,o):e;u.info("Generating image for prompt:",r),n&&r!==e&&(u.debug(`Original prompt: "${e}"`),u.debug(`Enhanced with common tags: "${r}"`));const a=performance.now();try{const e=t.SlashCommandParser?.commands?.sd;if(!e||!e.callback)return u.error("SD command not available"),u.info("Available commands:",Object.keys(t.SlashCommandParser?.commands||{})),null;u.info("Calling SD command...");const n=await e.callback({quiet:"true"},r),o=performance.now()-a;return u.info(`Generated image URL: ${n} (took ${o.toFixed(0)}ms)`),n}catch(e){const t=performance.now()-a;return u.error(`Error generating image (after ${t.toFixed(0)}ms):`,e),null}}))}function y(e){return e&&""!==e.trim()?e.split(",").map((e=>e.trim())).filter((e=>e.length>0)):[]}async function v(e,t,n,r,a,i){const s=(0,o.g)(e,n);if(u.info("Found",s.length,"image prompts to process"),0===s.length)return e;if(u.info("Extracted prompts:",s.map((e=>e.prompt))),void 0!==i)for(let e=0;e<s.length;e++){const n=s[e],o=(0,c.yj)(n.prompt,t),r={messageId:i,promptIndex:e};(0,c.K5)(r,o,t),u.debug(`Initialized metadata for prompt at position ${i}_${e}`)}const d=s.length;toastr.info((0,l.m)(d,"toast.generatingImages"),(0,l.t)("extensionName"));const m=performance.now(),g=[];for(const e of s){const n=await f(e.prompt,t,r,a);g.push(n)}const p=performance.now()-m,y=g.filter((e=>e)).length;u.info(`Generated ${y} images successfully (total time: ${p.toFixed(0)}ms, avg: ${(p/d).toFixed(0)}ms per image)`),y===d?toastr.success((0,l.m)(y,"toast.successGenerated"),(0,l.t)("extensionName")):y>0?toastr.warning((0,l.t)("toast.partialGenerated",{success:y,total:d}),(0,l.t)("extensionName")):toastr.error((0,l.t)("toast.failedToGenerate"),(0,l.t)("extensionName"));let v=e;for(let e=s.length-1;e>=0;e--){const n=s[e],o=g[e];if(o){const r=h(v,n.fullMatch,o,e);if(r.success&&(v=r.text,u.info("Added image after prompt at index",e),void 0!==i)){const n={messageId:i,promptIndex:e},r=(0,c.PW)(n,t);r?((0,c.pr)(o,r,t),u.debug(`Recorded image-prompt association: ${o} -> ${r}`)):u.warn(`No promptId found for position ${i}_${e}`)}}else u.info("Image generation failed for prompt at index",e,"- keeping tag")}return v}async function b(e,t,n){if(0===e.length)return 0;u.info(`Batch inserting ${e.length} deferred images into message ${t}`);const r=n.chat?.[t];if(!r)return u.warn("Message not found for batch insertion:",t),0;let a=r.mes||"";const i=a.length,s=[...e].sort(((e,t)=>e.prompt.startIndex-t.prompt.startIndex));let l=0;for(let e=s.length-1;e>=0;e--){const{prompt:r,imageUrl:i}=s[e],d=h(a,r.fullMatch,i,e);if(d.success){a=d.text,l++;const e=(0,o.g)(a).findIndex((e=>e.startIndex===r.startIndex&&e.endIndex===r.endIndex&&e.prompt===r.prompt));if(e>=0){const o={messageId:t,promptIndex:e},r=(0,c.PW)(o,n);r?((0,c.pr)(i,r,n),u.debug(`Recorded image-prompt association: ${i} -> ${r}`)):u.warn(`No promptId found for position ${t}_${e}`)}else u.warn("Could not find prompt index after insertion")}}r.mes=a,u.info(`Batch insertion complete: ${l}/${e.length} images inserted (${i} -> ${a.length} chars)`);const d=n.eventTypes.MESSAGE_EDITED;await n.eventSource.emit(d,t),n.updateMessageBlock(t,r);const m=n.eventTypes.MESSAGE_UPDATED;return await n.eventSource.emit(m,t),await n.saveChat(),u.debug("Chat saved after inserting deferred images"),l}},741:(e,t,n)=>{"use strict";n.d(t,{He:()=>s,h:()=>c});var o=n(65),r=n.n(o);const a="[Auto Illustrator]",i=r().getLogger("auto-illustrator");function s(e){i.setLevel(e)}function l(e,t){return e?`${a} [${e}] ${t}`:`${a} ${t}`}function c(e){return{debug:(t,...n)=>i.debug(l(e,t),...n),info:(t,...n)=>i.info(l(e,t),...n),warn:(t,...n)=>i.warn(l(e,t),...n),error:(t,...n)=>i.error(l(e,t),...n)}}i.setLevel(r().levels.INFO)},591:(e,t,n)=>{"use strict";n.d(t,{K5:()=>l,PW:()=>u,WJ:()=>d,pr:()=>s,s8:()=>c,yj:()=>i});const o=(0,n(741).h)("PromptMetadata");function r(e){return`${e.messageId}_${e.promptIndex}`}function a(e){return e.chat_metadata||(e.chat_metadata={}),e.chat_metadata.auto_illustrator||(e.chat_metadata.auto_illustrator={imageUrlToPromptId:{},promptIdToText:{},promptPositionHistory:{}}),e.chat_metadata.auto_illustrator}function i(e,t){const n=a(t),r=function(e){let t=0;for(let n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return`prompt_${Math.abs(t).toString(36)}_${Date.now().toString(36)}`}(e);return n.promptIdToText[r]||(n.promptIdToText[r]=e,o.debug(`Recorded new prompt: ${r}`)),r}function s(e,t,n){a(n).imageUrlToPromptId[e]=t,o.debug(`Linked image to prompt: ${t}`)}function l(e,t,n){const i=a(n),s=r(e);i.promptPositionHistory[s]||(i.promptPositionHistory[s]={versions:[{promptId:t,feedback:"",timestamp:Date.now()}]},o.debug(`Initialized position history: ${s}`))}async function c(e,t,n,i){const s=a(i),l=r(e),c=s.promptPositionHistory[l];if(!c)throw new Error(`No history found for position: ${l}`);c.versions.push({promptId:t,feedback:n,timestamp:Date.now()}),o.info(`Added prompt version to ${l}: ${t} (${c.versions.length} versions)`);const u=s.promptIdToText[t];if(!u)throw new Error(`Prompt text not found for ID: ${t}`);const d=i.chat[e.messageId];if(!d)throw new Error(`Message not found: ${e.messageId}`);d.mes=function(e,t,n){let o=0;return e.replace(/<!--img-prompt="([^"]*)"-->/g,(e=>{const r=o;return o++,r===t?`\x3c!--img-prompt="${n}"--\x3e`:e}))}(d.mes,e.promptIndex,u),await i.saveChat()}function u(e,t){const n=a(t),o=r(e),i=n.promptPositionHistory[o];return i&&0!==i.versions.length?i.versions[i.versions.length-1].promptId:null}function d(e,t){return a(t).promptIdToText[e]||null}},974:(e,t,n)=>{"use strict";n.d(t,{B7:()=>i,Ov:()=>a,RJ:()=>r,lJ:()=>s});const o=/<img-prompt="([^"\\]*(?:\\.[^"\\]*)*)"\s*>/g;function r(){return new RegExp(o.source,o.flags)}function a(e){return e.replace(/\\"/g,'"')}function i(e){const t=e.map((e=>`(?:${e})`)).join("|");return new RegExp(t,"g")}function s(e,t){const n=i(t),o=[];let r;for(;null!==(r=n.exec(e));){const e=r.slice(1).find((e=>void 0!==e));e&&e.trim().length>0&&o.push({prompt:a(e.trim()),fullMatch:r[0],startIndex:r.index,endIndex:r.index+r[0].length})}return o}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o].call(a.exports,a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0;var o={};(()=>{"use strict";n.d(o,{z:()=>pe});var e=n(72),t=n.n(e),r=n(825),a=n.n(r),i=n(659),s=n.n(i),l=n(56),c=n.n(l),u=n(540),d=n.n(u),m=n(113),g=n.n(m),p=n(208),h={};h.styleTagTransform=g(),h.setAttributes=c(),h.insert=s().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d();t()(p.A,h);p.A&&p.A.locals&&p.A.locals;var f=n(75),y=n(690),v=n(741);const b=(0,v.h)("MessageHandler");function E(e,t,n,o){return async r=>{if(b.info("MESSAGE_RECEIVED event, messageId:",r),n.streamingEnabled&&o)return b.info("MESSAGE_RECEIVED fired for streaming message, marking flag"),void o();if(n.streamingEnabled)return void b.info("Skipping MESSAGE_RECEIVED - streaming mode handles image generation");if(t(r))return void b.info("Skipping MESSAGE_RECEIVED - message is being processed by streaming");const a=e.chat?.[r];if(!a)return void b.info("No message found at index:",r);if(b.info("Message details:",{is_user:a.is_user,is_system:a.is_system,name:a.name,mes_length:a.mes?.length}),a.is_user)return void b.info("Skipping user message");if(b.info("Message text preview:",a.mes.substring(0,200)),!(0,f.R)(a.mes,n.promptDetectionPatterns))return void b.info("No image prompts found in message");b.info("Image prompts detected, processing..."),await async function(e,t,n,o,r,a){if((0,f.R)(e,o)){b.info("Processing message for images:",t);try{const i=await(0,y.ML)(e,n,o,r,a,t);n.chat&&n.chat[t]&&(n.chat[t].mes=i)}catch(e){b.error("Error processing message:",e)}}}(a.mes,r,e,n.promptDetectionPatterns,n.commonStyleTags,n.commonStyleTagsPosition),b.info("Emitting MESSAGE_EDITED event");const i=e.eventTypes.MESSAGE_EDITED;e.eventSource.emit(i,r),await e.saveChat(),b.debug("Chat saved after processing message images")}}var x=n(28);const w=(0,v.h)("Pruner");const T=(0,v.h)("Queue");function I(e,t){const n=`${e}:${t}`;let o=0;for(let e=0;e<n.length;e++){o=(o<<5)-o+n.charCodeAt(e),o|=0}return`prompt_${Math.abs(o).toString(36)}`}class _{constructor(){this.prompts=new Map}addPrompt(e,t,n,o){const r=I(e,n);if(this.prompts.has(r))return T.info("Prompt already queued:",r),null;const a={id:r,prompt:e,fullMatch:t,startIndex:n,endIndex:o,state:"QUEUED",attempts:0,detectedAt:Date.now()};return this.prompts.set(r,a),T.info("Added prompt:",r,e),a}hasPrompt(e,t){const n=I(e,t);return this.prompts.has(n)}hasPromptByText(e){for(const t of this.prompts.values())if(t.prompt===e)return!0;return!1}getNextPending(){for(const e of this.prompts.values())if("QUEUED"===e.state)return e;return null}updateState(e,t,n){const o=this.prompts.get(e);o?(o.state=t,"GENERATING"===t&&(o.generationStartedAt=Date.now(),o.attempts++),"COMPLETED"!==t&&"FAILED"!==t||(o.completedAt=Date.now()),n?.imageUrl&&(o.imageUrl=n.imageUrl),n?.error&&(o.error=n.error),T.info("Updated state:",e,t)):T.warn("Prompt not found:",e)}getPrompt(e){return this.prompts.get(e)}getAllPrompts(){return Array.from(this.prompts.values())}getPromptsByState(e){return this.getAllPrompts().filter((t=>t.state===e))}getStats(){const e={DETECTED:0,QUEUED:0,GENERATING:0,COMPLETED:0,FAILED:0};for(const t of this.prompts.values())e[t.state]++;return e}clear(){T.info("Clearing queue"),this.prompts.clear()}size(){return this.prompts.size}adjustPositionsAfterInsertion(e,t,n=Date.now()){for(const o of this.prompts.values())o.detectedAt<n&&o.startIndex>e&&("QUEUED"===o.state||"GENERATING"===o.state)&&(o.startIndex+=t,o.endIndex+=t)}}var P=n(591);const S=(0,v.h)("Monitor");class A{constructor(e,t,n,o=300,r){this.messageId=-1,this.lastSeenText="",this.pollInterval=null,this.isRunning=!1,this.queue=e,this.context=t,this.settings=n,this.intervalMs=o,this.onNewPromptsCallback=r}start(e){this.isRunning&&(S.warn("Already running, stopping previous monitor"),this.stop()),this.messageId=e,this.lastSeenText="",this.isRunning=!0,S.info(`Starting monitor for message ${e} (interval: ${this.intervalMs}ms)`),this.pollInterval=setInterval((()=>{this.checkForNewPrompts()}),this.intervalMs),this.checkForNewPrompts()}stop(){this.isRunning&&(S.info("Stopping monitor"),this.isRunning=!1,this.pollInterval&&(clearInterval(this.pollInterval),this.pollInterval=null),this.messageId=-1,this.lastSeenText="")}finalScan(){S.info("Performing final scan for remaining prompts"),this.checkForNewPrompts()}checkForNewPrompts(){if(!this.isRunning||this.messageId<0)return;const e=this.context.chat?.[this.messageId];if(!e)return void S.warn("Message not found:",this.messageId);const t=e.mes||"";if(t===this.lastSeenText)return;S.debug(`Text changed (${this.lastSeenText.length} -> ${t.length} chars)`);const n=this.extractNewPrompts(t);if(n.length>0){S.info(`Found ${n.length} new prompts`);const e=(0,f.g)(t,this.settings.promptDetectionPatterns);for(const t of n){const n=e.findIndex((e=>e.startIndex===t.startIndex&&e.endIndex===t.endIndex&&e.prompt===t.prompt));if(n>=0){const e=(0,P.yj)(t.prompt,this.context),o={messageId:this.messageId,promptIndex:n};(0,P.K5)(o,e,this.context),S.debug(`Initialized metadata for prompt at position ${this.messageId}_${n}`)}this.queue.addPrompt(t.prompt,t.fullMatch,t.startIndex,t.endIndex)}this.onNewPromptsCallback&&this.onNewPromptsCallback()}this.lastSeenText=t}extractNewPrompts(e){const t=(0,f.g)(e,this.settings.promptDetectionPatterns),n=[];for(const e of t)this.queue.hasPromptByText(e.prompt)||n.push(e);return n}getStatus(){return{isRunning:this.isRunning,messageId:this.messageId,lastTextLength:this.lastSeenText.length,intervalMs:this.intervalMs}}isActive(){return this.isRunning}}const M=(0,v.h)("Processor");class N{constructor(e,t,n,o=1){this.messageId=-1,this.isRunning=!1,this.isProcessing=!1,this.activeGenerations=0,this.processPromise=null,this.deferredImages=[],this.queue=e,this.context=t,this.settings=n,this.maxConcurrent=o}start(e){this.isRunning&&(M.warn("Already running, stopping previous processor"),this.stop()),this.messageId=e,this.isRunning=!0,this.activeGenerations=0,this.deferredImages=[],M.info(`Starting processor for message ${e} (max concurrent: ${this.maxConcurrent})`),this.processNext()}stop(){this.isRunning&&(M.info("Stopping processor"),this.isRunning=!1,this.messageId=-1)}async processNext(){if(!(!this.isRunning||this.activeGenerations>=this.maxConcurrent||this.isProcessing)){this.isProcessing=!0;try{const e=this.queue.getNextPending();if(!e)return this.isProcessing=!1,void M.info("No pending prompts, waiting...");M.info(`Processing prompt: ${e.id}`),this.queue.updateState(e.id,"GENERATING"),this.activeGenerations++,this.generateImageForPrompt(e).then((()=>{this.activeGenerations--,this.processNext()})).catch((e=>{M.error("Unexpected error:",e),this.activeGenerations--,this.processNext()})),this.activeGenerations<this.maxConcurrent?(this.isProcessing=!1,setImmediate((()=>this.processNext()))):this.isProcessing=!1}catch(e){M.error("Error in processNext:",e),this.isProcessing=!1}}}async generateImageForPrompt(e){try{M.info(`Generating image for: ${e.prompt}`);const t=await(0,y.Fz)(e.prompt,this.context,this.settings.commonStyleTags,this.settings.commonStyleTagsPosition);t?(this.queue.updateState(e.id,"COMPLETED",{imageUrl:t}),M.info(`Generated image: ${t}`),this.deferredImages.push({prompt:e,imageUrl:t}),M.info(`Deferred image insertion (${this.deferredImages.length} total)`)):(this.queue.updateState(e.id,"FAILED",{error:"Image generation returned null"}),M.warn(`Failed to generate image for: ${e.prompt}`))}catch(t){this.queue.updateState(e.id,"FAILED",{error:t instanceof Error?t.message:String(t)}),M.error("Error generating image:",t)}}async processRemaining(){for(M.info("Processing remaining prompts...");this.activeGenerations>0;)M.info(`Waiting for ${this.activeGenerations} active generations to complete...`),await new Promise((e=>setTimeout(e,100)));const e=this.queue.getPromptsByState("QUEUED");if(M.info(`${e.length} prompts remaining`),0!==e.length){for(const t of e)await this.generateImageForPrompt(t);M.info("Finished processing remaining prompts")}}trigger(){this.isRunning&&!this.isProcessing&&this.processNext()}getDeferredImages(){return this.deferredImages}clearDeferredImages(){this.deferredImages=[]}getStatus(){return{isRunning:this.isRunning,messageId:this.messageId,activeGenerations:this.activeGenerations,maxConcurrent:this.maxConcurrent,queueStats:this.queue.getStats()}}}const R='# Universal Image Prompt Generation Guide (Tag-Based)\n\nGenerate tag-based image prompts for AI image generation models. Insert prompts approximately every 250 words or at major scene changes.\n\n**Format:** `\x3c!--img-prompt="your description here"--\x3e`\n\n**Tag-based prompts work universally across Stable Diffusion, NovelAI, FLUX, and most diffusion models.**\n\n---\n\n## Tag-Based Format\n\n**Structure:** Comma-separated tags in priority order (earlier tags = stronger influence)\n\n```\n[subject count], [character details], [action/pose], [environment], [lighting], [style], [quality tags]\n```\n\n**Example:**\n```\n1girl, long silver hair, blue eyes, white dress, standing in garden, surrounded by flowers, afternoon sunlight, soft focus, highly detailed, best quality\n```\n\n---\n\n## Core Components\n\n### 1. Subject Count (Required - Always First)\n\n**Single character:**\n- `1girl` / `1boy` / `1other`\n\n**Multiple characters:**\n- `2girls` / `2boys` / `1boy, 1girl`\n- `3girls` / `2girls, 1boy` / `3boys`\n- Up to 6 characters max\n\n**No humans:**\n- `no humans` (for landscapes, objects, animals only)\n\n### 2. Character Details\n\n**Hair:**\n- Length: `long hair`, `short hair`, `medium hair`, `very long hair`\n- Style: `straight hair`, `wavy hair`, `curly hair`, `ponytail`, `braided hair`, `twin tails`\n- Color: `black hair`, `blonde hair`, `brown hair`, `red hair`, `white hair`, `silver hair`, `blue hair`, `pink hair`\n\n**Eyes:**\n- Color: `blue eyes`, `brown eyes`, `green eyes`, `red eyes`, `purple eyes`, `golden eyes`\n- Features: `heterochromia`, `glowing eyes`, `closed eyes`\n\n**Body:**\n- Build: `slender`, `athletic`, `muscular`, `petite`, `curvy`, `tall`, `short`\n- Features: `pale skin`, `dark skin`, `tan skin`, `freckles`\n\n**Clothing:**\n- Casual: `t-shirt`, `jeans`, `hoodie`, `sweater`, `casual dress`, `shorts`\n- Formal: `suit`, `dress shirt`, `tie`, `formal dress`, `evening gown`, `tuxedo`\n- Fantasy: `armor`, `robe`, `cloak`, `leather outfit`, `mage outfit`, `knight armor`\n- Modern: `school uniform`, `business suit`, `sportswear`, `kimono`, `yukata`\n- State: `partially clothed`, `torn clothes`, `wet clothes`\n\n### 3. Expression & Pose\n\n**Expressions:**\n- `smiling`, `grinning`, `laughing`, `serious`, `sad`, `angry`, `surprised`, `shocked`\n- `gentle smile`, `smirk`, `frown`, `crying`, `blushing`, `embarrassed`\n- `eyes closed`, `looking at viewer`, `looking away`, `looking down`, `looking up`\n\n**Body poses:**\n- Standing: `standing`, `contrapposto`, `casual stance`\n- Sitting: `sitting`, `sitting on chair`, `sitting on ground`, `seiza`, `crossed legs`\n- Action: `running`, `walking`, `jumping`, `fighting`, `dancing`, `flying`, `falling`\n- Resting: `lying down`, `lying on back`, `lying on side`, `reclining`, `sleeping`\n- Other: `kneeling`, `crouching`, `leaning`, `stretching`\n\n**Arms & hands:**\n- `arms at sides`, `arms crossed`, `arms raised`, `arms behind back`, `arms up`\n- `hand on hip`, `hands on hips`, `hands together`, `hand on own chest`\n- `waving`, `pointing`, `reaching`, `grabbing`, `holding object`\n\n**Legs:**\n- `legs crossed`, `legs apart`, `one knee up`, `legs together`\n\n### 4. Environment & Setting\n\n**Indoor locations:**\n- `bedroom`, `living room`, `kitchen`, `bathroom`, `office`, `classroom`\n- `library`, `cafe`, `restaurant`, `shop`, `museum`, `hallway`, `corridor`\n\n**Outdoor locations:**\n- `forest`, `beach`, `mountain`, `field`, `meadow`, `garden`, `park`\n- `city`, `street`, `alley`, `rooftop`, `bridge`, `river`, `lake`\n\n**Fantasy/Sci-fi:**\n- `castle`, `dungeon`, `tower`, `ruins`, `temple`, `shrine`\n- `spaceship`, `space station`, `laboratory`, `futuristic city`, `cyberpunk city`\n\n**Background:**\n- `detailed background`, `simple background`, `blurred background`, `bokeh`\n- `white background`, `black background`, `gradient background`, `abstract background`\n\n**Time & weather:**\n- Time: `morning`, `noon`, `afternoon`, `evening`, `sunset`, `night`, `midnight`, `dawn`, `dusk`\n- Weather: `sunny`, `cloudy`, `overcast`, `rainy`, `snowy`, `foggy`, `misty`, `stormy`\n- Season: `spring`, `summer`, `autumn`, `winter`\n\n### 5. Lighting\n\n**Natural lighting:**\n- `sunlight`, `natural light`, `daylight`, `moonlight`, `starlight`\n- `sunrise`, `sunset`, `golden hour`, `blue hour`, `twilight`\n\n**Quality:**\n- `bright lighting`, `dim lighting`, `dramatic lighting`, `soft lighting`, `harsh lighting`\n- `warm lighting`, `cool lighting`, `volumetric lighting`, `god rays`, `light rays`\n\n**Direction:**\n- `front lighting`, `backlighting`, `side lighting`, `rim lighting`, `top lighting`\n\n**Effects:**\n- `lens flare`, `light particles`, `glowing`, `bloom`, `shadows`, `dappled sunlight`\n\n### 6. Composition & Camera\n\n**Shot types:**\n- `portrait`, `close-up`, `upper body`, `cowboy shot`, `full body`, `wide shot`\n\n**Angles:**\n- `from above`, `from below`, `from side`, `from behind`, `eye level`\n- `bird\'s eye view`, `worm\'s eye view`, `dutch angle`\n\n**Focus:**\n- `centered`, `off-center`, `depth of field`, `shallow depth of field`, `bokeh`\n- `sharp focus`, `blurred foreground`, `blurred background`\n\n### 7. Art Style\n\n**Photography:**\n- `photo`, `photograph`, `photorealistic`, `realistic`, `professional photography`\n- `portrait photography`, `landscape photography`, `candid photo`\n- `film grain`, `35mm`, `50mm`, `85mm`\n\n**Art styles:**\n- `anime`, `anime style`, `manga style`, `cel shaded`, `flat colors`\n- `digital art`, `concept art`, `illustration`, `painting`, `drawing`\n- `oil painting`, `watercolor`, `ink`, `pencil drawing`, `sketch`\n\n**Art movements:**\n- `impressionism`, `art nouveau`, `art deco`, `baroque`, `renaissance`\n- `minimalist`, `abstract`, `surreal`, `pop art`\n\n**Rendering:**\n- `3d render`, `unreal engine`, `octane render`, `ray tracing`\n- `low poly`, `voxel art`, `pixel art`\n\n**Effects:**\n- `cinematic`, `dramatic`, `epic`, `atmospheric`, `moody`\n- `vibrant colors`, `muted colors`, `pastel colors`, `monochrome`, `black and white`\n- `high contrast`, `low contrast`, `saturated`, `desaturated`\n\n### 8. Quality Tags (Always Include)\n\n**Essential:**\n- `masterpiece`, `best quality`, `high quality`\n- `highly detailed`, `extremely detailed`, `intricate details`\n- `absurdres`, `highres`, `8k`, `4k`\n\n**Optional enhancement:**\n- `sharp focus`, `professional`, `award-winning`\n- `beautiful`, `aesthetic`, `stunning`\n\n---\n\n## Tag Weight & Emphasis\n\n**Increase weight:**\n- `(tag:1.5)` - Multiply weight by 1.5\n- `(tag:1.2)` - Multiply weight by 1.2\n\n**Decrease weight:**\n- `(tag:0.8)` - Multiply weight by 0.8\n- `(tag:0.5)` - Multiply weight by 0.5\n\n**Example:**\n```\n1girl, (beautiful face:1.2), (detailed eyes:1.3), highly detailed, best quality\n```\n\n---\n\n## Negative Prompts\n\n**Always include negative prompt to prevent common issues:**\n\n**Quality issues:**\n```\nlowres, low quality, worst quality, normal quality, jpeg artifacts, blurry, out of focus, ugly, bad quality, poor quality\n```\n\n**Anatomy issues:**\n```\nbad anatomy, bad proportions, deformed, disfigured, malformed, mutated, extra limbs, missing limbs, extra arms, extra legs, missing arms, missing legs, extra fingers, missing fingers, fused fingers, too many fingers, bad hands, bad feet, long neck, long body\n```\n\n**Artifacts:**\n```\nwatermark, signature, text, username, artist name, logo, error, cropped, out of frame, border\n```\n\n**Unwanted elements:**\n```\nduplicate, multiple views, copy, split screen\n```\n\n**Style-specific negatives:**\n- For realistic photos: `cartoon, anime, drawing, painting, illustration, 3d, render`\n- For illustrations: `photograph, photo, photorealistic, realistic`\n\n---\n\n## Character Consistency\n\n**For known characters (from anime/game/novel):**\n- Use format: `character_name (series_name)`\n- Examples: `hatsune miku (vocaloid)`, `frieren (sousou no frieren)`, `link (zelda)`\n- Check Danbooru tags for exact format\n- Don\'t override canonical features (hair color, eye color) unless making AU\n\n**For original characters:**\n- Keep identical tags across all prompts\n- Document: hair color, eye color, clothing, distinctive features\n- Use exact same descriptors every time\n\n---\n\n## Example Prompts\n\n**Portrait:**\n```\n\x3c!--img-prompt="1girl, long auburn hair, green eyes, freckles, cream sweater, gentle smile, sitting by window, natural lighting, soft focus, portrait, highly detailed, best quality, masterpiece"--\x3e\n```\n\n**Fantasy scene:**\n```\n\x3c!--img-prompt="1girl, long silver hair, blue eyes, white and gold robes, casting spell, magical energy, glowing hands, ancient library, floating books, glowing runes, ethereal lighting, fantasy, highly detailed, best quality, masterpiece"--\x3e\n```\n\n**Anime style:**\n```\n\x3c!--img-prompt="1girl, long pink hair, blue eyes, school uniform, cheerful smile, waving, cherry blossom trees, petals falling, spring day, anime style, vibrant colors, highly detailed, best quality"--\x3e\n```\n\n**Action scene:**\n```\n\x3c!--img-prompt="1girl, long red hair, armor, wielding sword, dynamic pose, mid-air, jumping, battlefield, explosions, smoke, dramatic lighting, action scene, highly detailed, best quality, masterpiece"--\x3e\n```\n\n**Landscape:**\n```\n\x3c!--img-prompt="no humans, mountain lake, sunset, orange and pink sky, crystal clear water, reflections, pine trees, snow-capped peaks, golden hour, misty, scenic vista, landscape photography, highly detailed, 8k, masterpiece"--\x3e\n```\n\n---\n\n## Quick Template\n\n```\n[count], [hair], [eyes], [clothing], [expression], [pose], [location], [time/weather], [lighting], [style], highly detailed, best quality, masterpiece\n```\n\n---\n\n## Best Practices\n\n1. **Subject count first** - Always start with `1girl`, `2boys`, etc.\n2. **Tag order matters** - Earlier tags have stronger influence\n3. **Be specific** - More detail = better results\n4. **Include quality tags** - Always end with quality modifiers\n5. **Use negative prompts** - Prevent common issues\n6. **Stay consistent** - Same character = same exact tags\n7. **Test weights** - Adjust emphasis for problem areas\n8. **Don\'t over-tag** - Focus on important elements (15-40 tags ideal)\n\n---\n\n## Common Mistakes\n\n❌ Missing subject count: `long hair, blue eyes, standing`\n✅ Include subject: `1girl, long hair, blue eyes, standing`\n\n❌ Vague: `girl in room`\n✅ Specific: `1girl, long black hair, bedroom, sitting on bed, morning light`\n\n❌ No quality tags: `1girl, red hair, smiling`\n✅ With quality: `1girl, red hair, smiling, highly detailed, best quality`\n\n❌ Tag overload: `1girl, beautiful, gorgeous, stunning, amazing, incredible, perfect`\n✅ Balanced: `1girl, beautiful, highly detailed, best quality`\n\n---\n\n**Generate prompts frequently (~250 words). Each `\x3c!--img-prompt="..."--\x3e` on its own line, entire prompt on single line.**\n',k="nai-4.5-full";function C(){return R.trim()}const L=[{id:"default",name:"Default",template:C(),predefined:!0},{id:k,name:"NAI 4.5 Full",template:'# NovelAI 4.5 FULL Image Prompt Generation Guide\n\nGenerate image prompts for NovelAI Diffusion 4.5 Full using structured tag-based prompts. Insert prompts at natural narrative points, approximately every 250 words or at major scene changes.\n\n**IMPORTANT: Generate image prompts frequently throughout the story - aim for approximately one prompt every 250 words or at each major scene change.**\n\n**CRITICAL MULTI-CHARACTER RULE: When a scene has 2 or more characters present, you MUST use the pipe `|` separator syntax. This is NOT optional - it is required for proper multi-character generation.**\n\n---\n\n## Core Philosophy: Tags as Foundation, Prose for Nuance\n\nNovelAI is trained on Danbooru\'s tag system. **Tag-based prompts** (comma-separated) provide the most precise and controllable results for most use cases.\n\n**Tags are superior for:**\n- Character consistency and specific attributes\n- Style control and art medium selection\n- Precise visual elements (colors, clothing, objects)\n- Reproducible and predictable results\n\n**Natural language can enhance prompts for:**\n- Complex scenes with specific moods and atmospheres (e.g., "a sense of tension and anticipation")\n- Intricate relationships between characters (e.g., "a knight protecting a child from a dragon")\n- Nuanced descriptions that tags alone might not capture\n- Creative exploration beyond standard conventions\n\n**Best practice: Hybrid approach**\n- Start with natural language for scene/mood/relationships\n- Follow with tags for precision: quality tags, style tags, specific attributes\n- Example: `A majestic tiger stalking through tropical rainforest, dappled sunlight, masterpiece, best quality, cinematic lighting, vibrant colors, detailed fur`\n\n**However, for most prompts in story illustration, tag-based format is recommended for consistency and control.**\n\n---\n\n## Format Requirements\n\n**Format:** `\x3c!--img-prompt="your description here"--\x3e`\n\n**Frequency:** Insert prompts approximately **every 250 words** or at major scene changes. Don\'t skip scenes - each significant moment should have a visual prompt.\n\n**Example:**\n```\nStory text continues.\n\x3c!--img-prompt="1girl, bedroom, sitting, long hair, smiling, very aesthetic, masterpiece, best quality, highres, no text, no watermark"--\x3e\nMore story text.\n```\n\n---\n\n## Prompt Structure\n\nEvery prompt should follow this order for optimal results:\n\n1. **Subject count tags** (MANDATORY): `1girl`, `2boys`, `1boy, 1girl`, `no humans`\n2. **Character specifics**: Character names, series tags if known\n3. **Quality & aesthetic tags** (MANDATORY): `very aesthetic, masterpiece, best quality, highres, no text, no watermark`\n4. **Style tags**: Art medium, artist style, art movement\n5. **Composition**: Shot type, angle, pose\n6. **Environment**: Location, background details\n7. **Lighting**: Light type, effects\n8. **Color scheme**: Dominant colors, color style\n9. **Detailed descriptors**: Clothing, expression, hair, eyes, accessories\n\n**Tag order matters:** Earlier tags have stronger influence. This is a "priority instruction list", not a "bag of words".\n\n---\n\n## Mandatory Quality Tags\n\n**ALWAYS include these in EVERY prompt for high-quality output:**\n\nNovelAI\'s official default quality tags (recommended to use all):\n- `very aesthetic` - Enhanced aesthetic quality\n- `masterpiece` - Most powerful aesthetic tag for V4.5\n- `best quality` - Essential quality baseline\n- `highres` - High resolution output\n- `no text` - Prevents text artifacts in image\n- `no watermark` - Prevents watermark artifacts\n\nAdditional optional quality tag:\n- `absurdres` - Absolute high resolution quality\n\n**Recommended quality tag string:** `very aesthetic, masterpiece, best quality, highres, no text, no watermark`\n\n---\n\n## Subject Count Tags (MANDATORY)\n\n**Always start prompts with:**\n- `no humans` - No people (landscapes, objects)\n- `1girl` / `1boy` / `1other` - Single character\n- `2girls` / `2boys` / `1boy, 1girl` - Two characters\n- `3girls` / `2girls, 1boy` etc. - Three+ characters (max 6)\n\n---\n\n## Style Control Tags\n\n### Art Medium\n- `oil painting (medium)` - Oil painting texture\n- `watercolor (medium)` - Watercolor transparency\n- `ink (medium)` - Ink/pen drawing style\n- `sketch` - Sketch/rough style\n- `anime screencap` - Anime screenshot style\n- `game cg` - Game CG style\n\n### Art Style\n- `art nouveau` - Decorative curves, organic forms\n- `impressionism` - Light/shadow emphasis\n- `ukiyo-e` - Japanese woodblock print\n- `realistic` / `photorealistic` - Photographic realism\n\n### Coloring\n- `monochrome` - Black and white\n- `pastel colors` - Soft, low saturation colors\n- `limited palette` - Few colors, unified look\n- `high contrast` - Strong light/dark contrast\n\n### Special Effects\n- `bokeh` - Blurred background with light spots\n- `lens flare` - Light flare effect\n- `chromatic aberration` - Color fringing effect\n- `motion blur` - Speed/movement blur\n\n---\n\n## Special Tags\n\n**Year tags:** `year XXXX` - Mimic art style from specific year\n- Example: `year 2014` for 2014 anime aesthetics\n\n**Location tag:** `location` - Combines indoor/outdoor, indicates specific scene needed\n\n**Dataset tags (MUST be at very start):**\n- `fur dataset` - For furry/kemono art\n- `background dataset` - For landscapes, no people, photographic style\n\n---\n\n## Tag Emphasis System\n\n### Bracket Emphasis\n- `{tag}` - Strengthen by ×1.05\n- `{{tag}}` - Strengthen by ×1.1025\n- `[tag]` - Weaken by ÷1.05\n- `[[tag]]` - Weaken by ÷1.1025\n\n### Numerical Emphasis\n- `1.5::tag::` - Multiply weight by 1.5\n- `0.5::tag::` - Multiply weight by 0.5\n- `-1::tag::` - Negative weight (removes/inverts concept)\n\n**Negative weight examples:**\n- `-1::hat::` - Remove hat from character\n- `-1::monochrome::` - Force colorful image\n- `-2.5::flat color::` - Add detailed shading\n\n**In Undesired Content:** Emphasis works in reverse - `{tag}` means avoid more strongly\n\n---\n\n## Multi-Character Prompting (2+ characters)\n\n**CRITICAL: When scenes involve 2+ characters, ALWAYS use the pipe `|` separator syntax for best results.**\n\n**❌ WRONG - Do NOT use this format for multi-character scenes:**\n```\n1boy, 1girl, indoors, living room, close-up, emilia (re:zero), long silver hair, purple eyes, white dress, flushed cheeks, arms around neck, looking at viewer, short dark hair, casual clothes, gentle expression, very aesthetic, masterpiece, best quality, highres, no text, no watermark\n```\n*This format will confuse the AI about which features belong to which character! Both characters\' features are mixed together without clear separation.*\n\n**✅ CORRECT - ALWAYS use pipe separators for 2+ characters:**\n```\n1boy, 1girl, indoors, living room, close-up, intimate distance, very aesthetic, masterpiece, best quality, highres, no text, no watermark | girl, emilia (re:zero), long silver hair, purple eyes, white dress, flushed cheeks, source#embrace, arms around neck, looking at viewer | boy, short dark hair, casual clothes, target#embrace, close to her, gentle expression\n```\n\n**Structure:** `base prompt | character 1 | character 2 | ...`\n\n**Base prompt must include:**\n- Subject count tags (MANDATORY): `2girls`, `1boy, 1girl`, `3boys`, etc.\n- Quality tags (MANDATORY): `very aesthetic, masterpiece, best quality, highres, no text, no watermark`\n- Scene, location, lighting\n- Spatial positioning: `side by side`, `facing each other`, `close together`\n\n**Each character prompt must include:**\n- Character type (no number): `girl`, `boy`, `other`\n- Character name if known: `character_name (series_name)`\n- Physical features: hair color, eye color, body type\n- Clothing, expression, pose\n- Body framing: `upper body`, `full body`, `portrait`\n- **Action tags with prefixes when interacting (see below)**\n\n**Interaction action tag prefixes:**\n\nUse these when characters interact physically or socially:\n\n- `source#[action]` - The character actively performing/initiating the action\n- `target#[action]` - The character passively receiving the action\n- `mutual#[action]` - Both characters doing the action together simultaneously\n\n**Common interaction actions:**\n\n**Physical contact:**\n- Hugging: `source#hug` (person hugging), `target#hug` (being hugged), `mutual#hug` (both hugging each other)\n- Kissing: `source#kiss` (initiating kiss), `target#kiss` (receiving kiss), `mutual#kiss` (both kissing)\n- Headpat: `source#headpat` (giving headpat), `target#headpat` (receiving headpat)\n- Embrace: `source#embrace` (embracing), `target#embrace` (being embraced)\n- Hand holding: `mutual#handholding` (both holding hands)\n- Dancing: `mutual#dancing` (dancing together)\n- High five: `mutual#high five` (both giving high five)\n\n**Visual interaction:**\n- Looking: `source#looking at another` (actively looking), `target#being looked at` (being looked at)\n\n**Social interaction:**\n- Communication: `source#talking`, `target#listening`\n- Pointing: `source#pointing`, `target#pointed at`\n- Laughing: `mutual#laughing` (laughing together)\n- Playing: `mutual#playing` (playing together)\n\n**When to use which prefix:**\n- If one character is clearly doing something TO another → use `source#` and `target#`\n- If both characters are doing the same action together → use `mutual#` for both\n- Example: Person A hugging Person B → A gets `source#hug`, B gets `target#hug`\n- Example: Two people hugging each other equally → Both get `mutual#hug`\n\n**Why this matters:** Without pipe separators and proper action tags, the AI cannot properly understand which physical features and actions belong to which character, leading to confused or incorrect anatomy.\n\n---\n\n## Composition & Framing\n\n**Always specify framing:**\n- `portrait` - Head and shoulders\n- `upper body` - Waist up\n- `cowboy shot` - Thighs up\n- `full body` - Entire body visible\n- `from above` / `from below` / `from side` / `from behind` - Camera angle\n\n**Pose details (be specific):**\n- Arms: `arms at sides`, `arms crossed`, `arms raised`, `one arm raised`\n- Hands: `hands on hips`, `hands clasped`, `hand in hair`, `hands together`\n- Legs: `legs crossed`, `legs apart`, `one knee up`\n- Sitting: `sitting`, `seiza`, `crossed legs`, `legs to side`\n- Standing: `standing`, `contrapposto`, `casual stance`\n- Action: `walking`, `running`, `jumping`, `reaching`\n\n**More detail = Better anatomy.** For complex poses, add MORE tags, not fewer.\n\n---\n\n## Negative Prompts (Undesired Content)\n\n**Core principle:** Describe what you DON\'T want directly (use `blurry`, not `not sharp`)\n\n**Essential negative prompts:**\n\n**Quality:**\n`lowres, worst quality, bad quality, normal quality, low quality, jpeg artifacts, blurry, ugly`\n\n**Anatomy:**\n`bad anatomy, bad hands, missing fingers, extra digit, fewer digits, bad feet, malformed limbs, extra limbs, fused fingers, bad proportions`\n\n**Artifacts:**\n`text, watermark, signature, username, artist name, error, cropped, out of frame`\n\n**Style issues:**\n`monochrome` (if want color), `sketch` (if want finished), `duplicate, mutation, deformed, bad composition`\n\n**Warning:** Over-stuffing negative prompts can reduce AI creativity. Use strategically based on specific needs.\n\n---\n\n## Character Consistency\n\n**For known characters (from anime/game/novel):**\n- **CRITICAL: Always use Danbooru character tags** in format: `character_name (series_name)`\n- This ensures the AI recognizes the character and generates consistent appearance\n- Examples: `nilou (genshin impact)`, `frieren (sousou no frieren)`, `hatsune miku (vocaloid)`\n- Check Danbooru to find the exact tag format for the character\n- **IMPORTANT: When using character tags, DO NOT override their canonical features (hair color, eye color, etc.) unless intentionally creating an AU version**\n\n**For original characters:**\n- Use identical descriptions throughout: hair color, eye color, body type, clothing, distinctive features\n- Be consistent with every detail to maintain character appearance across multiple images\n- Keep a character reference sheet with exact tags to use consistently\n\n---\n\n## Example Prompts\n\n**Single character:**\n```\n\x3c!--img-prompt="1girl, bedroom, morning sunlight, sitting on bed, long red hair, purple eyes, peaceful expression, white nightgown, very aesthetic, masterpiece, best quality, highres, no text, no watermark, soft lighting, detailed background"--\x3e\n```\n\n**No humans landscape:**\n```\n\x3c!--img-prompt="no humans, ancient forest, towering trees, dappled sunlight, moss-covered ground, mysterious atmosphere, very aesthetic, masterpiece, best quality, highres, no text, no watermark, detailed, fantasy"--\x3e\n```\n\n**Two characters with mutual interaction (cuddling):**\n```\n\x3c!--img-prompt="1boy, 1girl, living room, afternoon, sitting on couch, close together, mutual#cuddling, very aesthetic, masterpiece, best quality, highres, no text, no watermark, soft lighting, warm atmosphere | girl, emilia (re:zero), long silver hair, purple eyes, white dress, leaning against him, head on shoulder, smiling, eyes closed, relaxed expression | boy, short black hair, blue eyes, casual shirt and jeans, arm around her shoulders, gentle smile, looking down at her"--\x3e\n```\n\n**Two characters with source/target interaction (embrace):**\n```\n\x3c!--img-prompt="1boy, 1girl, bedroom, evening, close-up, intimate distance, very aesthetic, masterpiece, best quality, highres, no text, no watermark, soft lighting | girl, emilia (re:zero), long silver hair, purple eyes, white dress, flushed cheeks, source#embrace, arms around his neck, looking up at him, gentle smile | boy, short dark hair, brown eyes, casual shirt, target#embrace, hands on her waist, looking down at her, affectionate expression"--\x3e\n```\n\n**Two characters - headpat interaction:**\n```\n\x3c!--img-prompt="1boy, 1girl, school hallway, afternoon, standing, very aesthetic, masterpiece, best quality, highres, no text, no watermark | boy, tall, short brown hair, school uniform, source#headpat, hand on her head, smiling, looking down at her | girl, shorter, long black hair, school uniform, target#headpat, looking up, blushing, happy expression, hands clasped in front"--\x3e\n```\n\n**Group scene - three characters:**\n```\n\x3c!--img-prompt="3girls, park, sunny day, standing together, cherry blossoms, very aesthetic, masterpiece, best quality, highres, no text, no watermark, vibrant colors, spring atmosphere | girl, long blonde hair, green eyes, sundress, holding ice cream, laughing, looking at friends | girl, short pink hair, blue eyes, casual t-shirt and shorts, peace sign, cheerful smile | girl, medium brown hair, brown eyes, cardigan and skirt, shy smile, holding camera"--\x3e\n```\n\n**Action scene - running:**\n```\n\x3c!--img-prompt="1girl, city street, late afternoon, running, dynamic pose, motion blur background, very aesthetic, masterpiece, best quality, highres, no text, no watermark, cinematic | girl, frieren (sousou no frieren), long white hair flowing, green eyes, mage outfit, determined expression, full body, from side, arms pumping"--\x3e\n```\n\n**Character portrait:**\n```\n\x3c!--img-prompt="1girl, indoor cafe, afternoon window light, portrait, close-up, very aesthetic, masterpiece, best quality, highres, no text, no watermark, bokeh background, warm lighting | girl, long black hair, brown eyes, cozy sweater, holding coffee cup, gentle smile, looking at viewer, soft expression"--\x3e\n```\n\n---\n\n## Critical Reminders\n\n- **GENERATE FREQUENTLY: Every ~250 words or major scene change**\n- **ALWAYS include official quality tags: `very aesthetic, masterpiece, best quality, highres, no text, no watermark`**\n- **ALWAYS include subject count tags: `1girl`, `2boys`, `1boy, 1girl`, etc.**\n- **For known characters: MUST use Danbooru character tags `character_name (series_name)` and DO NOT override canonical features**\n- **Tag order matters: Earlier tags = stronger influence**\n- **🔴 CRITICAL: For 2+ characters, MUST use `|` separator - NO EXCEPTIONS**\n- **🔴 CRITICAL: For character interactions, use appropriate action tags:**\n  - `source#[action]` for character performing action\n  - `target#[action]` for character receiving action  \n  - `mutual#[action]` for simultaneous mutual action\n- **More specific tags = better anatomy**\n- **Complex poses need MAXIMUM detail**\n- **Use emphasis system for fine control: `{tag}`, `1.5::tag::`, `-1::tag::`**\n\n---\n\n**Provide the complete story content with image prompts inserted at natural narrative moments. Each `\x3c!--img-prompt="..."--\x3e` tag must be on its own line (no extra blank lines before/after), with entire tag content on a single line.**\n'.trim(),predefined:!0}];function D(e,t){const n=t.find((t=>t.id===e));if(n)return n;const o=function(e){return L.find((t=>t.id===e))}(e);return o||L[0]}function O(e){return L.some((t=>t.id===e))}var G=n(293);function B(){return{...x.a$,metaPrompt:C()}}function F(e){const t=B(),n=e.extensionSettings[x.a2];if(!n)return t;const o={...t,...n},r=D(o.currentPresetId,o.customPresets||[]);return o.metaPrompt=r.template,o}function U(e,t){t.extensionSettings[x.a2]=e,t.saveSettingsDebounced()}const q='**TASK:** Update an image generation prompt based on user feedback.\n\n**Current Prompt Tags:**\n{{{currentPrompt}}}\n\n**User\'s Requested Changes:**\n{{{userFeedback}}}\n\n**Your Task:**\n1. Modify the current tags based on the user\'s feedback\n2. Keep the comma-separated tag format (e.g., "tag1, tag2, tag3")\n3. Preserve tags not mentioned in the feedback\n4. Output ONLY the updated tags in HTML comment format\n5. Do NOT write explanations, stories, or conversational text\n\n**Required Output Format:**\n\x3c!--img-prompt="updated tags here"--\x3e\n\n**Examples:**\n\nInput tags: "1girl, red hair, blue eyes, park"\nFeedback: "change to indoor bedroom"\nOutput: \x3c!--img-prompt="1girl, red hair, blue eyes, bedroom, indoors"--\x3e\n\nInput tags: "1boy, sword, battle, outdoor"\nFeedback: "make it peaceful, remove sword"\nOutput: \x3c!--img-prompt="1boy, peaceful, outdoor, nature"--\x3e\n\n**CRITICAL:** Output ONLY the HTML comment line. No other text.\n\n**Your output:**\n',z=(0,v.h)("PromptUpdater");async function V(e,t,n){z.info(`Updating prompt at position ${e.messageId}_${e.promptIndex} with feedback: "${t}"`);const o=(0,P.PW)(e,n);if(!o)return z.error(`No prompt found at position ${e.messageId}_${e.promptIndex}`),null;const r=(0,P.WJ)(o,n);if(!r)return z.error(`Prompt text not found for ID: ${o}`),null;if(!n.generateRaw)throw z.error("generateRaw not available in context"),new Error("LLM generation not available");const a=q.replace("{{{currentPrompt}}}",r).replace("{{{userFeedback}}}",t);let i;z.debug("Sending prompt to LLM for update (using generateRaw)");try{i=await n.generateRaw({systemPrompt:"You are a technical assistant helping to update image generation prompts. Output ONLY the updated prompt in HTML comment format. Do NOT write stories, explanations, or continue any roleplay.",prompt:a})}catch(e){throw z.error("LLM generation failed:",e),e}const s=function(e){for(const t of x.DV){const n=new RegExp(t,"i"),o=e.match(n);if(o&&o[1])return o[1]}return null}(i);if(!s)return z.error("Failed to extract prompt from LLM response:",i),null;z.info(`LLM generated updated prompt: "${s}"`);const l=(0,P.yj)(s,n);return await(0,P.s8)(e,l,t,n),l}const j=(0,v.h)("ManualGen"),Y=new Map,W=new Set;async function H(e,t){Y.has(e)||Y.set(e,[]);const n=Y.get(e),o=W.has(e);return new Promise(((r,a)=>{n.push({execute:async()=>{try{await t(),r()}catch(e){a(e)}}}),o||async function(e){const t=Y.get(e);if(!t||0===t.length)return;W.add(e);try{for(;t.length>0;){const e=t.shift();await e.execute()}}finally{W.delete(e),Y.delete(e)}}(e)}))}function X(e){if(W.has(e))return!0;const t=Y.get(e);return void 0!==t&&t.length>0}async function J(e,t,n,o){let r=0;return await H(e,(async()=>{r=await async function(e,t,n,o){try{if(pe(e))return j.warn(`Cannot generate images for message ${e}: streaming is active`),toastr.warning((0,G.t)("toast.cannotGenerateMessageStreaming"),(0,G.t)("extensionName")),0;j.info(`Generating images for message ${e} in ${t} mode`);const r=n.chat?.[e];if(!r)return j.warn("Message not found:",e),toastr.error((0,G.t)("toast.messageNotFound"),(0,G.t)("extensionName")),0;let a=r.mes;const i=(0,f.g)(a,o.promptDetectionPatterns);if(0===i.length)return j.info("No prompts found in message"),toastr.info((0,G.t)("toast.noPromptsFound"),(0,G.t)("extensionName")),0;if(j.info(`Found ${i.length} prompts`),"replace"===t){const e=a.length;a=function(e,t){const n=(0,f.g)(e,t);let o=e;for(let e=n.length-1;e>=0;e--){const t=n[e],r=o.substring(t.endIndex),a=/^\s*<img\s+[^>]*>/g;let i,s=0;for(;null!==(i=a.exec(r))&&i.index===s;)s+=i[0].length,a.lastIndex=s;s>0&&(o=o.substring(0,t.endIndex)+o.substring(t.endIndex+s))}return o}(a,o.promptDetectionPatterns),j.info(`Replace mode: removed existing images (${e} -> ${a.length} chars)`)}else j.info("Append mode: will append new images after existing ones");const s=(0,f.g)(a,o.promptDetectionPatterns);toastr.info((0,G.m)(s.length,"toast.generatingImages"),(0,G.t)("extensionName"));const l=performance.now(),c=[];for(let e=0;e<s.length;e++){const t=s[e];j.info(`Generating image ${e+1}/${s.length}`);const r=await(0,y.Fz)(t.prompt,n,o.commonStyleTags,o.commonStyleTagsPosition);r&&c.push({prompt:t,imageUrl:r,originalIndex:e})}c.sort(((e,t)=>t.prompt.startIndex-e.prompt.startIndex));let u=0;for(const{prompt:e,imageUrl:n,originalIndex:o}of c){const r=e.fullMatch,i=a.indexOf(r);if(-1!==i){let e=i+r.length;if("append"===t){const t=a.substring(e),n=/\s*<img\s+[^>]*>/g;let o,r=0;for(;null!==(o=n.exec(t))&&(o.index===r||""===t.substring(r,o.index).trim());)r=n.lastIndex;r>0&&(e+=r)}const s=`AI generated image #${o+1}`,l=`\n<img src="${n}" title="${s}" alt="${s}">`;a=a.substring(0,e)+l+a.substring(e),u++}else j.warn(`Could not find prompt tag in text: "${r.substring(0,80)}..."`)}const d=performance.now()-l;j.info(`Generated ${u}/${s.length} images (${d.toFixed(0)}ms total)`),r.mes=a;const m=n.eventTypes.MESSAGE_EDITED;await n.eventSource.emit(m,e),n.updateMessageBlock(e,r);const g=n.eventTypes.MESSAGE_UPDATED;return await n.eventSource.emit(g,e),await n.saveChat(),j.debug("Chat saved after manual generation"),u===s.length?toastr.success((0,G.m)(u,"toast.successGenerated"),(0,G.t)("extensionName")):u>0?toastr.warning((0,G.t)("toast.partialGenerated",{success:u,total:s.length}),(0,G.t)("extensionName")):toastr.error((0,G.t)("toast.failedToGenerate"),(0,G.t)("extensionName")),u}catch(e){return j.error("Error during manual image generation:",e),toastr.error((0,G.t)("toast.failedToGenerate"),(0,G.t)("extensionName")),0}}(e,t,n,o)})),r}function Q(e,t,n){const o=new RegExp(`<img\\s+src="${t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}"[^>]*>`,"g").exec(e);if(!o)return j.warn("Image not found in message text:",t),null;const r=o.index,a=e.substring(0,r),i=(0,f.g)(a,n);return 0===i.length?(j.warn("No prompt found before image"),null):i[i.length-1].prompt}async function K(e,t,n,o,r){let a=0;return await H(e,(async()=>{a=await async function(e,t,n,o,r){try{if(pe(e))return j.warn(`Cannot regenerate image for message ${e}: streaming is active`),toastr.warning((0,G.t)("toast.cannotGenerateMessageStreaming"),(0,G.t)("extensionName")),0;let a=o.chat?.[e];if(!a)return j.error("Message not found:",e),toastr.error((0,G.t)("toast.messageNotFound"),(0,G.t)("extensionName")),0;const i=Q(a.mes||"",t,r.promptDetectionPatterns);if(!i)return toastr.error((0,G.t)("toast.promptNotFoundForImage"),(0,G.t)("extensionName")),0;j.info(`Regenerating image for prompt: "${i}" (mode: ${n})`),toastr.info((0,G.t)("toast.generatingNewImage"),(0,G.t)("extensionName"));const s=await(0,y.Fz)(i,o,r.commonStyleTags,r.commonStyleTagsPosition);if(!s)return toastr.error((0,G.t)("toast.failedToGenerateImage"),(0,G.t)("extensionName")),0;if(a=o.chat?.[e],!a)return j.error("Message not found after generation:",e),toastr.error((0,G.t)("toast.messageDisappeared"),(0,G.t)("extensionName")),0;let l=a.mes||"";const c=function(e,t,n,o){const r=(0,f.g)(e,o).find((e=>e.prompt===t));if(!r)return null;const a=r.fullMatch,i=r.startIndex,s=e.substring(i+a.length),l=/\s*<img\s+[^>]*>/g;let c,u=0,d=0;for(;null!==(c=l.exec(s))&&(c.index===d||""===s.substring(d,c.index).trim());)if(u++,d=l.lastIndex,c[0].includes(`src="${n}"`))return u;return null}(l,i,t,r.promptDetectionPatterns);if(!c)return j.error("Could not determine image index for regeneration"),toastr.error((0,G.t)("toast.failedToDetermineIndex"),(0,G.t)("extensionName")),0;const u=(0,f.g)(l,r.promptDetectionPatterns).find((e=>e.prompt===i));if(!u)return j.error("Prompt tag not found in text"),toastr.error((0,G.t)("toast.failedToFindPromptTag"),(0,G.t)("extensionName")),0;const d=u.fullMatch;let m=u.startIndex+d.length;if("replace"===n){const e=l.substring(m),n=t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),o=new RegExp(`\\s*<img\\s+src="${n}"[^>]*>`,""),r=e.match(o);if(r&&void 0!==r.index){const e=m+r.index,t=e+r[0].length;l=l.substring(0,e)+l.substring(t),m=e,j.info("Removed and will replace clicked image at same position")}else j.warn("Could not find clicked image in text, will append instead")}else{const e=l.substring(m),t=/\s*<img\s+[^>]*>/g;let n,o=0;for(;null!==(n=t.exec(e))&&(n.index===o||""===e.substring(o,n.index).trim());)o=t.lastIndex;o>0&&(m+=o)}const g=function(e,t,n,o){const r=(0,f.g)(e,o).find((e=>e.prompt===t));if(!r)return 0;const a=r.fullMatch,i=r.startIndex,s=e.substring(i+a.length),l=/\s*<img\s+[^>]*>/g;let c,u=0,d=0;const m=new RegExp(`AI generated image #${n} \\(Regenerated (\\d+)\\)`);for(;null!==(c=l.exec(s))&&(c.index===d||""===s.substring(d,c.index).trim());){d=l.lastIndex;const e=c[0].match(m);if(e){const t=parseInt(e[1],10);t>u&&(u=t)}}return u}(l,i,c,r.promptDetectionPatterns),p=`AI generated image #${c} (Regenerated ${g+1})`,h=`\n<img src="${s}" title="${p}" alt="${p}">`;l=l.substring(0,m)+h+l.substring(m),a.mes=l;const v=o.eventTypes.MESSAGE_EDITED;await o.eventSource.emit(v,e),o.updateMessageBlock(e,a);const b=o.eventTypes.MESSAGE_UPDATED;return await o.eventSource.emit(b,e),await o.saveChat(),toastr.success((0,G.t)("toast.imageRegenerated"),(0,G.t)("extensionName")),j.info("Image regenerated successfully"),setTimeout((()=>{te(o,r)}),100),1}catch(e){return j.error("Error during image regeneration:",e),toastr.error((0,G.t)("toast.failedToGenerateImage"),(0,G.t)("extensionName")),0}}(e,t,n,o,r)})),a}async function Z(e,t,n,o){if(pe(e))return void toastr.warning((0,G.t)("toast.cannotManualWhileStreaming"),(0,G.t)("extensionName"));if(X(e))return void toastr.warning((0,G.t)("toast.cannotUpdateDuringGeneration"),(0,G.t)("extensionName"));let r=!1;await H(e,(async()=>{r=await async function(e,t,n,o){const r=$("#auto_illustrator_prompt_update_dialog");if(r.length>0)return j.debug("Dialog already open, closing it"),$(".auto-illustrator-dialog-backdrop").remove(),r.remove(),!1;const a=n.chat?.[e];if(!a)return j.error("Message not found:",e),toastr.error((0,G.t)("toast.messageNotFound"),(0,G.t)("extensionName")),!1;j.debug("showPromptUpdateDialogImpl called",{messageId:e,imageSrc:t,messageText:a.mes.substring(0,200)});const i=function(e,t,n,o){const r=new RegExp(`<img\\s+src="${t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}"[^>]*>`,"g").exec(n);if(!r)return j.warn("Image not found in message text:",t),null;const a=r.index,i=n.substring(0,a),s=(0,f.g)(i,o);if(0===s.length)return j.warn("No prompt found before image"),null;const l=s[s.length-1].prompt,c=(0,f.g)(n,o).findIndex((e=>e.prompt===l));return-1===c?(j.warn("Could not find prompt index in full message"),null):{messageId:e,promptIndex:c}}(e,t,a.mes,o.promptDetectionPatterns);if(!i)return j.error("Could not find prompt position for image",{imageSrc:t,messageId:e}),toastr.error((0,G.t)("toast.promptNotFoundForImage"),(0,G.t)("extensionName")),!1;j.debug("Found prompt position",i);const s=(0,P.PW)(i,n),l=s?(0,P.WJ)(s,n):Q(a.mes,t,o.promptDetectionPatterns);if(!l)return toastr.error((0,G.t)("toast.promptNotFoundForImage"),(0,G.t)("extensionName")),!1;const c=l;if(j.debug("Current prompt extracted",{currentPrompt:c,currentPromptId:s}),!s){j.info("Initializing metadata for legacy prompt",{position:i,promptText:c});const e=(0,P.yj)(c,n);(0,P.K5)(i,e,n)}const u=await new Promise((e=>{const t=$("<div>").addClass("auto-illustrator-dialog-backdrop"),n=$("<div>").attr("id","auto_illustrator_prompt_update_dialog").addClass("auto-illustrator-dialog");n.append($("<h3>").text((0,G.t)("dialog.updatePromptTitle"))),n.append($("<label>").text((0,G.t)("dialog.currentPrompt")));const o=$("<div>").addClass("auto-illustrator-current-prompt").text(c);n.append(o),n.append($("<label>").text((0,G.t)("dialog.userFeedback")));const r=$("<textarea>").addClass("auto-illustrator-feedback-textarea").attr("placeholder",(0,G.t)("dialog.feedbackPlaceholder")).attr("rows","4");n.append(r);const a=$("<div>").addClass("auto-illustrator-dialog-buttons"),i=$("<button>").text((0,G.t)("dialog.updateWithAI")).addClass("menu_button").on("click",(()=>{const o=r.val();o&&""!==o.trim()?(t.remove(),n.remove(),e(o.trim())):toastr.warning((0,G.t)("toast.feedbackRequired"),(0,G.t)("extensionName"))})),s=$("<button>").text((0,G.t)("dialog.cancel")).addClass("menu_button").on("click",(()=>{t.remove(),n.remove(),e(null)}));a.append(i).append(s),n.append(a),$("body").append(t).append(n),t.on("click",(()=>{t.remove(),n.remove(),e(null)})),r.focus()}));if(!u)return j.info("Prompt update cancelled by user"),!1;try{toastr.info((0,G.t)("toast.updatingPromptWithAI"),(0,G.t)("extensionName"));const t=await V(i,u,n);if(!t)return j.error("Failed to update prompt - LLM returned null"),toastr.error((0,G.t)("toast.failedToUpdatePrompt"),(0,G.t)("extensionName")),!1;const r=(0,P.WJ)(t,n);if(!r)return j.error("Failed to get prompt text for new prompt ID"),toastr.error((0,G.t)("toast.failedToUpdatePrompt"),(0,G.t)("extensionName")),!1;j.info(`Prompt updated: "${c}" -> "${r}"`);const s=(0,f.g)(a.mes,o.promptDetectionPatterns)[i.promptIndex];if(!s)return j.error("Could not find prompt match in message"),toastr.error((0,G.t)("toast.failedToUpdatePrompt"),(0,G.t)("extensionName")),!1;let l=a.mes;const d=s.fullMatch,m=c.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),g=d.replace(new RegExp(m,"g"),r);l=l.replace(d,g),a.mes=l;const p=n.eventTypes.MESSAGE_EDITED;await n.eventSource.emit(p,e),n.updateMessageBlock(e,a);const h=n.eventTypes.MESSAGE_UPDATED;await n.eventSource.emit(h,e),await n.saveChat(),toastr.success((0,G.t)("toast.promptUpdated"),(0,G.t)("extensionName"));const y=await new Promise((e=>{const t=$("<div>").addClass("auto-illustrator-dialog-backdrop"),n=$("<div>").attr("id","auto_illustrator_regen_confirm_dialog").addClass("auto-illustrator-dialog");n.append($("<p>").text((0,G.t)("dialog.promptUpdatedRegenerate")));const o=$("<div>").addClass("auto-illustrator-dialog-buttons"),r=$("<button>").text((0,G.t)("dialog.yes")).addClass("menu_button").on("click",(()=>{t.remove(),n.remove(),e(!0)})),a=$("<button>").text((0,G.t)("dialog.no")).addClass("menu_button").on("click",(()=>{t.remove(),n.remove(),e(!1)}));o.append(r).append(a),n.append(o),$("body").append(t).append(n),t.on("click",(()=>{t.remove(),n.remove(),e(!1)}))}));return j.info("User chose to regenerate:",y),y}catch(e){return j.error("Error updating prompt:",e),toastr.error((0,G.t)("toast.failedToUpdatePrompt"),(0,G.t)("extensionName")),!1}}(e,t,n,o)})),r&&(j.info("Queueing regeneration after prompt update"),await K(e,t,"replace",n,o))}async function ee(e,t,n,o){if(pe(e))return void toastr.warning((0,G.t)("toast.cannotGenerateMessageStreaming"),(0,G.t)("extensionName"));const r=$("#auto_illustrator_regen_dialog");if(r.length>0)return j.debug("Dialog already open, closing it"),$(".auto-illustrator-dialog-backdrop").remove(),void r.remove();const a=(0,G.t)("dialog.whatToDo"),i=await new Promise((e=>{const t=$("<div>").addClass("auto-illustrator-dialog-backdrop"),n=$("<div>").attr("id","auto_illustrator_regen_dialog").addClass("auto-illustrator-dialog");n.append($("<p>").text(a));const r=$("<div>").addClass("auto-illustrator-mode-group"),i=$("<label>").addClass("auto-illustrator-mode-option").append($("<input>").attr("type","radio").attr("name","regen_mode").val("replace").prop("checked","replace"===o.manualGenerationMode)).append($("<span>").html(`<strong>${(0,G.t)("dialog.replace")}</strong> ${(0,G.t)("dialog.replaceRegen")}`)),s=$("<label>").addClass("auto-illustrator-mode-option").append($("<input>").attr("type","radio").attr("name","regen_mode").val("append").prop("checked","append"===o.manualGenerationMode)).append($("<span>").html(`<strong>${(0,G.t)("dialog.append")}</strong> ${(0,G.t)("dialog.appendRegen")}`));r.append(s).append(i),n.append(r);const l=$("<div>").addClass("auto-illustrator-dialog-buttons"),c=$("<button>").text((0,G.t)("dialog.generate")).addClass("menu_button").on("click",(()=>{const o=n.find('input[name="regen_mode"]:checked').val();t.remove(),n.remove(),e(o)})),u=$("<button>").text((0,G.t)("dialog.updatePrompt")).addClass("menu_button").on("click",(()=>{t.remove(),n.remove(),e("update_prompt")})),d=$("<button>").text((0,G.t)("dialog.delete")).addClass("menu_button caution").on("click",(()=>{t.remove(),n.remove(),e("delete")})),m=$("<button>").text((0,G.t)("dialog.cancel")).addClass("menu_button").on("click",(()=>{t.remove(),n.remove(),e(null)}));l.append(c).append(u).append(d).append(m),n.append(l),$("body").append(t).append(n),t.on("click",(()=>{t.remove(),n.remove(),e(null)}))}));i?"delete"===i?await async function(e,t,n,o){const r=n.chat?.[e];if(!r)return j.error("Message not found:",e),toastr.error((0,G.t)("toast.messageNotFound"),(0,G.t)("extensionName")),!1;let a=r.mes||"";const i=a.length,s=t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),l=new RegExp(`\\s*<img\\s+src="${s}"[^>]*>`,"g");if(a=a.replace(l,""),a.length===i)return j.warn("Image not found in message text"),toastr.warning((0,G.t)("toast.imageNotFound"),(0,G.t)("extensionName")),!1;r.mes=a;const c=n.eventTypes.MESSAGE_EDITED;await n.eventSource.emit(c,e),n.updateMessageBlock(e,r);const u=n.eventTypes.MESSAGE_UPDATED;return await n.eventSource.emit(u,e),await n.saveChat(),toastr.success((0,G.t)("toast.imageDeleted"),(0,G.t)("extensionName")),j.info("Image deleted successfully"),setTimeout((()=>{te(n,o)}),100),!0}(e,t,n,o):"update_prompt"===i?await Z(e,t,n,o):await K(e,t,i,n,o):j.info("Action cancelled by user")}function te(e,t){$('.mes_text img[title^="AI generated image"]').off("click.auto_illustrator_regen"),$('.mes_text img[title^="AI generated image"]').on("click.auto_illustrator_regen",(function(){const n=$(this),o=n.closest(".mes").attr("mesid");if(!o)return void j.warn("Could not find message ID for clicked image");const r=parseInt(o,10);if(isNaN(r))return void j.warn("Invalid message ID:",o);const a=n.attr("src");a?(j.info(`Image clicked: messageId=${r}, src=${a.substring(0,50)}...`),ee(r,a,e,t)):j.warn("Image has no src attribute")})),j.debug(`Added click handlers to ${$('.mes_text img[title^="AI generated image"]').length} images`)}function ne(e,t,n,o){const r=n.chat?.[t];if(!r||r.is_user)return;if(!(0,f.R)(r.mes))return;const a=$(e);if(a.find(".auto_illustrator_manual_gen").length>0)return;const i=$("<div>").addClass("mes_button auto_illustrator_manual_gen fa-solid fa-wand-magic-sparkles").attr("title",(0,G.t)("button.manualGenerate")).on("click",(async()=>{if(pe(t))toastr.warning((0,G.t)("toast.cannotGenerateMessageStreaming"),(0,G.t)("extensionName"));else{i.prop("disabled",!0),i.css("opacity","0.5");try{await async function(e,t,n){if(pe(e))return void toastr.warning((0,G.t)("toast.cannotGenerateMessageStreaming"),(0,G.t)("extensionName"));const o=$("#auto_illustrator_manual_gen_dialog");if(o.length>0)return j.debug("Dialog already open, closing it"),$(".auto-illustrator-dialog-backdrop").remove(),void o.remove();const r=t.chat?.[e];if(!r)return void j.warn("Message not found:",e);const a=(0,f.g)(r.mes,n.promptDetectionPatterns);if(0===a.length)return void toastr.info((0,G.t)("toast.noPromptsFound"),(0,G.t)("extensionName"));const i=(0,G.m)(a.length,"dialog.foundPrompts")+"\n\n"+(0,G.t)("dialog.howToGenerate"),s=await new Promise((e=>{const t=$("<div>").addClass("auto-illustrator-dialog-backdrop"),o=$("<div>").attr("id","auto_illustrator_manual_gen_dialog").addClass("auto-illustrator-dialog");o.append($("<p>").text(i));const r=$("<div>").addClass("auto-illustrator-mode-group"),a=$("<label>").addClass("auto-illustrator-mode-option").append($("<input>").attr("type","radio").attr("name","generation_mode").val("replace").prop("checked","replace"===n.manualGenerationMode)).append($("<span>").html(`<strong>${(0,G.t)("dialog.replace")}</strong> ${(0,G.t)("dialog.replaceDesc")}`)),s=$("<label>").addClass("auto-illustrator-mode-option").append($("<input>").attr("type","radio").attr("name","generation_mode").val("append").prop("checked","append"===n.manualGenerationMode)).append($("<span>").html(`<strong>${(0,G.t)("dialog.append")}</strong> ${(0,G.t)("dialog.appendDesc")}`));r.append(s).append(a),o.append(r);const l=$("<div>").addClass("auto-illustrator-dialog-buttons"),c=$("<button>").text((0,G.t)("dialog.generate")).addClass("menu_button").on("click",(()=>{const n=o.find('input[name="generation_mode"]:checked').val();t.remove(),o.remove(),e(n)})),u=$("<button>").text((0,G.t)("dialog.cancel")).addClass("menu_button").on("click",(()=>{t.remove(),o.remove(),e(null)}));l.append(c).append(u),o.append(l),$("body").append(t).append(o),t.on("click",(()=>{t.remove(),o.remove(),e(null)}))}));s?await J(e,s,t,n):j.info("Generation cancelled by user")}(t,n,o)}finally{i.prop("disabled",!1),i.css("opacity","1")}}})),s=a.find(".extraMesButtons");s.length>0&&s.append(i)}var oe=n(974);const re=(0,v.h)("Main");let ae,ie,se=!1,le=null,ce=null,ue=!1,de=null,me=null,ge=null;function pe(e){const t=me?.isActive()??!1;return void 0===e?t:t&&he===e}let he=null;function fe(){const e=document.getElementById(x.he.ENABLED),t=document.getElementById(x.he.META_PROMPT),n=document.getElementById(x.he.META_PROMPT_PRESET_SELECT),o=document.getElementById(x.he.META_PROMPT_PRESET_DELETE),r=document.getElementById(x.he.PRESET_EDITOR),a=document.getElementById(x.he.PRESET_VIEWER),i=document.getElementById(x.he.PRESET_PREVIEW),s=document.getElementById(x.he.STREAMING_ENABLED),l=document.getElementById(x.he.STREAMING_POLL_INTERVAL),c=document.getElementById(x.he.MAX_CONCURRENT),u=document.getElementById(x.he.MIN_GENERATION_INTERVAL),d=document.getElementById(x.he.LOG_LEVEL),m=document.getElementById(x.he.PROMPT_PATTERNS),g=document.getElementById(x.he.COMMON_STYLE_TAGS),p=document.getElementById(x.he.COMMON_STYLE_TAGS_POSITION),h=document.getElementById(x.he.MANUAL_GEN_MODE);if(e&&(e.checked=ie.enabled),s&&(s.checked=ie.streamingEnabled),l&&(l.value=ie.streamingPollInterval.toString()),c&&(c.value=ie.maxConcurrentGenerations.toString()),u&&(u.value=ie.minGenerationInterval.toString()),d&&(d.value=ie.logLevel),m&&(m.value=ie.promptDetectionPatterns.join("\n")),g&&(g.value=ie.commonStyleTags),p&&(p.value=ie.commonStyleTagsPosition),h&&(h.value=ie.manualGenerationMode),n){const e=n.querySelector("#custom_presets_group");e&&(e.innerHTML="",ie.customPresets.forEach((t=>{const n=document.createElement("option");n.value=t.id,n.textContent=t.name,e.appendChild(n)}))),n.value=ie.currentPresetId}if(o){const e=O(ie.currentPresetId);o.disabled=e,o.title=e?"Cannot delete predefined presets":"Delete custom preset"}i&&(i.textContent=ie.metaPrompt),t&&(t.value=ie.metaPrompt),r&&(r.style.display="none"),a&&(a.style.display="block"),se=!1,ye()}function ye(){const e=document.getElementById(x.he.PATTERN_VALIDATION_STATUS);if(!e)return;const t=function(){const e=ie.metaPrompt,t=ie.promptDetectionPatterns;if(!e||!t||0===t.length)return!1;try{return(0,oe.lJ)(e,t).length>0}catch(e){return re.warn("Error validating prompt patterns:",e),!1}}();e.className="pattern-validation-status",t?(e.classList.add("validation-success"),e.innerHTML=`\n      <span class="validation-message">${(0,G.t)("settings.validationSuccess")}</span>\n    `):(e.classList.add("validation-warning"),e.innerHTML=`\n      <span class="validation-message">${(0,G.t)("settings.validationWarning")}</span>\n      <span class="validation-hint">${(0,G.t)("settings.validationHint")}</span>\n    `)}function ve(e,t,n,o){const r=Math.round(e/o)*o;return Math.max(t,Math.min(n,r))}function be(){const e=document.getElementById(x.he.ENABLED),t=document.getElementById(x.he.META_PROMPT),n=document.getElementById(x.he.STREAMING_ENABLED),o=document.getElementById(x.he.STREAMING_POLL_INTERVAL),r=document.getElementById(x.he.MAX_CONCURRENT),a=document.getElementById(x.he.MIN_GENERATION_INTERVAL),i=document.getElementById(x.he.LOG_LEVEL),s=document.getElementById(x.he.PROMPT_PATTERNS),l=document.getElementById(x.he.COMMON_STYLE_TAGS),c=document.getElementById(x.he.COMMON_STYLE_TAGS_POSITION),u=document.getElementById(x.he.MANUAL_GEN_MODE);if(ie.enabled=e?.checked??ie.enabled,ie.metaPrompt=t?.value??ie.metaPrompt,ie.streamingEnabled=n?.checked??ie.streamingEnabled,o){const e=parseInt(o.value),t=ve(e,x.BB.MIN,x.BB.MAX,x.BB.STEP);ie.streamingPollInterval=t,o.value=t.toString(),t!==e&&toastr.warning((0,G.t)("toast.valueAdjusted",{original:e,clamped:t,min:x.BB.MIN,max:x.BB.MAX,step:x.BB.STEP}),(0,G.t)("extensionName"))}if(r){const e=parseInt(r.value),t=ve(e,x.zY.MIN,x.zY.MAX,x.zY.STEP);ie.maxConcurrentGenerations=t,r.value=t.toString(),t!==e&&toastr.warning((0,G.t)("toast.valueAdjustedNoStep",{original:e,clamped:t,min:x.zY.MIN,max:x.zY.MAX}),(0,G.t)("extensionName"))}if(a){const e=parseInt(a.value),t=ve(e,x.uF.MIN,x.uF.MAX,x.uF.STEP);ie.minGenerationInterval=t,a.value=t.toString(),t!==e&&toastr.warning((0,G.t)("toast.valueAdjusted",{original:e,clamped:t,min:x.uF.MIN,max:x.uF.MAX,step:x.uF.STEP}),(0,G.t)("extensionName"))}ie.logLevel=i?.value??ie.logLevel,ie.promptDetectionPatterns=s?s.value.split("\n").map((e=>e.trim())).filter((e=>e.length>0)):ie.promptDetectionPatterns,ie.commonStyleTags=l?.value??ie.commonStyleTags,ie.commonStyleTagsPosition=c?.value??ie.commonStyleTagsPosition,ie.manualGenerationMode=u?.value??ie.manualGenerationMode,(0,v.He)(ie.logLevel),(0,y.xn)(ie.maxConcurrentGenerations),(0,y.Hl)(ie.minGenerationInterval),U(ie,ae),ye(),re.info("Settings updated:",ie)}function Ee(){ie=B(),U(ie,ae),fe(),re.info("Settings reset to defaults")}function xe(){const e=document.getElementById(x.he.PROMPT_PATTERNS);e&&(e.value=x.DV.join("\n"),be()),re.info("Prompt patterns reset to defaults")}function we(){se&&Pe();const e=document.getElementById(x.he.META_PROMPT_PRESET_SELECT);if(!e)return;const t=e.value,n=D(t,ie.customPresets);ie.currentPresetId=t,ie.metaPrompt=n.template,U(ie,ae),fe(),re.info("Preset changed:",{id:t,name:n.name})}function Te(){const e=document.getElementById(x.he.PRESET_EDITOR),t=document.getElementById(x.he.PRESET_VIEWER),n=document.getElementById(x.he.META_PROMPT),o=document.getElementById(x.he.META_PROMPT_PRESET_SAVE);if(e&&t&&n){if(t.style.display="none",e.style.display="block",n.removeAttribute("readonly"),n.value=ie.metaPrompt,o){const e=O(ie.currentPresetId);o.disabled=e,o.title=e?"Cannot save changes to predefined presets (use Save As)":"Save changes to this preset"}se=!0,re.info("Entered preset edit mode")}}function Ie(){if(O(ie.currentPresetId))return void toastr.error((0,G.t)("settings.cannotDeletePredefined"),(0,G.t)("extensionName"));const e=document.getElementById(x.he.META_PROMPT);if(!e)return;const t=e.value,n=ie.customPresets.findIndex((e=>e.id===ie.currentPresetId));if(-1===n)return void toastr.error((0,G.t)("toast.presetNotFound"),(0,G.t)("extensionName"));ie.customPresets[n].template=t,ie.metaPrompt=t,U(ie,ae);const o=document.getElementById(x.he.PRESET_EDITOR),r=document.getElementById(x.he.PRESET_VIEWER);o&&(o.style.display="none"),r&&(r.style.display="block"),se=!1,fe(),toastr.success((0,G.t)("toast.presetSaved"),(0,G.t)("extensionName")),re.info("Preset saved:",ie.customPresets[n].name)}function _e(){const e=document.getElementById(x.he.META_PROMPT);if(!e)return;const t=e.value,n=prompt((0,G.t)("prompt.enterPresetName"));if(!n||""===n.trim())return;const o=n.trim();if(function(e){const t=e.toLowerCase();return L.some((e=>e.name.toLowerCase()===t))}(o))return void toastr.error((0,G.t)("toast.cannotUsePredefinedNames"),(0,G.t)("extensionName"));const r=ie.customPresets.find((e=>e.name===o));if(r){if(!confirm((0,G.t)("prompt.overwritePreset",{name:o})))return;r.template=t,ie.currentPresetId=r.id,ie.metaPrompt=t}else{const e={id:`custom-${Date.now()}`,name:o,template:t,predefined:!1};ie.customPresets.push(e),ie.currentPresetId=e.id,ie.metaPrompt=t}U(ie,ae);const a=document.getElementById(x.he.PRESET_EDITOR),i=document.getElementById(x.he.PRESET_VIEWER);a&&(a.style.display="none"),i&&(i.style.display="block"),se=!1,fe(),toastr.success((0,G.t)("toast.presetSavedNamed",{name:o}),(0,G.t)("extensionName")),re.info("Preset saved as:",o)}function Pe(){const e=document.getElementById(x.he.PRESET_EDITOR),t=document.getElementById(x.he.PRESET_VIEWER),n=document.getElementById(x.he.META_PROMPT);e&&t&&n&&(e.style.display="none",t.style.display="block",n.setAttribute("readonly","readonly"),n.value=ie.metaPrompt,se=!1,re.info("Cancelled preset edit"))}function Se(){if(O(ie.currentPresetId))return void toastr.error((0,G.t)("toast.cannotDeletePredefined"),(0,G.t)("extensionName"));const e=ie.customPresets.find((e=>e.id===ie.currentPresetId));if(!e)return void toastr.error((0,G.t)("toast.presetNotFound"),(0,G.t)("extensionName"));if(!confirm((0,G.t)("prompt.overwritePreset",{name:e.name})))return;ie.customPresets=ie.customPresets.filter((e=>e.id!==ie.currentPresetId)),ie.currentPresetId="default";const t=D("default",ie.customPresets);ie.metaPrompt=t.template,U(ie,ae),fe(),toastr.success((0,G.t)("toast.presetDeleted",{name:e.name}),(0,G.t)("extensionName")),re.info("Preset deleted:",e.name)}function Ae(){if(me?.isActive())return;if(!ie.streamingEnabled||!ie.enabled)return;if(!ae.chat||0===ae.chat.length)return;const e=ae.chat.length-1,t=ae.chat[e];t.is_user||t.is_system||(X(e)?re.info(`Cannot start streaming for message ${e}: manual generation active`):me&&he===e?re.debug(`Already monitoring message ${e}, skipping reinitialization`):(re.info(`First stream token received, starting streaming for message ${e}`),me&&me.stop(),ge&&ge.stop(),de=new _,ge=new N(de,ae,ie,ie.maxConcurrentGenerations),me=new A(de,ae,ie,ie.streamingPollInterval,(()=>ge?.trigger())),he=e,ue=!1,ce=null,me.start(e),ge.start(e),re.info("Streaming monitor and processor started")))}async function Me(){if(ce&&ue){const{images:e,messageId:t}=ce;re.info(`Both conditions met, inserting ${e.length} deferred images`),ce=null,ue=!1;const{insertDeferredImages:o}=await Promise.resolve().then(n.bind(n,690));await o(e,t,ae)}}async function $e(){if(le=null,re.debug("Generation ended, cleared generation type"),!me||!ge||!de)return;re.info("GENERATION_ENDED, cleaning up streaming"),me.finalScan(),me.stop(),await ge.processRemaining();const e=ge.getDeferredImages(),t=he,n=de.getStats();re.info("Final streaming stats:",n),re.info(`Deferred images count: ${e.length} for message ${t}`),ge.stop(),e.length>0&&null!==t&&(ce={images:e,messageId:t},re.info(`${e.length} images ready, checking if MESSAGE_RECEIVED fired`)),de=null,me=null,ge=null,he=null;const o=n.FAILED;o>0&&toastr.warning((0,G.t)("toast.streamingFailed",{count:o}),(0,G.t)("extensionName")),await Me()}function Ne(){re.debug("Adding manual generation buttons to existing messages"),$(".mes").each(((e,t)=>{const n=$(t),o=n.attr("mesid");if(o){const e=parseInt(o,10);isNaN(e)||ne(n,e,ae,ie)}}))}!function(){re.info("Initializing extension...");try{ae=SillyTavern.getContext(),re.info("Got SillyTavern context")}catch(e){return void re.error("Failed to get SillyTavern context:",e)}(0,G.J)(ae),re.info("Initialized i18n"),ie=F(ae),re.info("Loaded settings:",ie),(0,v.He)(ie.logLevel),(0,y.SV)(ie.maxConcurrentGenerations,ie.minGenerationInterval),re.info(`Initialized concurrency limiter: max=${ie.maxConcurrentGenerations}, minInterval=${ie.minGenerationInterval}ms`);const e=E(ae,(e=>he===e),ie,(()=>(re.info("MESSAGE_RECEIVED callback invoked, setting flag"),ue=!0,Me(),null))),t=ae.eventTypes.MESSAGE_RECEIVED;ae.eventSource.on(t,e),ae.eventSource.on(t,(e=>{setTimeout((()=>{const t=$(`.mes[mesid="${e}"]`);t.length>0&&ne(t,e,ae,ie),te(ae,ie)}),100)}));const n=ae.eventTypes.MESSAGE_UPDATED;ae.eventSource.on(n,(()=>{setTimeout((()=>{te(ae,ie)}),100)}));const o=ae.eventTypes.GENERATION_STARTED;ae.eventSource.on(o,((e,t,n)=>{n?re.debug("Generation started (dry run), skipping type tracking",{type:e}):(le=e,re.info("Generation started (actual)",{type:e}))}));const r=ae.eventTypes.CHAT_COMPLETION_PROMPT_READY;ae.eventSource.on(r,(e=>{if(e?.dryRun)return void re.info("Skipping prompt ready processing for dry run");if(!e?.chat)return;!function(e,t=x.DV){w.info("Pruning generated images from chat history");for(const n of e){if("user"===n.role||"system"===n.role)continue;const e=(0,f.g)(n.content,t);let o=n.content;for(let t=e.length-1;t>=0;t--){const n=e[t],r=o.substring(n.endIndex),a=/^\s*<img\s+[^>]*>/g;let i,s=0;for(;null!==(i=a.exec(r))&&i.index===s;)s+=i[0].length,a.lastIndex=s;s>0&&(o=o.substring(0,n.endIndex)+o.substring(n.endIndex+s))}n.content!==o&&(n.content=o,w.info("Pruned generated images from assistant message"))}}(e.chat);const t=le||"normal";ie.enabled&&ie.metaPrompt&&!["quiet","impersonate"].includes(t)?(re.info("Injecting meta-prompt as last system message",{currentGenerationType:le,effectiveType:t,metaPromptLength:ie.metaPrompt.length}),e.chat.push({role:"system",content:ie.metaPrompt})):re.info("Skipping meta-prompt injection",{enabled:ie.enabled,hasMetaPrompt:!!ie.metaPrompt,currentGenerationType:le,effectiveType:t,reason:ie.enabled?ie.metaPrompt?`generation type is ${t}`:"no meta-prompt":"extension disabled"})}));const a=ae.eventTypes.STREAM_TOKEN_RECEIVED,i=ae.eventTypes.GENERATION_ENDED;ae.eventSource.on(a,Ae),ae.eventSource.on(i,$e),re.info("Event handlers registered:",{MESSAGE_RECEIVED:t,MESSAGE_UPDATED:n,GENERATION_STARTED:o,CHAT_COMPLETION_PROMPT_READY:r,STREAM_TOKEN_RECEIVED:a,GENERATION_ENDED:i});const s=document.getElementById("extensions_settings2");if(s){const e=`\n    <div class="auto-illustrator-settings">\n      <div class="inline-drawer">\n        <div class="inline-drawer-toggle inline-drawer-header">\n          <b>${(0,G.t)("extensionName")}</b>\n          <div class="inline-drawer-icon fa-solid fa-circle-chevron-down down"></div>\n        </div>\n        <div class="inline-drawer-content">\n          <div style="display: flex; align-items: center; justify-content: space-between;">\n            <label class="checkbox_label" for="${x.he.ENABLED}">\n              <input id="${x.he.ENABLED}" type="checkbox" />\n              <span>${(0,G.t)("settings.enable")}</span>\n            </label>\n            <div id="${x.he.RESET_BUTTON}" class="menu_button menu_button_icon">\n              <i class="fa-solid fa-undo"></i>\n              <span>${(0,G.t)("settings.resetDefaults")}</span>\n            </div>\n          </div>\n\n          <div class="preset-management">\n            <label>${(0,G.t)("settings.metaPromptPreset")}</label>\n            <div class="preset-toolbar">\n              <select id="${x.he.META_PROMPT_PRESET_SELECT}" class="text_pole flex_fill">\n                <optgroup label="${(0,G.t)("settings.predefinedPresets")}">\n                  <option value="default">Default</option>\n                  <option value="nai-4.5-full">NAI 4.5 Full</option>\n                </optgroup>\n                <optgroup label="${(0,G.t)("settings.customPresets")}" id="custom_presets_group">\n                  \x3c!-- populated by JavaScript --\x3e\n                </optgroup>\n              </select>\n              <button id="${x.he.META_PROMPT_PRESET_EDIT}" class="menu_button menu_button_icon" title="${(0,G.t)("settings.editPreset")}">\n                <i class="fa-solid fa-edit"></i>\n              </button>\n              <button id="${x.he.META_PROMPT_PRESET_DELETE}" class="menu_button menu_button_icon" title="${(0,G.t)("settings.deletePreset")}">\n                <i class="fa-solid fa-trash"></i>\n              </button>\n            </div>\n\n            <div id="${x.he.PRESET_EDITOR}" style="display:none">\n              <label for="${x.he.META_PROMPT}">\n                <span>${(0,G.t)("settings.metaPromptTemplate")}</span>\n                <small>${(0,G.t)("settings.editingPresetHint")}</small>\n                <textarea id="${x.he.META_PROMPT}" class="text_pole textarea_compact" rows="10" readonly></textarea>\n              </label>\n              <div class="preset-edit-actions">\n                <button id="${x.he.META_PROMPT_PRESET_SAVE}" class="menu_button">\n                  <i class="fa-solid fa-save"></i> ${(0,G.t)("settings.save")}\n                </button>\n                <button id="${x.he.META_PROMPT_PRESET_SAVE_AS}" class="menu_button">\n                  <i class="fa-solid fa-copy"></i> ${(0,G.t)("settings.saveAs")}\n                </button>\n                <button id="${x.he.META_PROMPT_PRESET_CANCEL}" class="menu_button">\n                  <i class="fa-solid fa-times"></i> ${(0,G.t)("settings.cancel")}\n                </button>\n              </div>\n            </div>\n\n            <div id="${x.he.PRESET_VIEWER}" class="preset-content-preview">\n              <label>${(0,G.t)("settings.presetContentPreview")}</label>\n              <pre id="${x.he.PRESET_PREVIEW}" class="preset-preview-text"></pre>\n            </div>\n\n            <div id="${x.he.PATTERN_VALIDATION_STATUS}" class="pattern-validation-status">\n              \x3c!-- Validation status will be populated by JavaScript --\x3e\n            </div>\n          </div>\n\n          <hr>\n\n          <label class="checkbox_label" for="${x.he.STREAMING_ENABLED}">\n            <input id="${x.he.STREAMING_ENABLED}" type="checkbox" />\n            <span>${(0,G.t)("settings.streamingEnabled")}</span>\n            <small>${(0,G.t)("settings.streamingEnabledDesc")}</small>\n          </label>\n\n          <label for="${x.he.STREAMING_POLL_INTERVAL}">\n            <span>${(0,G.t)("settings.streamingPollInterval")}</span>\n            <small>${(0,G.t)("settings.streamingPollIntervalDesc")}</small>\n            <input id="${x.he.STREAMING_POLL_INTERVAL}" class="text_pole" type="number" min="${x.BB.MIN}" max="${x.BB.MAX}" step="${x.BB.STEP}" />\n          </label>\n\n          <label for="${x.he.MAX_CONCURRENT}">\n            <span>${(0,G.t)("settings.maxConcurrent")}</span>\n            <small>${(0,G.t)("settings.maxConcurrentDesc")}</small>\n            <input id="${x.he.MAX_CONCURRENT}" class="text_pole" type="number" min="${x.zY.MIN}" max="${x.zY.MAX}" step="${x.zY.STEP}" />\n          </label>\n\n          <label for="${x.he.MIN_GENERATION_INTERVAL}">\n            <span>${(0,G.t)("settings.minGenerationInterval")}</span>\n            <small>${(0,G.t)("settings.minGenerationIntervalDesc")}</small>\n            <input id="${x.he.MIN_GENERATION_INTERVAL}" class="text_pole" type="number" min="${x.uF.MIN}" max="${x.uF.MAX}" step="${x.uF.STEP}" />\n          </label>\n\n          <label for="${x.he.PROMPT_PATTERNS}">\n            <span>${(0,G.t)("settings.promptPatterns")}</span>\n            <small>${(0,G.t)("settings.promptPatternsDesc")}</small>\n            <div style="display: flex; gap: 0.5rem; align-items: flex-start;">\n              <textarea id="${x.he.PROMPT_PATTERNS}" class="text_pole textarea_compact" rows="5" style="flex: 1;"></textarea>\n              <button id="${x.he.PROMPT_PATTERNS_RESET}" class="menu_button menu_button_icon" title="${(0,G.t)("settings.promptPatternsReset")}">\n                <i class="fa-solid fa-undo"></i>\n              </button>\n            </div>\n          </label>\n\n          <label for="${x.he.COMMON_STYLE_TAGS}">\n            <span>${(0,G.t)("settings.commonStyleTags")}</span>\n            <small>${(0,G.t)("settings.commonStyleTagsDesc")}</small>\n            <textarea id="${x.he.COMMON_STYLE_TAGS}" class="text_pole textarea_compact" rows="3" placeholder="${(0,G.t)("settings.commonStyleTagsPlaceholder")}"></textarea>\n          </label>\n\n          <label for="${x.he.COMMON_STYLE_TAGS_POSITION}">\n            <span>${(0,G.t)("settings.commonStyleTagsPosition")}</span>\n            <select id="${x.he.COMMON_STYLE_TAGS_POSITION}" class="text_pole">\n              <option value="prefix">${(0,G.t)("settings.commonStyleTagsPrefix")}</option>\n              <option value="suffix">${(0,G.t)("settings.commonStyleTagsSuffix")}</option>\n            </select>\n          </label>\n\n          <label for="${x.he.MANUAL_GEN_MODE}">\n            <span>${(0,G.t)("settings.manualGenerationMode")}</span>\n            <small>${(0,G.t)("settings.manualGenerationModeDesc")}</small>\n            <select id="${x.he.MANUAL_GEN_MODE}" class="text_pole">\n              <option value="append">${(0,G.t)("settings.manualGenerationModeAppend")}</option>\n              <option value="replace">${(0,G.t)("settings.manualGenerationModeReplace")}</option>\n            </select>\n          </label>\n\n          <label for="${x.he.LOG_LEVEL}">\n            <span>${(0,G.t)("settings.logLevel")}</span>\n            <small>${(0,G.t)("settings.logLevelDesc")}</small>\n            <select id="${x.he.LOG_LEVEL}" class="text_pole">\n              <option value="trace">${(0,G.t)("settings.logLevel.trace")}</option>\n              <option value="debug">${(0,G.t)("settings.logLevel.debug")}</option>\n              <option value="info">${(0,G.t)("settings.logLevel.info")}</option>\n              <option value="warn">${(0,G.t)("settings.logLevel.warn")}</option>\n              <option value="error">${(0,G.t)("settings.logLevel.error")}</option>\n              <option value="silent">${(0,G.t)("settings.logLevel.silent")}</option>\n            </select>\n          </label>\n        </div>\n      </div>\n    </div>\n  `.trim();s.insertAdjacentHTML("beforeend",e);const t=document.getElementById(x.he.ENABLED),n=document.getElementById(x.he.META_PROMPT_PRESET_SELECT),o=document.getElementById(x.he.META_PROMPT_PRESET_EDIT),r=document.getElementById(x.he.META_PROMPT_PRESET_SAVE),a=document.getElementById(x.he.META_PROMPT_PRESET_SAVE_AS),i=document.getElementById(x.he.META_PROMPT_PRESET_DELETE),l=document.getElementById(x.he.META_PROMPT_PRESET_CANCEL),c=document.getElementById(x.he.STREAMING_ENABLED),u=document.getElementById(x.he.STREAMING_POLL_INTERVAL),d=document.getElementById(x.he.MAX_CONCURRENT),m=document.getElementById(x.he.MIN_GENERATION_INTERVAL),g=document.getElementById(x.he.LOG_LEVEL),p=document.getElementById(x.he.PROMPT_PATTERNS),h=document.getElementById(x.he.PROMPT_PATTERNS_RESET),f=document.getElementById(x.he.COMMON_STYLE_TAGS),y=document.getElementById(x.he.COMMON_STYLE_TAGS_POSITION),v=document.getElementById(x.he.MANUAL_GEN_MODE),b=document.getElementById(x.he.RESET_BUTTON);t?.addEventListener("change",be),n?.addEventListener("change",we),o?.addEventListener("click",Te),r?.addEventListener("click",Ie),a?.addEventListener("click",_e),i?.addEventListener("click",Se),l?.addEventListener("click",Pe),c?.addEventListener("change",be),u?.addEventListener("change",be),d?.addEventListener("change",be),m?.addEventListener("change",be),g?.addEventListener("change",be),p?.addEventListener("change",be),h?.addEventListener("click",xe),f?.addEventListener("change",be),y?.addEventListener("change",be),v?.addEventListener("change",be),b?.addEventListener("click",Ee),fe()}re.info("Extension initialized successfully");const l=ae.eventTypes.CHAT_CHANGED;ae.eventSource.on(l,(()=>{re.info("CHAT_CHANGED - reloading settings"),ie=F(ae),(0,v.He)(ie.logLevel),(0,y.xn)(ie.maxConcurrentGenerations),(0,y.Hl)(ie.minGenerationInterval),fe(),setTimeout((()=>{Ne(),te(ae,ie)}),100)})),Ne(),te(ae,ie)}()})()})();